{"version":3,"sources":["pages/dashboards/Reports/Customers/data.js","pages/dashboards/Reports/Customers/index.js"],"names":["data","Biller","className","CustomerReport","getData","Request","text","useState","activeTab","setActiveTab","showDetails","setShowDetails","index","setIndex","analysis","setAnalysis","transRef","setTransRef","days","setDays","filterText","setFilterText","tabs","title","fetchData","a","response","code","console","log","allTransactionRecord","p2PTransactionRecord","cashOutTransactionRecord","savingsTransactionRecord","billPaymentTransactionRecord","walletTopUpTransactionRecord","refresh","updateDays","day","useEffect","map","tab","i","onClick","TransactionDetail","type","TabContent","TabPane","tabId","key","TabView","clicked","number","Loader"],"mappings":"gNAgBeA,EAfF,CACX,CAAE,mBAAoB,mBACtB,CAAE,mBAAoB,SACtB,CAAE,wBAAyB,oCAC3B,CAAE,UAAW,wBACb,CAAE,oBAAqB,mBACvB,CAAE,iBAAkB,eACpB,CAAE,iBAAkB,aACpB,CAAE,YAAa,cACf,CAAE,qBAAsB,gBACxB,CAAE,oBAAqB,gCACvB,CAAEC,OAAQ,eACV,CAAE,WAAY,uBAAGC,UAAU,QAAb,uBACd,CAAE,kBAAmB,6B,kBC+GRC,UArHQ,WACrB,IAAQC,EAAYC,cAAZD,QACFE,EAAO,CAAC,WAAY,cAAe,eAAgB,gBAEzD,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCN,mBAAS,MAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEA,EAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAoCZ,mBAASD,EAAK,IAAlD,mBAAOc,EAAP,KAAmBC,EAAnB,KAEMC,EAAO,CACX,MACA,eACA,UACA,UACA,eACA,iBAEIC,EAAQ,CAAC,MAAO,MAAO,UAAW,UAAW,QAAS,iBAEtDC,EAAS,uCAAG,0CAAAC,EAAA,sEACOrB,EAAQ,EAAGc,GADlB,OAEM,QADhBQ,EADU,QAEHC,OACXC,QAAQC,IAAIH,EAAS1B,MADK,EAStB0B,EAAS1B,KANX8B,EAHwB,EAGxBA,qBACAC,EAJwB,EAIxBA,qBACAC,EALwB,EAKxBA,yBACAC,EANwB,EAMxBA,yBACAC,EAPwB,EAOxBA,6BACAC,EARwB,EAQxBA,6BAEFpB,EAAY,CACVe,EACAC,EACAC,EACAC,EACAC,EACAC,KAlBY,2CAAH,qDAuBTC,EAAU,WACdrB,EAAY,MACZS,KAGIa,EAAa,SAACC,EAAK1B,GACnBQ,IAAed,EAAKM,KACtBG,EAAY,MACZI,EAAQmB,GACRjB,EAAcf,EAAKM,MAMvB,OAHA2B,qBAAU,WACRf,MACC,CAACN,IAEF,oCACE,oCACE,yBAAKhB,UAAU,eACb,yBAAKA,UAAU,OACZoB,EAAKkB,KAAI,SAACC,EAAKC,GAAN,OACR,yBACEC,QAAS,WACPlC,EAAaiC,GACb/B,GAAe,IAEjBT,UAAS,UAAKM,IAAckC,EAAI,aAAe,KAE/C,2BAAID,SAKV3B,EAGA,oCACIJ,EAoBA,kBAACkC,EAAA,EAAD,CACEjC,eAAgBA,EAChBY,MAAOD,EAAKV,GACZZ,KAAMA,EACN6C,KAAK,WACL7B,SAAUA,IAxBZ,kBAAC8B,EAAA,EAAD,CAAYtC,UAAWA,GACpBc,EAAKkB,KAAI,SAACC,EAAKC,GAAN,OACR,kBAACK,EAAA,EAAD,CAASC,MAAON,EAAGO,IAAKP,GACtB,kBAACQ,EAAA,EAAD,CACE3B,MAAOA,EAAMmB,GACbS,QAASxC,EACTC,MAAO8B,EACP7B,SAAUA,EACVuC,OAAO,WACPtC,SAAUA,EAAS4B,GACnBzB,YAAaA,EACboB,WAAYA,EACZjB,WAAYA,EACZgB,QAASA,UAjBrB,kBAACiB,EAAA,EAAD","file":"static/js/31.098b4d49.chunk.js","sourcesContent":["import React from \"react\";\nconst data = [\n  { \"Transaction Name\": \"Cash Withdrawal\" },\n  { \"Transaction Type\": \"Debit\" },\n  { \"Transaction reference\": \"SETTL-P2P-674662824627-533772882\" },\n  { \"Paid at\": \"Apr 15,2021 19:51:55\" },\n  { \"Withdrawal Source\": \"USSD Withdrawal\" },\n  { \"Recipient Name\": \"Joy Ademola\" },\n  { \"Recipient Bnak\": \"Wema Bank\" },\n  { \"Settl fee\": \"â‚¦0.00\" },\n  { \"Transaction source\": \"Card Payment\" },\n  { \"Billing reference\": \"GED7OT27ETD923723Y8E2E632GDL\" },\n  { Biller: \"Interswitch\" },\n  { \"Agent ID\": <p className=\"name\">156620050467658789</p> },\n  { \"Agent Wallet ID\": \"SETTL7OT27ETD923722E6322\" },\n];\nexport default data;\n","import React, { useState, useEffect } from \"react\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport TabView from \"../TabView\";\nimport TransactionDetail from \"../TransactionDetail\";\nimport data from \"./data\";\nimport Request from \"../request\";\nimport Loader from \"../../../../components/Loader\";\n\nconst CustomerReport = () => {\n  const { getData } = Request();\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n\n  const [activeTab, setActiveTab] = useState(0);\n  const [showDetails, setShowDetails] = useState(false);\n  const [index, setIndex] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [transRef, setTransRef] = useState(\"\");\n\n  const [days, setDays] = useState(30);\n  const [filterText, setFilterText] = useState(text[2]);\n\n  const tabs = [\n    \"All\",\n    \"Peer-to-Peer\",\n    \"Cashout\",\n    \"Savings\",\n    \"Bill Payment\",\n    \"Wallet top-up\",\n  ];\n  const title = [\"All\", \"P2P\", \"Cashout\", \"Savings\", \"Bills\", \"Wallet top-up\"];\n\n  const fetchData = async () => {\n    const response = await getData(1, days);\n    if (response.code === \"00\") {\n      console.log(response.data);\n      const {\n        allTransactionRecord,\n        p2PTransactionRecord,\n        cashOutTransactionRecord,\n        savingsTransactionRecord,\n        billPaymentTransactionRecord,\n        walletTopUpTransactionRecord,\n      } = response.data;\n      setAnalysis([\n        allTransactionRecord,\n        p2PTransactionRecord,\n        cashOutTransactionRecord,\n        savingsTransactionRecord,\n        billPaymentTransactionRecord,\n        walletTopUpTransactionRecord,\n      ]);\n    }\n  };\n\n  const refresh = () => {\n    setAnalysis(null);\n    fetchData();\n  };\n\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setAnalysis(null);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [days]);\n  return (\n    <>\n      <>\n        <div className=\"bg_absolute\">\n          <div className=\"nav\">\n            {tabs.map((tab, i) => (\n              <div\n                onClick={() => {\n                  setActiveTab(i);\n                  setShowDetails(false);\n                }}\n                className={`${activeTab === i ? \"active_nav\" : \"\"}`}\n              >\n                <p>{tab}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n        {!analysis ? (\n          <Loader />\n        ) : (\n          <>\n            {!showDetails ? (\n              <TabContent activeTab={activeTab}>\n                {tabs.map((tab, i) => (\n                  <TabPane tabId={i} key={i}>\n                    <TabView\n                      title={title[i]}\n                      clicked={setShowDetails}\n                      index={i}\n                      setIndex={setIndex}\n                      number=\"Customer\"\n                      analysis={analysis[i]}\n                      setTransRef={setTransRef}\n                      updateDays={updateDays}\n                      filterText={filterText}\n                      refresh={refresh}\n                    />\n                  </TabPane>\n                ))}\n              </TabContent>\n            ) : (\n              <TransactionDetail\n                setShowDetails={setShowDetails}\n                title={tabs[index]}\n                data={data}\n                type=\"Customer\"\n                transRef={transRef}\n              />\n            )}\n          </>\n        )}\n      </>\n    </>\n  );\n};\nexport default CustomerReport;\n"],"sourceRoot":""}