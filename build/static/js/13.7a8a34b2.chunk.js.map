{"version":3,"sources":["BgImages/search.svg","components/Header.js","assets/img/icons/referralicon.svg","components/TransactionCard.js","pages/dashboards/Referral/Statistics.js","pages/dashboards/Referral/TableHeader.js","pages/dashboards/Referral/Table.js","requests/referral.js","pages/dashboards/Referral/index.js"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearch","_ref","svgRef","title","props","createElement","width","height","viewBox","fill","ref","fillRule","clipRule","d","ForwardRef","forwardRef","Header","logo","name","calendar","updateDays","filterText","refresh","className","xs","src","alt","next","caret","color","style","backgroundColor","right","top","onClick","divider","module","exports","TransactionCard","total_amount","percentage","parseInt","upArrow","downArrow","Statistics","transactions","map","transaction","CSVExport","ExportCSVButton","csvData","filter","filtered","search","dataLength","Search","currentDateFormat","Date","setHours","useState","dropdownOpen","setDropdownOPen","startDate","setStartDate","endDate","setEndDate","status","setStatus","Change","e","set","array","push","toLowerCase","clearState","display","justifyContent","alignItems","margin","paddingLeft","Dropdown","isOpen","toggle","DropdownToggle","split","border","borderRadius","padding","DropdownMenu","FormGroup","Label","for","options","showCheckbox","showArrow","displayValue","placeholder","onSelect","onRemove","DatePicker","date","open","setDate","CardBody","Button","Col","lg","InputGroup","position","InputGroupAddon","addonType","zIndex","left","Input","type","onChange","value","Table","referralData","isfiltered","setIsFiltered","data","setData","useEffect","Filter","check","setTimeout","product","splitDate","slice","dataDate","includes","phoneNumber","startsWith","trim","columns","dataField","text","headerStyle","fontSize","formatter","cell","toLocaleString","row","rowIndex","textAlign","customTotal","from","to","size","rowStyle","cursor","responsive","keyField","csvProps","searchProps","marginTop","baseProps","bordered","pagination","paginationFactory","sizePerPage","hideSizePerPage","showTotal","paginationTotalRenderer","Loader","create_UUID","dt","getTime","replace","c","r","Math","random","floor","toString","requestId","ReferralsRequest","useSelector","state","user","details","token","tokenType","getAllReferrals","days","a","axios","get","baseURL","headers","Authorization","response","Referral","setFilterText","setDays","referrals","setReferrals","setReferralData","getRecentReferralsList","code","listOfReferral","totalReferralvol","percentReferralvol","totalReferralval","percentReferralval","referredBonus","percentReferredBonus","totalReferralLinkSent","numberofRegisteredReferred","percentRegisteredReferred","activereferral","percentActivereferral","day","index"],"mappings":"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","file":"static/js/13.7a8a34b2.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSearch = function SvgSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M3.90274 14.6979C0.921742 11.7169 0.921742 6.88375 3.90274 3.90274C6.88375 0.921742 11.7169 0.921742 14.6979 3.90274C17.4227 6.62755 17.6569 10.8998 15.4004 13.8906L18.4123 16.9024C19.1979 17.6881 18.0195 18.8666 17.2338 18.081L17.2337 18.081L14.2579 15.1052C11.2588 17.6721 6.74117 17.5363 3.90274 14.6979ZM13.5194 5.08126C11.1893 2.75113 7.41138 2.75113 5.08126 5.08126C2.75113 7.41138 2.75113 11.1893 5.08126 13.5194C7.41138 15.8495 11.1893 15.8495 13.5194 13.5194C15.8495 11.1893 15.8495 7.41138 13.5194 5.08126Z\",\n    fill: \"#92929D\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/search.df965596.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport {\n  Col,\n  Row,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { Calendar } from \"react-feather\";\nimport { RefreshButton } from \"./RefreshButton\";\nconst Header = ({ logo, name, calendar, updateDays, filterText, refresh }) => (\n  <Row className=\"mb-2 mb-xl-4 align-items-center\">\n    <Col xs=\"auto\" className=\"d-none d-sm-block\">\n      <h4 className=\"greeting\">\n        <img src={logo} className=\"\" alt=\"Settl Logo\" />\n        <span className=\"pl-2\">{name}</span>\n      </h4>\n    </Col>\n\n    {calendar && (\n      <Col xs=\"auto\" className=\"ml-auto text-right mt-n1 pr-3\">\n        <RefreshButton next={refresh} />\n        <UncontrolledDropdown className=\"d-inline filter-dropdown\">\n          <DropdownToggle\n            caret\n            color=\"light\"\n            className=\"shadow-sm\"\n            style={{\n              backgroundColor: \"white\",\n            }}\n          >\n            <Calendar className=\"feather align-middle mt-n1\" /> {filterText}\n          </DropdownToggle>\n          <DropdownMenu\n            right\n            style={{\n              top: \"25px\",\n            }}\n          >\n            <DropdownItem onClick={() => updateDays(1, 0)}>Today</DropdownItem>\n            <DropdownItem onClick={() => updateDays(7, 1)}>\n              Last 7 Days\n            </DropdownItem>\n            <DropdownItem onClick={() => updateDays(30, 2)}>\n              Last 30 Days\n            </DropdownItem>\n            <DropdownItem onClick={() => updateDays(90, 3)}>\n              Last 90 Days\n            </DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem>Customize</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </Col>\n    )}\n  </Row>\n);\nexport default Header;\n","module.exports = __webpack_public_path__ + \"static/media/referralicon.8b6e03d8.svg\";","import React from \"react\";\nimport upArrow from \"../assets/img/icons/uparrow.svg\";\nimport downArrow from \"../assets/img/icons/downarrow.svg\";\n\nconst TransactionCard = ({ name, total_amount, percentage }) => (\n  <div className=\"transaction_card\">\n    <div className=\"transaction_volume\">\n      <h4>{name}</h4>\n      <p>\n        {total_amount}\n        {\"     \"}\n        <span>\n          {parseInt(percentage) >= 0 ? (\n            <>\n              +{percentage} %{\" \"}\n              <img className=\"img-fluid\" src={upArrow} alt=\"uparrow\" />\n            </>\n          ) : (\n            <>\n              <span className=\"text-danger\"> {percentage} %</span>{\" \"}\n              <img className=\"img-fluid\" src={downArrow} alt=\"uparrow\" />\n            </>\n          )}\n        </span>{\" \"}\n      </p>\n      <p className=\"time\">Analytics for last 30 days</p>\n    </div>\n  </div>\n);\n\nexport default TransactionCard;\n","import React from \"react\";\nimport TransactionCard from \"../../../components/TransactionCard\";\n\nconst Statistics = (props) => {\n  return (\n    <div className=\"transaction_body\">\n      {props.transactions.map((transaction, i) => (\n        <TransactionCard\n          key={i}\n          name={transaction.name}\n          total_amount={transaction.total_amount}\n          percentage={transaction.percentage}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React, { useState } from \"react\";\nimport {\n  DropdownToggle,\n  DropdownMenu,\n  Dropdown,\n  FormGroup,\n  Label,\n  Input,\n  CardBody,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport { CSVExport } from \"react-bootstrap-table2-toolkit\";\nimport DatePicker from \"../../../components/DatePicker\";\nimport { ReactComponent as SearchIcon } from \"../../../BgImages/search.svg\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\n\nconst { ExportCSVButton } = CSVExport;\n\nconst Header = ({ csvData, filter, search, filtered, dataLength, Search }) => {\n  const currentDate = new Date();\n  const currentDateFormat = currentDate.setHours(0, 0, 0, 0);\n  const [dropdownOpen, setDropdownOPen] = useState(false);\n  const transactionStatus = [{ name: \"Active\" }, { name: \"Registered\" }];\n  const [startDate, setStartDate] = useState(currentDateFormat);\n  const [endDate, setEndDate] = useState(currentDateFormat);\n  const [status, setStatus] = useState([]);\n\n  const Change = (e, set) => {\n    const array = [];\n    for (let status in e) {\n      array.push(e[status].name.toLowerCase());\n    }\n    set(array);\n  };\n  const clearState = () => {\n    setStatus([]);\n    setStartDate(currentDateFormat);\n    setEndDate(currentDateFormat);\n  };\n  const onchange = (e) => {\n    const { value } = e.target;\n    Search(value);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        margin: \"10px 0\",\n        paddingLeft: \"20px\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          width: \"70%\",\n          alignItems: \"center\",\n          height: \"100%\",\n        }}\n      >\n        <Dropdown isOpen={dropdownOpen} toggle={() => setDropdownOPen(true)}>\n          <DropdownToggle\n            split\n            style={{\n              backgroundColor: `${\n                filtered ? \"rgba(195, 238, 212, 0.5)\" : \"#F1F1F5\"\n              }`,\n              color: \"#696974\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n              border: \"1px solid #E2E2EA\",\n              borderRadius: \"8px\",\n              width: \"6rem\",\n              padding: \"10px .5rem\",\n            }}\n          >\n            {filtered ? `${dataLength} ` : \"\"} Filter\n          </DropdownToggle>\n          <DropdownMenu className=\"filter-dropdown-menu\">\n            <div className=\"form-block\">\n              <FormGroup className=\"mt-3\">\n                <Label for=\"status\">Transaction Status</Label>\n                <Multiselect\n                  className=\"forget_pass_select\"\n                  options={transactionStatus}\n                  showCheckbox={true}\n                  showArrow={true}\n                  displayValue=\"name\"\n                  placeholder=\"Select\"\n                  onSelect={(e) => Change(e, setStatus)}\n                  onRemove={(e) => Change(e, setStatus)}\n                />\n              </FormGroup>\n\n              <DatePicker\n                date={startDate}\n                open={setDropdownOPen}\n                setDate={setStartDate}\n                name=\"Start Date\"\n              />\n              <DatePicker\n                date={endDate}\n                open={setDropdownOPen}\n                setDate={setEndDate}\n                name=\"End Date\"\n              />\n\n              <CardBody\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Button\n                  style={{\n                    border: \"1px solid grey\",\n                    backgroundColor: \"white\",\n                    color: \"black\",\n                    padding: \"0.3rem 0.7rem\",\n                  }}\n                  onClick={() => {\n                    clearState();\n                    setDropdownOPen(false);\n                    filter({ status, startDate, endDate });\n                  }}\n                >\n                  Clear\n                </Button>\n                <Button\n                  style={{\n                    backgroundColor: \"#4F1699\",\n                    padding: \"0.3rem 1.2rem\",\n                  }}\n                  onClick={() => {\n                    filter({ status, startDate, endDate });\n                    setDropdownOPen(false);\n                    clearState();\n                  }}\n                >\n                  Filter\n                </Button>\n              </CardBody>\n            </div>\n          </DropdownMenu>\n        </Dropdown>\n        <Col lg=\"6\">\n          <InputGroup\n            style={{\n              position: \"relative\",\n              margin: 0,\n            }}\n          >\n            <InputGroupAddon addonType=\"append\" color=\"primary\">\n              <SearchIcon\n                style={{\n                  position: \"absolute\",\n                  zIndex: \"5\",\n                  left: \"10px\",\n                  height: \"100%\",\n                }}\n              />\n            </InputGroupAddon>\n            <Input\n              type=\"tel\"\n              onChange={onchange}\n              placeholder=\"Search customer phone\"\n              style={{\n                padding: \"20px 35px\",\n                borderRadius: \"8px\",\n              }}\n            />\n          </InputGroup>\n        </Col>\n      </div>\n      {/* <ExportCSVButton {...csvData}>\n        <Button\n          size=\"lg\"\n          style={{\n            padding: \"10px .5rem\",\n            backgroundColor: \"#4F1699\",\n            fontFamily: \"SF Pro Display\",\n          }}\n        >\n          <FontAwesomeIcon icon={faFileExcel} />{\" \"}\n          <span\n            style={{\n              paddingLeft: \"0.5rem\",\n            }}\n          >\n            Export as Csv\n          </span>\n        </Button>\n      </ExportCSVButton> */}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport Loader from \"../../../components/Loader.js\";\nimport Header from \"./TableHeader\";\n\nconst Table = ({ referralData = [] }) => {\n  const [isfiltered, setIsFiltered] = useState(false);\n  const [data, setData] = useState(referralData);\n  const currentDate = new Date();\n  const currentDateFormat = currentDate.setHours(0, 0, 0, 0);\n\n  useEffect(() => {\n    setData(referralData);\n  }, [referralData]);\n\n  const Filter = (data) => {\n    setData(\"\");\n    const check =\n      data.status.length > 0 ||\n      data.endDate !== currentDateFormat ||\n      data.startDate !== currentDateFormat;\n    setTimeout(() => {\n      const filtered = referralData.filter((product) => {\n        if (check) {\n          setIsFiltered(true);\n          const splitDate = product.date.slice(0, -6).split(\"/\");\n          const dataDate = new Date(\n            +splitDate[2],\n            splitDate[1] - 1,\n            +splitDate[0]\n          ).setHours(0, 0, 0, 0);\n          return (\n            data.status.includes(product.status.toLowerCase()) ||\n            (dataDate >= data.startDate && dataDate <= data.endDate)\n          );\n        } else {\n          setIsFiltered(false);\n          return data;\n        }\n      });\n      setData(filtered);\n    }, 500);\n  };\n\n  const Search = (data) => {\n    setData(\n      referralData.filter((product) =>\n        product.phoneNumber.startsWith(data.trim())\n      )\n    );\n  };\n\n  const columns = [\n    {\n      dataField: \"customername\",\n      text: \"Customer Name\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        fontSize: \"13px\",\n        paddingLeft: \"1.5rem\",\n      },\n      style: () => {\n        return {\n          paddingLeft: \"1.5rem\",\n        };\n      },\n    },\n    {\n      dataField: \"phoneNumber\",\n      text: \"Customer Phone Number\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        fontSize: \"12px\",\n      },\n    },\n    {\n      dataField: \"referralName\",\n      text: \"Referral Name\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        fontSize: \"13px\",\n      },\n    },\n    {\n      dataField: \"referralBonus\",\n      text: \"Referral Bonus\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        fontSize: \"13px\",\n      },\n      formatter: (cell) => <span>₦{cell.toLocaleString()}</span>,\n    },\n    {\n      dataField: \"date\",\n      text: \"Date\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        fontSize: \"13px\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        return cell.slice(0, -5);\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      headerStyle: {\n        backgroundColor: \"#f8f9fa\",\n        border: \"none\",\n        fontSize: \"13px\",\n        textAlign: \"center\",\n      },\n      style: () => {\n        return {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        };\n      },\n      formatter: (cell, row, rowIndex) => {\n        if (cell.toLowerCase() === \"inactive\") {\n          return <p className=\"status inactive\">{cell}</p>;\n        } else if (cell.toLowerCase() === \"active\") {\n          return <p className=\"status success\">{cell}</p>;\n        } else {\n          return <p className=\"status registered\">{cell}</p>;\n        }\n      },\n    },\n  ];\n\n  const customTotal = (from, to, size) => (\n    <span\n      className=\"react-bootstrap-table-pagination-total\"\n      style={{\n        padding: \"1rem\",\n      }}\n    >\n      Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const rowStyle = {\n    border: \"none\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <ToolkitProvider\n      responsive\n      keyField=\"date\"\n      columns={columns}\n      data={data}\n      search\n    >\n      {(props) => (\n        <div className=\"table\">\n          <p className=\"table_title\">All Referral</p>\n          {!data ? (\n            <Loader />\n          ) : (\n            <>\n              <Header\n                csvData={props.csvProps}\n                search={props.searchProps}\n                filter={Filter}\n                filtered={isfiltered}\n                dataLength={data.length}\n                Search={Search}\n              />\n\n              <BootstrapTable\n                style={{\n                  marginTop: \"0\",\n                }}\n                {...props.baseProps}\n                bordered={false}\n                rowStyle={rowStyle}\n                pagination={paginationFactory({\n                  sizePerPage: 9,\n                  hideSizePerPage: true,\n                  showTotal: true,\n                  paginationTotalRenderer: customTotal,\n                })}\n              />\n            </>\n          )}\n        </div>\n      )}\n    </ToolkitProvider>\n  );\n};\nexport default Table;\n","import axios from \"axios\";\nimport baseURL from \"./baseUrl\";\nimport { useSelector } from \"react-redux\";\n\nfunction create_UUID(){ \n    var dt = new Date().getTime(); \n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { \n        var r = (dt + Math.random()*16)%16 | 0; \n        dt = Math.floor(dt/16); \n        return (c === 'x' ? r :(r&0x3|0x8)).toString(16); \n    }); \n    return uuid; \n}\n\nlet requestId = create_UUID();\n\nconst ReferralsRequest = () => {\n    const { token, tokenType } = useSelector((state) => state.user.details);\n\n    const getAllReferrals = async (days) => {\n        requestId = create_UUID();\n        try {\n            const response = await axios.get(baseURL + `backoffice/Referral/Referrals?days=${days}` , \n            {\n                headers: { \n                    \"X-RequestId\": `${requestId}`,\n                    Authorization: `${tokenType} ${token}`\n                }\n            });\n            return response.data;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    return {\n        getAllReferrals\n    }\n}\n\nexport default ReferralsRequest;","import React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header\";\nimport Statistics from \"./Statistics\";\nimport Table from \"./Table\";\nimport logo from \"../../../assets/img/icons/referralicon.svg\";\nimport Loader from \"../../../components/Loader\";\nimport ReferralsRequest from \"./../../../requests/referral\";\n\nconst Referral = () => {\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n  const [filterText, setFilterText] = useState(text[2]);\n  const [days, setDays] = useState(30);\n  const [referrals, setReferrals] = useState(\"\");\n  const [referralData, setReferralData] = useState(\"\");\n\n  const { getAllReferrals } = ReferralsRequest();\n\n  const getRecentReferralsList = async () => {\n    const response = await getAllReferrals(days);\n    if (response.code === \"00\") {\n      setReferrals(response.data);\n      setReferralData(response.data.listOfReferral);\n    }\n  };\n  const refresh = () => {\n    setReferrals(\"\");\n    setReferralData(\"\");\n    getRecentReferralsList();\n  };\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setReferralData(\"\");\n      setReferrals(\"\");\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n\n  const transactions = [\n    {\n      name: \"Total Referral Transaction Volume\",\n      total_amount: referrals.totalReferralvol,\n      percentage: referrals.percentReferralvol,\n    },\n    {\n      name: \"Total Referral Transaction Value\",\n      total_amount: referrals.totalReferralval,\n      percentage: referrals.percentReferralval,\n    },\n    {\n      name: \"Total value of Referral Bonuses\",\n      total_amount: referrals.referredBonus,\n      percentage: referrals.percentReferredBonus,\n    },\n    {\n      name: \"Total Referrals Links Sent \",\n      total_amount: referrals.totalReferralLinkSent,\n      percentage: referrals.totalReferralval,\n    },\n    {\n      name: \"Total Number of Registered Referrals\",\n      total_amount: referrals.numberofRegisteredReferred,\n      percentage: referrals.percentRegisteredReferred,\n    },\n    {\n      name: \"Total Number of Active Referrals\",\n      total_amount: referrals.activereferral,\n      percentage: referrals.percentActivereferral,\n    },\n  ];\n\n  useEffect(() => {\n    getRecentReferralsList();\n  }, [days]);\n\n  return (\n    <div>\n      <Header\n        logo={logo}\n        name=\"Settl Referral Data\"\n        calendar\n        filterText={filterText}\n        updateDays={updateDays}\n        refresh={refresh}\n      />\n      {referrals.length !== 0 ? (\n        <Statistics transactions={transactions} />\n      ) : (\n        <Loader />\n      )}\n      <Table referralData={referralData} />\n    </div>\n  );\n};\n\nexport default Referral;\n"],"sourceRoot":""}