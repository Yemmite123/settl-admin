{"version":3,"sources":["components/Header.js","pages/dashboards/Issue Resolution/request.js","assets/img/icons/issue logo.svg","pages/dashboards/Issue Resolution/Statistic.js","pages/dashboards/Issue Resolution/Analytics/Chart.js","pages/dashboards/Issue Resolution/Analytics/PerformaceChart.js","pages/dashboards/Issue Resolution/Analytics/index.js"],"names":["Header","logo","name","calendar","updateDays","filterText","refresh","className","xs","src","alt","next","caret","color","style","backgroundColor","right","top","onClick","divider","baseURL","create_UUID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","Request","useSelector","state","user","details","token","tokenType","issueLogs","a","requestId","axios","get","headers","Authorization","response","data","issueAnalytics","days","performance","statusUpdate","console","log","patch","Id","status","module","exports","Statistics","class","totalIssueReport","percentTotalReport","upArrow","totalIssueResolved","percentIssueResolved","totalPendingIssues","percentPendingIssues","totalInProgressIssues","percentInProgressIssues","connect","store","theme","currentTheme","Card","CardHeader","CardTitle","tag","CardBody","options","plotOptions","bar","horizontal","columnWidth","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","fill","opacity","tooltip","y","formatter","val","series","type","height","PerformanceChart","columns","dataField","text","headerStyle","textTransform","fontWeight","border","cell","row","rowIndex","display","gap","padding","borderRadius","alignItems","margin","textAlign","percentResolution","fontSize","percentResolved","marginTop","keyField","bordered","rowStyle","pagination","paginationFactory","sizePerPage","hideSizePerPage","showTotal","paginationTotalRenderer","from","to","size","Loader","Analytics","useState","stats","setStats","charts","setChartsData","perfData","setPerfData","setDays","setFilterText","fetchData","code","billpaymentData","p2PData","savings","transfers","getPerformanceData","getBothData","useEffect","day","index","Statistic","Chart"],"mappings":"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","file":"static/js/17.a55baadc.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Col,\n  Row,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { Calendar } from \"react-feather\";\nimport { RefreshButton } from \"./RefreshButton\";\nconst Header = ({ logo, name, calendar, updateDays, filterText, refresh }) => (\n  <Row className=\"mb-2 mb-xl-4 align-items-center\">\n    <Col xs=\"auto\" className=\"d-none d-sm-block\">\n      <h4 className=\"greeting\">\n        <img src={logo} className=\"\" alt=\"Settl Logo\" />\n        <span className=\"pl-2\">{name}</span>\n      </h4>\n    </Col>\n\n    {calendar && (\n      <Col xs=\"auto\" className=\"ml-auto text-right mt-n1 pr-3\">\n        <RefreshButton next={refresh} />\n        <UncontrolledDropdown className=\"d-inline filter-dropdown\">\n          <DropdownToggle\n            caret\n            color=\"light\"\n            className=\"shadow-sm\"\n            style={{\n              backgroundColor: \"white\",\n            }}\n          >\n            <Calendar className=\"feather align-middle mt-n1\" /> {filterText}\n          </DropdownToggle>\n          <DropdownMenu\n            right\n            style={{\n              top: \"25px\",\n            }}\n          >\n            <DropdownItem onClick={() => updateDays(1, 0)}>Today</DropdownItem>\n            <DropdownItem onClick={() => updateDays(7, 1)}>\n              Last 7 Days\n            </DropdownItem>\n            <DropdownItem onClick={() => updateDays(30, 2)}>\n              Last 30 Days\n            </DropdownItem>\n            <DropdownItem onClick={() => updateDays(90, 3)}>\n              Last 90 Days\n            </DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem>Customize</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </Col>\n    )}\n  </Row>\n);\nexport default Header;\n","import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nconst baseURL = \"https://api.settl.me/backoffice/\";\n\nfunction create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n    /[xy]/g,\n    function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    }\n  );\n  return uuid;\n}\nconst Request = () => {\n  const { token, tokenType } = useSelector((state) => state.user.details);\n  const issueLogs = async () => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(baseURL + \"IssuesLog\", {\n        headers: {\n          \"X-RequestId\": `${requestId}`,\n          Authorization: `${tokenType} ${token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const issueAnalytics = async (days) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(\n        baseURL + `IssuesLog/LogAnalysisReport?days=${days}`,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const performance = async (days) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(\n        baseURL + `IssuesLog/ResolutionPerformance?days=${days}`,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const statusUpdate = async (data) => {\n    let requestId = create_UUID();\n    console.log(data);\n    try {\n      const response = await axios.patch(\n        baseURL + `IssuesLog/UpdateStatus?Id=${data.Id}&status=${data.status}`,\n        null,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n  return {\n    performance,\n    issueAnalytics,\n    issueLogs,\n    statusUpdate,\n  };\n};\n\nexport default Request;\n","module.exports = __webpack_public_path__ + \"static/media/issue logo.2fc12551.svg\";","import React from \"react\";\nimport upArrow from \"../../../assets/img/icons/uparrow.svg\";\nimport downArrow from \"../../../assets/img/icons/downarrow.svg\";\n\nconst Statistics = ({ data }) => (\n  <div class=\"container-fluid mb-5\">\n    <div class=\"row row-cols-4  transaction_analysis_section\">\n      <div class=\"col col_border_right\">\n        <div className=\"transaction_volume\">\n          <h4>Total Issues Reported</h4>\n          <p>\n            {data.totalIssueReport}\n            <span>\n              +{data.percentTotalReport}%{\" \"}\n              <img className=\"img-fluid\" src={upArrow} alt=\"uparrow\" />\n            </span>{\" \"}\n          </p>\n          <p className=\"time\">Analytics for last 30 days</p>\n        </div>\n      </div>\n      <div class=\"col col_border_right\">\n        <div className=\"transaction_volume\">\n          <h4>Total Issues Resolved</h4>\n          <p>\n            {data.totalIssueResolved}\n            <span>\n              +{data.percentIssueResolved}%{\" \"}\n              <img className=\"img-fluid\" src={upArrow} alt=\"uparrow\" />\n            </span>{\" \"}\n          </p>\n          <p className=\"time\">Analytics for last 30 days</p>\n        </div>\n      </div>\n      <div class=\"col col_border_right\">\n        <div className=\"transaction_volume\">\n          <h4> Total Pending Issues</h4>\n          <p>\n            {data.totalPendingIssues}\n            <span>\n              +{data.percentPendingIssues}%{\" \"}\n              <img className=\"img-fluid\" src={upArrow} alt=\"downarrow\" />\n            </span>{\" \"}\n          </p>\n          <p className=\"time\">Analytics for last 30 days</p>\n        </div>\n      </div>\n      <div class=\"col\">\n        <div className=\"transaction_volume\">\n          <h4>Issues in Progress</h4>\n          <p>\n            {data.totalInProgressIssues}\n            <span>\n              +{data.percentInProgressIssues}%{\" \"}\n              <img className=\"img-fluid\" src={upArrow} alt=\"uparrow\" />\n            </span>{\" \"}\n          </p>\n          <p className=\"time\">Analytics for last 30 days</p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Statistics;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\n\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\n\nconst ColumnChart = ({ theme }) => {\n  const data = [\n    {\n      name: \"Bill Payment\",\n      data: [44, 55, 57, 56, 61, 58, 63, 60, 66],\n    },\n    {\n      name: \"Peer-to-Peer    \",\n      data: [76, 85, 101, 98, 87, 105, 91, 114, 94],\n    },\n    {\n      name: \"Savings\",\n      data: [35, 41, 36, 26, 45, 48, 52, 53, 41],\n    },\n    {\n      name: \"Transfer\",\n      data: [35, 41, 36, 26, 45, 48, 52, 53, 41],\n    },\n    {\n      name: \"Money Request\",\n      data: [35, 41, 36, 26, 45, 48, 52, 53, 41],\n    },\n  ];\n\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"60%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n      ],\n    },\n\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val;\n        },\n      },\n    },\n    colors: [\"#3DBDC8\", \"#27A0C7\", \"#DB74E4\", \"#61B3FF\", \"#9C6ADE\"],\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag=\"h5\">Reported Issues</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className=\"chart\">\n          <Chart options={options} series={data} type=\"bar\" height=\"350\" />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default connect((store) => ({\n  theme: store.theme.currentTheme,\n}))(ColumnChart);\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport data from \"./data\";\nimport Loader from \"../../../../components/Loader\";\n\nconst PerformanceChart = ({ data }) => {\n  const columns = [\n    {\n      dataField: \"customerSuccessAgent\",\n      text: \"Customer Success Agents\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        width: \"250px\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"1rem\",\n            }}\n          >\n            <span\n              style={{\n                backgroundColor: \"#F4F7FF\",\n                padding: \"0.2rem 1rem\",\n                borderRadius: \"8px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              {rowIndex + 1}\n            </span>\n            <p\n              style={{\n                margin: \"auto 0\",\n                padding: \"auto 0\",\n                fontWeight: \"500\",\n              }}\n            >\n              {cell}\n            </p>\n          </div>\n        );\n      },\n    },\n    {\n      dataField: \"resolvedIssue\",\n      text: \"Resolved issues\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        textAlign: \"center\",\n      },\n      style: () => ({\n        textAlign: \"center\",\n        fontWeight: \"500\",\n      }),\n    },\n    {\n      dataField: \"resolution\",\n      text: \"progress\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        let color;\n        if (row.percentResolution >= 60) {\n          color = \"#1EB75B\";\n        } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n          color = \"#EDBF78\";\n        } else {\n          color = \"#F50D49\";\n        }\n        return (\n          <div\n            style={{\n              height: \"8px\",\n              backgroundColor: \"#F6F4F8\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <div\n              style={{\n                width: `${cell}%`,\n                height: \"100%\",\n                backgroundColor: color,\n                borderRadius: \"5px\",\n              }}\n            ></div>\n          </div>\n        );\n      },\n    },\n    {\n      dataField: \"avgResolutionTime\",\n      text: \"Avg. Resolution Time\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        textAlign: \"center\",\n      },\n      style: () => ({\n        textAlign: \"center\",\n        fontWeight: \"500\",\n      }),\n    },\n    {\n      dataField: \"resolution\",\n      text: \"resolution\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        width: \"250px\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        let color;\n        if (row.percentResolution >= 60) {\n          color = \"#1EB75B\";\n        } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n          color = \"#EDBF78\";\n        } else {\n          color = \"#F50D49\";\n        }\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"1rem\",\n            }}\n          >\n            <p\n              style={{\n                color: \"#304762\",\n                fontWeight: \"600\",\n              }}\n            >\n              {\" \"}\n              {row.percentResolution}%{\" \"}\n            </p>\n            <p\n              style={{\n                color: color,\n                fontSize: \"12px\",\n              }}\n            >\n              ({row.percentResolved}){\" \"}\n              {row.percentResolution >= 60 ? \"\\u2191\" : \"\\u2193\"}\n            </p>\n            <p\n              style={{\n                color: \"#798C9C\",\n                fontSize: \"12px\",\n              }}\n            >\n              (Versus last 30 days)\n            </p>\n          </div>\n        );\n      },\n    },\n  ];\n  const rowStyle = {\n    border: \"none !important\",\n  };\n  const customTotal = (from, to, size) => (\n    <span\n      className=\"react-bootstrap-table-pagination-total\"\n      style={{\n        padding: \"1rem\",\n      }}\n    >\n      Showing {from} to {to} of {size} Results\n    </span>\n  );\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        marginTop: \"3rem\",\n      }}\n    >\n      <p className=\"table_title\">CS Resolution Performance</p>\n      {!data ? (\n        <Loader />\n      ) : (\n        <BootstrapTable\n          keyField=\"id\"\n          bordered={false}\n          data={data}\n          columns={columns}\n          rowStyle={rowStyle}\n          pagination={paginationFactory({\n            sizePerPage: 9,\n            hideSizePerPage: true,\n            showTotal: true,\n            paginationTotalRenderer: customTotal,\n          })}\n        />\n      )}\n    </div>\n  );\n};\nexport default PerformanceChart;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../../../../components/Header\";\nimport logo from \"../../../../assets/img/icons/issue logo.svg\";\nimport Statistics from \"../Statistic\";\nimport Chart from \"./Chart\";\nimport PerformanceChart from \"./PerformaceChart\";\nimport Loader from \"../../../../components/Loader\";\nimport Request from \"../request\";\n\nconst Analytics = () => {\n  const { performance, issueAnalytics } = Request();\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n\n  const [stats, setStats] = useState(null);\n  const [charts, setChartsData] = useState(null);\n  const [perfData, setPerfData] = useState(null);\n\n  const [days, setDays] = useState(30);\n  const [filterText, setFilterText] = useState(text[2]);\n\n  const fetchData = async () => {\n    const response = await issueAnalytics(days);\n    if (response.code === \"00\") {\n      const {\n        totalIssueReport,\n        percentTotalReport,\n        totalIssueResolved,\n        percentIssueResolved,\n        totalPendingIssues,\n        percentPendingIssues,\n        totalInProgressIssues,\n        percentInProgressIssues,\n        billpaymentData,\n        p2PData,\n        savings,\n        transfers,\n      } = response.data;\n      setStats({\n        totalIssueReport,\n        percentTotalReport,\n        totalIssueResolved,\n        percentIssueResolved,\n        totalPendingIssues,\n        percentPendingIssues,\n        totalInProgressIssues,\n        percentInProgressIssues,\n      });\n      setChartsData({ billpaymentData, p2PData, savings, transfers });\n    }\n  };\n  const getPerformanceData = async () => {\n    const response = await performance(days);\n    if (response.code === \"00\") {\n      setPerfData(response.data);\n    }\n  };\n  const getBothData = async () => {\n    await fetchData();\n    await getPerformanceData();\n  };\n\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setPerfData(null);\n      setChartsData(null);\n      setStats(null);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n  useEffect(() => {\n    getBothData();\n  }, [days]);\n  return (\n    <div>\n      <Header\n        logo={logo}\n        name=\"Issue Analytics\"\n        calendar\n        updateDays={updateDays}\n        filterText={filterText}\n      />\n      {!stats && !charts ? (\n        <Loader />\n      ) : (\n        <>\n          <Statistics data={stats} />\n          <Chart />\n        </>\n      )}\n\n      <PerformanceChart data={perfData} />\n    </div>\n  );\n};\nexport default Analytics;\n"],"sourceRoot":""}