{"version":3,"sources":["pages/reconciliation/Filter.js","pages/reconciliation/request.js","pages/reconciliation/Table.js","pages/reconciliation/ReconciliationReport.js","pages/reconciliation/ReconcileTransaction.js","pages/reconciliation/SuccessModal.js","pages/reconciliation/index.js"],"names":["Filter","useState","dropdownOpen","setDropdownOPen","Dropdown","isOpen","toggle","DropdownToggle","split","style","backgroundColor","color","display","justifyContent","alignItems","border","borderRadius","width","padding","DropdownMenu","top","CardBody","Button","onClick","baseURL","create_UUID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","Request","useSelector","state","user","details","token","tokenType","getAllReconciliation","a","requestId","axios","get","headers","Authorization","response","data","activities","Table","setShowForm","setDetail","setData","fetchData","code","useEffect","customTotal","from","to","size","className","rowStyle","cursor","rowEvents","cell","row","console","log","service","name","services","bank","vendors","duration","period","keyField","columns","dataField","text","headerStyle","textAlign","margin","props","paddingBottom","baseProps","wrapperClasses","bordered","pagination","paginationFactory","sizePerPage","hideSizePerPage","showTotal","paginationTotalRenderer","Loader","ExportCSVButton","CSVExport","tid","pin","amount","rrn","ReconciliationReport","show","setShow","exportCSV","fileName","Modal","centered","borderBottom","position","right","fontSize","maxWidth","fontWeight","bootstrap4","bottom","borderTop","csvProps","durations","disable","ReconcileTransaction","setSuccess","detail","showReport","setShowReport","setService","setBank","setDuration","serviceTypes","setServiceTypes","banks","setBanks","listOfTransServices","map","description","listOfBanks","Card","height","Form","FormGroup","options","showCheckbox","showArrow","displayValue","placeholder","singleSelect","onSelect","e","defaultValue","isOptionDisabled","option","Label","htmlFor","Input","type","id","accept","SuccessModal","setTimeout","ModalHeader","ModalBody","src","checkIcon","alt","Reconciliation","showForm","showSuccess","setShowSuccess"],"mappings":"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","file":"static/js/39.26051e07.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Button,\n  CardBody,\n} from \"reactstrap\";\n\nconst Filter = () => {\n  const [dropdownOpen, setDropdownOPen] = useState(false);\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={() => setDropdownOPen(true)}>\n      <DropdownToggle\n        split\n        style={{\n          backgroundColor: \"#F1F1F5\",\n          color: \"#696974\",\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          border: \"1px solid #E2E2EA\",\n          borderRadius: \"8px\",\n          width: \"6rem\",\n          padding: \"10px .5rem\",\n        }}\n      >\n        Filter\n      </DropdownToggle>\n      <DropdownMenu\n        style={{\n          top: \"30px\",\n          padding: \"0.3rem\",\n          width: \"300px\",\n        }}\n      >\n        <CardBody\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            style={{\n              border: \"1px solid grey\",\n              backgroundColor: \"white\",\n              color: \"black\",\n              padding: \"0.3rem 0.7rem\",\n            }}\n            onClick={() => setDropdownOPen(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            style={{\n              backgroundColor: \"#4F1699\",\n              padding: \"0.3rem 1.2rem\",\n            }}\n            onClick={() => setDropdownOPen(false)}\n          >\n            Filter\n          </Button>\n        </CardBody>\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nconst baseURL = \"https://api.settl.me/backoffice/Reconciliation\";\n\nfunction create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n    /[xy]/g,\n    function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    }\n  );\n  return uuid;\n}\n\nconst Request = () => {\n  const { token, tokenType } = useSelector((state) => state.user.details);\n  const getAllReconciliation = async () => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(baseURL, {\n        headers: {\n          \"X-RequestId\": `${requestId}`,\n          Authorization: `${tokenType} ${token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const activities = async () => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(baseURL + \"/list\", {\n        headers: {\n          \"X-RequestId\": `${requestId}`,\n          Authorization: `${tokenType} ${token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n  return {\n    getAllReconciliation,\n    activities,\n  };\n};\nexport default Request;\n","import React, { useState, useEffect } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport Loader from \"../../components/Loader\";\nimport Request from \"./request\";\n\nconst Table = ({ setShowForm, setDetail }) => {\n  const { getAllReconciliation } = Request();\n  const [data, setData] = useState(null);\n  const fetchData = async () => {\n    const response = await getAllReconciliation();\n    if (response.code === \"00\") {\n      setData(response.data);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const columns = [\n    {\n      dataField: \"date\",\n      text: \"Date Created\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"period\",\n      text: \"Duration\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"vendors\",\n      text: \"Vendor/Bank\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        width: \"150px\",\n        textAlign: \"center\",\n      },\n      style: () => {\n        return {\n          margin: \"auto 0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: \"20px 0\",\n        };\n      },\n      // formatter: (cell, row, rowIndex) => {\n      //   if (cell.toLowerCase() === \"draft\") {\n      //     return <span className=\"status pending\">{cell}</span>;\n      //   }\n      //   if (cell.toLowerCase() === \"reconciled\") {\n      //     return <span className=\"status success\">{cell}</span>;\n      //   }\n      // },\n    },\n  ];\n  const customTotal = (from, to, size) => (\n    <span\n      className=\"react-bootstrap-table-pagination-total\"\n      style={{\n        padding: \"1rem\",\n      }}\n    >\n      Showing {from} to {to} of {size} Results\n    </span>\n  );\n  const rowStyle = {\n    border: \"none\",\n    cursor: \"pointer\",\n  };\n  const rowEvents = {\n    onClick: (cell, row) => {\n      console.log(row);\n      setDetail({\n        service: { name: row.services },\n        bank: { name: row.vendors },\n        duration: { name: row.period },\n      });\n      setShowForm(true);\n    },\n  };\n  return (\n    <ToolkitProvider keyField=\"date\" data={data ? data : []} columns={columns}>\n      {(props) => (\n        <div className=\"table\">\n          <p\n            className=\"table_title\"\n            style={{\n              border: \"none\",\n              paddingBottom: \"0\",\n            }}\n          >\n            {\" \"}\n            Reconciliation Log\n          </p>\n          {!data ? (\n            <Loader />\n          ) : (\n            <BootstrapTable\n              {...props.baseProps}\n              wrapperClasses=\"reconciliation-table\"\n              bordered={false}\n              rowStyle={rowStyle}\n              rowEvents={rowEvents}\n              pagination={paginationFactory({\n                sizePerPage: 9,\n                hideSizePerPage: true,\n                showTotal: true,\n                paginationTotalRenderer: customTotal,\n              })}\n            />\n          )}\n        </div>\n      )}\n    </ToolkitProvider>\n  );\n};\nexport default Table;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { ReactComponent as Close } from \"../../BgImages/close.svg\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport { CSVExport } from \"react-bootstrap-table2-toolkit\";\n\nconst { ExportCSVButton } = CSVExport;\n\nconst data = [\n  {\n    tid: \"TID-R23456678\",\n    pin: \"2289****7789\",\n    amount: \"N70,000\",\n    rrn: \"RRN- 45905959095490050504\",\n  },\n  {\n    tid: \"TID-R23456678\",\n    pin: \"2289****7789\",\n    amount: \"N70,000\",\n    rrn: \"RRN- 45905959095490050504\",\n  },\n  {\n    tid: \"TID-R23456678\",\n    pin: \"2289****7789\",\n    amount: \"N70,000\",\n    rrn: \"RRN- 45905959095490050504\",\n  },\n];\nconst ReconciliationReport = ({ show, setShow }) => {\n  const columns = [\n    {\n      dataField: \"tid\",\n      text: \"TID\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n      style: () => ({\n        padding: \"20px 0\",\n      }),\n    },\n    {\n      dataField: \"pin\",\n      text: \"Card PIN\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"amount\",\n      text: \"Amount\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"rrn\",\n      text: \"RRN\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        width: \"250px\",\n      },\n    },\n  ];\n  return (\n    <ToolkitProvider\n      keyField=\"tid\"\n      data={data}\n      columns={columns}\n      exportCSV={{\n        fileName: \"reconciliation report.csv\",\n      }}\n    >\n      {(props) => (\n        <Modal\n          show={show}\n          toggle={() => setShow(false)}\n          centered\n          className=\"reconciliation-modal\"\n          size=\"lg\"\n        >\n          <div className=\"position-relative\">\n            <h3\n              style={{\n                textAlign: \"center\",\n                borderBottom: \"1px solid rgba(231, 231, 237, 0.6)\",\n                padding: \"1.5rem 0\",\n              }}\n            >\n              Reconciliation Report\n            </h3>\n            <Close\n              style={{\n                position: \"absolute\",\n                top: \"20px\",\n                right: \"20px\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => setShow(false)}\n            />\n          </div>\n          <div\n            style={{\n              backgroundColor: \"#FBF8FF\",\n              width: \"70%\",\n              padding: \"1rem 2rem\",\n              borderRadius: \"10px\",\n              margin: \"20px auto\",\n            }}\n          >\n            <p\n              style={{\n                fontSize: \"16px\",\n              }}\n            >\n              The 4 Transactions below are not reflecting in the bank statement\n              for the requested period\n            </p>\n          </div>\n          <div\n            style={{\n              maxWidth: \"95%\",\n              margin: \"20px auto\",\n            }}\n          >\n            <p>\n              <span\n                style={{\n                  color: \"#171725\",\n                  fontWeight: \"600\",\n                }}\n              >\n                Report ID:\n              </span>{\" \"}\n              R23554542233456650004595490050504\n            </p>\n            <BootstrapTable {...props.baseProps} bootstrap4 bordered={false} />\n          </div>\n          <div\n            className=\"p-4\"\n            style={{\n              position: \"absolute\",\n              bottom: \"10px\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              borderTop: \"1px solid rgba(231, 231, 237, 0.6)\",\n              width: \"100%\",\n              right: \"0\",\n            }}\n          >\n            <Button className=\"button_white\" onClick={() => setShow(false)}>\n              Cancel\n            </Button>\n\n            <ExportCSVButton\n              className=\"btn-add btn btn-primary btn-export\"\n              {...props.csvProps}\n            >\n              Download Report\n            </ExportCSVButton>\n          </div>\n        </Modal>\n      )}\n    </ToolkitProvider>\n  );\n};\n\nexport default ReconciliationReport;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport ReconciliationReport from \"./ReconciliationReport\";\nimport { Link } from \"react-router-dom\";\nimport Request from \"./request\";\n\nconst durations = [\n  {\n    name: (\n      <div>\n        <p>LAST 28 DAYS</p>\n        <p>Dec 04, 2019 - Feb 04 2020</p>\n      </div>\n    ),\n    disable: true,\n  },\n  { name: \"Today\" },\n  { name: \"Last 7 days\" },\n  { name: \"Last 90 days\" },\n  { name: \"Customize\" },\n];\nconst ReconcileTransaction = ({ setShow, setSuccess, detail, setDetail }) => {\n  const { activities } = Request();\n  const [showReport, setShowReport] = useState(false);\n  const [service, setService] = useState(detail.service);\n  const [bank, setBank] = useState(detail.bank);\n  const [duration, setDuration] = useState(detail.duration);\n\n  const [serviceTypes, setServiceTypes] = useState([]);\n  const [banks, setBanks] = useState([]);\n\n  const fetchData = async () => {\n    const response = await activities();\n    if (response.code === \"00\") {\n      setServiceTypes(\n        response?.data?.listOfTransServices?.map((service) => ({\n          name: service.description,\n        }))\n      );\n      setBanks(\n        response?.data?.listOfBanks?.map((bank) => ({ name: bank.description }))\n      );\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <>\n      <Link\n        to=\"/reconciliation\"\n        className=\"back\"\n        onClick={() => {\n          setDetail({\n            service: null,\n            bank: null,\n            duration: null,\n          });\n          setShow(false);\n        }}\n      >\n        {\"< \"} Back\n      </Link>\n\n      <div className=\"relative\">\n        <Card\n          className=\"p-4\"\n          style={{\n            border: \"1px solid #ECF3FC\",\n            height: \"612px\",\n            position: \"relative\",\n            margin: \"0 auto\",\n            width: \"618px\",\n          }}\n        >\n          <h6>Reconcile Transaction</h6>\n          <Form className=\"message-form mt-4\">\n            <FormGroup>\n              <Multiselect\n                className=\"forget_pass_select\"\n                options={serviceTypes}\n                showCheckbox={false}\n                showArrow={true}\n                displayValue=\"name\"\n                placeholder=\"Select Service\"\n                singleSelect={true}\n                onSelect={(e) => setService(e[0].name)}\n                defaultValue={service}\n              />\n            </FormGroup>\n            {service && (\n              <FormGroup>\n                <Multiselect\n                  className=\"forget_pass_select\"\n                  options={banks}\n                  showCheckbox={false}\n                  showArrow={true}\n                  displayValue=\"name\"\n                  placeholder=\"Select Bank\"\n                  singleSelect={true}\n                  onSelect={(e) => setBank(e[0].name)}\n                />\n              </FormGroup>\n            )}\n            {bank && (\n              <FormGroup>\n                <Multiselect\n                  className=\"forget_pass_select\"\n                  options={durations}\n                  showCheckbox={false}\n                  showArrow={true}\n                  displayValue=\"name\"\n                  placeholder=\"Duration\"\n                  singleSelect={true}\n                  onSelect={(e) => setDuration(e[0].name)}\n                  isOptionDisabled={(option) => option.disable}\n                />\n              </FormGroup>\n            )}\n            {duration && (\n              <FormGroup className=\"upload\">\n                <div>\n                  <Label htmlFor=\"customerTemplate\"> Bank Statement</Label>\n                  <Input\n                    type=\"file\"\n                    id=\"customerTemplate\"\n                    accept=\".png, .jpg, .pdf, .csv\"\n                  />\n                </div>\n                <p\n                  style={{\n                    fontSize: \"14px\",\n                    color: \"rgba(0, 0, 0, 0.6049)\",\n                    margin: \"10px 0\",\n                    fontWeight: \"normal\",\n                  }}\n                >\n                  Note: Max file size should be 20MB.\n                </p>\n              </FormGroup>\n            )}\n          </Form>\n          <div\n            className=\"p-4\"\n            style={{\n              position: \"absolute\",\n              bottom: \"10px\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              borderTop: \"1px solid rgba(231, 231, 237, 0.6)\",\n              width: \"100%\",\n              right: \"0\",\n            }}\n          >\n            <Button className=\"button_white\" onClick={() => setShow(false)}>\n              Cancel\n            </Button>\n            <div>\n              <span\n                style={{\n                  color: \"#4F1699\",\n                  margin: \"0 20px\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => {\n                  setSuccess(true);\n                  setShow(false);\n                }}\n              >\n                Save Data\n              </span>\n              <Button\n                className=\"button_approve\"\n                onClick={() => setShowReport(true)}\n              >\n                Reconcile\n              </Button>\n            </div>\n          </div>\n        </Card>\n      </div>\n      <ReconciliationReport show={showReport} setShow={setShowReport} />\n    </>\n  );\n};\n\nexport default ReconcileTransaction;\n","import React, { useEffect } from \"react\";\nimport checkIcon from \"../../assets/img/icons/check.svg\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { ReactComponent as Close } from \"../../BgImages/close.svg\";\n\nconst SuccessModal = ({ show, setShow }) => {\n  // setTimeout(() => {\n  //   setShow(false);\n  // }, 2000);\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(false);\n    }, 2000);\n  }, []);\n  return (\n    <Modal\n      isOpen={show}\n      toggle={() => setShow(false)}\n      className=\"admin-modal complete-modal\"\n    >\n      <ModalHeader></ModalHeader>\n      <ModalBody className=\"W-75\">\n        <div className=\"d-flex py-2 position-relative\">\n          <div className=\"mr-3\" onClick={() => setShow(false)}>\n            <img src={checkIcon} alt=\"lock icon\" />\n            <br />\n          </div>\n          <div>\n            <h4>Success message</h4>\n            <p>Reconcilation Data sucessfully created</p>\n          </div>\n          <Close\n            style={{\n              position: \"absolute\",\n              top: \"20px\",\n              right: \"20px\",\n              cursor: \"pointer\",\n            }}\n          />\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\nexport default SuccessModal;\n","import React, { useState } from \"react\";\nimport Filter from \"./Filter\";\nimport { Button } from \"reactstrap\";\nimport Table from \"./Table\";\nimport ReconcileTransaction from \"./ReconcileTransaction\";\nimport SuccessModal from \"./SuccessModal\";\n\nconst Reconciliation = () => {\n  const [showForm, setShowForm] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [detail, setDetail] = useState({\n    service: null,\n    bank: null,\n    duration: null,\n  });\n  return (\n    <>\n      {!showForm ? (\n        <>\n          <div className=\"bg_absolute d-flex justify-content-between py-3\">\n            <Filter />\n            <Button\n              color=\"primary\"\n              className=\"btn-add\"\n              onClick={() => setShowForm(true)}\n            >\n              Reconcile Transaction\n            </Button>\n          </div>\n          <div className=\"py-5\">\n            <Table setShowForm={setShowForm} setDetail={setDetail} />\n          </div>\n        </>\n      ) : (\n        <ReconcileTransaction\n          setShow={setShowForm}\n          setSuccess={setShowSuccess}\n          detail={detail}\n          setDetail={setDetail}\n        />\n      )}\n      <SuccessModal show={showSuccess} setShow={setShowSuccess} />\n    </>\n  );\n};\n\nexport default Reconciliation;\n"],"sourceRoot":""}