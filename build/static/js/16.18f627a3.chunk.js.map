{"version":3,"sources":["components/Header.js","assets/img/icons/referralicon.svg","components/TransactionCard.js","pages/settl-analytics/Statistics.js","pages/settl-analytics/Chart.js","pages/settl-analytics/Analytics.js","pages/settl-analytics/index.js"],"names":["Header","logo","name","calendar","updateDays","filterText","refresh","className","xs","src","alt","next","caret","color","style","backgroundColor","right","top","onClick","divider","module","exports","TransactionCard","total_amount","percentage","parseInt","upArrow","downArrow","Statistics","stats","index","transactions","totalTransactionVolume","percentTransactionVol","totalTransactionValue","percentTransactionValue","settlCustomers","total","settlAgents","percentageChange","map","transaction","i","key","icon","connect","store","theme","currentTheme","breakdown","useState","dropdownOpen","setOpen","setTransaction","january","february","march","april","may","june","july","august","september","october","november","december","data","billPayments","p2p","savings","transfers","moneyRequests","Card","CardHeader","CardTitle","tag","Dropdown","isOpen","toggle","outline","DropdownToggle","border","display","gap","alignItems","DropdownMenu","padding","width","textAlign","Col","UncontrolledDropdown","DropdownItem","CardBody","options","plotOptions","bar","horizontal","columnWidth","dataLabels","enabled","stroke","show","colors","xaxis","categories","fill","opacity","tooltip","y","formatter","val","series","type","height","Analytics","title","text","Request","analyticsBreakdown","userAnalytics","setBreakdown","setStats","days","setDays","setFilterText","fetchBreakdownData","a","response","code","consumers","agents","getAnalytics","console","log","day","useEffect","marginTop","justifyContent","marginBottom","fontSize","RefreshButton","Loader","Chart","SettlAnalytics","activeTab","setActiveTab","titles","TabContent","_","TabPane","tabId"],"mappings":"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","file":"static/js/16.18f627a3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Col,\n  Row,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { Calendar } from \"react-feather\";\nimport { RefreshButton } from \"./RefreshButton\";\nconst Header = ({ logo, name, calendar, updateDays, filterText, refresh }) => (\n  <Row className=\"mb-2 mb-xl-4 align-items-center\">\n    <Col xs=\"auto\" className=\"d-none d-sm-block\">\n      <h4 className=\"greeting\">\n        <img src={logo} className=\"\" alt=\"Settl Logo\" />\n        <span className=\"pl-2\">{name}</span>\n      </h4>\n    </Col>\n\n    {calendar && (\n      <Col xs=\"auto\" className=\"ml-auto text-right mt-n1 pr-3\">\n        <RefreshButton next={refresh} />\n        <UncontrolledDropdown className=\"d-inline filter-dropdown\">\n          <DropdownToggle\n            caret\n            color=\"light\"\n            className=\"shadow-sm\"\n            style={{\n              backgroundColor: \"white\",\n            }}\n          >\n            <Calendar className=\"feather align-middle mt-n1\" /> {filterText}\n          </DropdownToggle>\n          <DropdownMenu\n            right\n            style={{\n              top: \"25px\",\n            }}\n          >\n            <DropdownItem onClick={() => updateDays(1, 0)}>Today</DropdownItem>\n            <DropdownItem onClick={() => updateDays(7, 1)}>\n              Last 7 Days\n            </DropdownItem>\n            <DropdownItem onClick={() => updateDays(30, 2)}>\n              Last 30 Days\n            </DropdownItem>\n            <DropdownItem onClick={() => updateDays(90, 3)}>\n              Last 90 Days\n            </DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem>Customize</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </Col>\n    )}\n  </Row>\n);\nexport default Header;\n","module.exports = __webpack_public_path__ + \"static/media/referralicon.8b6e03d8.svg\";","import React from \"react\";\nimport upArrow from \"../assets/img/icons/uparrow.svg\";\nimport downArrow from \"../assets/img/icons/downarrow.svg\";\n\nconst TransactionCard = ({ name, total_amount, percentage }) => (\n  <div className=\"transaction_card\">\n    <div className=\"transaction_volume\">\n      <h4>{name}</h4>\n      <p>\n        {total_amount}\n        {\"     \"}\n        <span>\n          {parseInt(percentage) >= 0 ? (\n            <>\n              +{percentage} %{\" \"}\n              <img className=\"img-fluid\" src={upArrow} alt=\"uparrow\" />\n            </>\n          ) : (\n            <>\n              <span className=\"text-danger\"> {percentage} %</span>{\" \"}\n              <img className=\"img-fluid\" src={downArrow} alt=\"uparrow\" />\n            </>\n          )}\n        </span>{\" \"}\n      </p>\n      <p className=\"time\">Analytics for last 30 days</p>\n    </div>\n  </div>\n);\n\nexport default TransactionCard;\n","import React from \"react\";\nimport TransactionCard from \"../../components/TransactionCard\";\n\nconst Statistics = ({ stats, index }) => {\n  const transactions = [\n    {\n      name: \"Total Transaction Volume\",\n      total_amount: stats.totalTransactionVolume,\n      percentage: `${stats.percentTransactionVol}`,\n    },\n    {\n      name: \"Total Transaction Value\",\n      total_amount: stats.totalTransactionValue,\n      percentage: `${stats.percentTransactionValue}`,\n    },\n    {\n      name: index === 0 ? \"Total Settl Customers\" : \"Total Settl Agents\",\n      total_amount:\n        index === 0 ? stats.settlCustomers.total : stats.settlAgents.total,\n      percentage:\n        index === 0\n          ? `${stats.settlCustomers.percentageChange}`\n          : `${stats.settlAgents.percentageChange}`,\n    },\n  ];\n  return (\n    <div className=\"transaction_body\">\n      {transactions.map((transaction, i) => (\n        <TransactionCard\n          key={i}\n          name={transaction.name}\n          total_amount={transaction.total_amount}\n          percentage={transaction.percentage}\n          icon={transaction.icon}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { connect } from \"react-redux\";\nimport {\n  Col,\n  Row,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Dropdown,\n} from \"reactstrap\";\nimport { Calendar } from \"react-feather\";\nimport { Card, CardBody, CardHeader, CardTitle } from \"reactstrap\";\n\nconst ColumnChart = ({ theme, breakdown }) => {\n  const transactions = [\"Transaction Breakdown\", \"Revenue Breakdown\"];\n  const [dropdownOpen, setOpen] = useState(false);\n  const [transaction, setTransaction] = useState(transactions[0]);\n  const toggle = () => setOpen(!dropdownOpen);\n  const {\n    january,\n    february,\n    march,\n    april,\n    may,\n    june,\n    july,\n    august,\n    september,\n    october,\n    november,\n    december,\n  } = breakdown;\n  const data = [\n    {\n      name: \"Bill Payment\",\n      data: [\n        january.billPayments,\n        february.billPayments,\n        march.billPayments,\n        april.billPayments,\n        may.billPayments,\n        june.billPayments,\n        july.billPayments,\n        august.billPayments,\n        september.billPayments,\n        october.billPayments,\n        november.billPayments,\n        december.billPayments,\n      ],\n    },\n    {\n      name: \"Peer-to-Peer\",\n      data: [\n        january.p2p,\n        february.p2p,\n        march.p2p,\n        april.p2p,\n        may.p2p,\n        june.p2p,\n        july.p2p,\n        august.p2p,\n        september.p2p,\n        october.p2p,\n        november.p2p,\n        december.p2p,\n      ],\n    },\n    {\n      name: \"Savings\",\n      data: [\n        january.savings,\n        february.savings,\n        march.savings,\n        april.savings,\n        may.savings,\n        june.savings,\n        july.savings,\n        august.savings,\n        september.savings,\n        october.savings,\n        november.savings,\n        december.savings,\n      ],\n    },\n    {\n      name: \"Transfer\",\n      data: [\n        january.transfers,\n        february.transfers,\n        march.transfers,\n        april.transfers,\n        may.transfers,\n        june.transfers,\n        july.transfers,\n        august.transfers,\n        september.transfers,\n        october.transfers,\n        november.transfers,\n        december.transfers,\n      ],\n    },\n    {\n      name: \"Money Request\",\n      data: [\n        january.moneyRequests,\n        february.moneyRequests,\n        march.moneyRequests,\n        april.moneyRequests,\n        may.moneyRequests,\n        june.moneyRequests,\n        july.moneyRequests,\n        august.moneyRequests,\n        september.moneyRequests,\n        october.moneyRequests,\n        november.moneyRequests,\n        december.moneyRequests,\n      ],\n    },\n  ];\n\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"60%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n    },\n\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return \"$ \" + val + \" thousands\";\n        },\n      },\n    },\n    colors: [\"#3DBDC8\", \"#27A0C7\", \"#DB74E4\", \"#61B3FF\", \"#9C6ADE\"],\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"d-flex\">\n        <CardTitle tag=\"h5\">\n          <Dropdown\n            isOpen={dropdownOpen}\n            toggle={toggle}\n            style={{\n              outline: \"none\",\n            }}\n          >\n            <DropdownToggle\n              style={{\n                border: \"none\",\n                display: \"flex\",\n                gap: \"5px\",\n                alignItems: \"center\",\n                color: \"black\",\n                backgroundColor: \"white\",\n              }}\n              caret\n            >\n              {transaction}\n              <DropdownMenu\n                className=\"dropdown_menu\"\n                style={{\n                  padding: \".5rem 0.3rem\",\n                  width: \"fit-content\",\n                  textAlign: \"center\",\n                }}\n              >\n                <p\n                  className=\"dropdown_option\"\n                  onClick={() => setTransaction(transactions[0])}\n                >\n                  {\" \"}\n                  {transactions[0]}\n                </p>\n                <p\n                  className=\"dropdown_option\"\n                  onClick={() => setTransaction(transactions[1])}\n                >\n                  {transactions[1]}\n                </p>\n              </DropdownMenu>\n            </DropdownToggle>\n          </Dropdown>\n        </CardTitle>\n        <Col xs=\"auto\" className=\"ml-auto text-right mt-n1\">\n          <UncontrolledDropdown className=\"d-inline filter-dropdown\">\n            <DropdownToggle\n              caret\n              color=\"light\"\n              className=\"shadow-sm\"\n              style={{\n                backgroundColor: \"white\",\n              }}\n            >\n              <Calendar className=\"feather align-middle mt-n1\" /> Jan 01, 2021 -\n              Dec 31 2021\n            </DropdownToggle>\n            <DropdownMenu\n              right\n              style={{\n                top: \"25px\",\n              }}\n            >\n              <DropdownItem>Today</DropdownItem>\n              <DropdownItem>Last 7 Days</DropdownItem>\n              <DropdownItem>Last 90 Days</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Customize</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Col>\n      </CardHeader>\n\n      <CardBody>\n        <div className=\"chart\">\n          <Chart options={options} series={data} type=\"bar\" height=\"350\" />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default connect((store) => ({\n  theme: store.theme.currentTheme,\n}))(ColumnChart);\n","import React, { useEffect, useState } from \"react\";\nimport Statistics from \"./Statistics\";\nimport Chart from \"./Chart\";\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport { Calendar } from \"react-feather\";\nimport Loader from \"../../components/Loader\";\nimport Request from \"../../requests/analytics\";\nimport { RefreshButton } from \"../../components/RefreshButton\";\n\nconst Analytics = ({ title, index }) => {\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n  const { analyticsBreakdown, userAnalytics } = Request();\n  const [breakdown, setBreakdown] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [days, setDays] = useState(30);\n  const [filterText, setFilterText] = useState(text[2]);\n\n  const fetchBreakdownData = async () => {\n    const response = await analyticsBreakdown();\n    if (response.code === \"00\") {\n      setBreakdown([response.data.consumers, response.data.agents]);\n    }\n  };\n  const getAnalytics = async () => {\n    const response = await userAnalytics(days);\n    if (response.code === \"00\") {\n      setStats([response.data.consumers, response.data.agents]);\n      console.log(response.data);\n    }\n  };\n  const refresh = () => {\n    setBreakdown(null);\n    setStats(null);\n    fetchBreakdownData();\n    getAnalytics();\n  };\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setStats(null);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n  useEffect(() => {\n    fetchBreakdownData();\n  }, []);\n  useEffect(() => {\n    getAnalytics();\n  }, [days]);\n  return (\n    <div\n      style={{\n        marginTop: \"8rem\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"10px\",\n        }}\n      >\n        <p\n          style={{\n            color: \"#304762\",\n            fontSize: \"20px\",\n          }}\n        >\n          Settl {title} Analytics\n        </p>\n        <div>\n          <RefreshButton next={refresh} />\n          <UncontrolledDropdown className=\"d-inline filter-dropdown\">\n            <DropdownToggle\n              caret\n              color=\"light\"\n              className=\"shadow-sm\"\n              style={{\n                backgroundColor: \"white\",\n              }}\n            >\n              <Calendar className=\"feather align-middle mt-n1\" /> {filterText}\n            </DropdownToggle>\n            <DropdownMenu\n              right\n              style={{\n                top: \"25px\",\n              }}\n            >\n              <DropdownItem onClick={() => updateDays(1, 0)}>\n                Today\n              </DropdownItem>\n              <DropdownItem onClick={() => updateDays(7, 1)}>\n                Last 7 Days\n              </DropdownItem>\n              <DropdownItem onClick={() => updateDays(30, 2)}>\n                Last 30 Days\n              </DropdownItem>\n              <DropdownItem onClick={() => updateDays(90, 3)}>\n                Last 90 Days\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Customize</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </div>\n      </div>\n      {!stats ? <Loader /> : <Statistics stats={stats[index]} index={index} />}\n\n      {!breakdown ? (\n        <Loader />\n      ) : (\n        <div\n          style={{\n            marginTop: \"2rem\",\n          }}\n        >\n          <Chart breakdown={breakdown[index]} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Analytics;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../../components/Header\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport logo from \"../../assets/img/icons/referralicon.svg\";\nimport Analytics from \"./Analytics\";\n\nconst SettlAnalytics = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const titles = [\"Customers\", \"Agents\"];\n\n  return (\n    <>\n      <div className=\"bg_absolute\">\n        <Header name=\"Reports\" logo={logo} />\n        <div className=\"nav\">\n          <div\n            onClick={() => setActiveTab(0)}\n            className={`${activeTab === 0 ? \"active_nav\" : \"\"}`}\n          >\n            <p>Setll Customers</p>\n          </div>\n          <div\n            onClick={() => setActiveTab(1)}\n            className={`${activeTab === 1 ? \"active_nav\" : \"\"}`}\n          >\n            <p>Settl Agents</p>\n          </div>\n        </div>\n      </div>\n      (\n      <TabContent activeTab={activeTab}>\n        {titles.map((_, i) => (\n          <TabPane tabId={i} key={i}>\n            <Analytics title={titles[i]} index={i} />\n          </TabPane>\n        ))}\n      </TabContent>\n    </>\n  );\n};\nexport default SettlAnalytics;\n"],"sourceRoot":""}