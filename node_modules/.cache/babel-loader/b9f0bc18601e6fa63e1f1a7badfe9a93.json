{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport baseURL from \"./baseUrl\";\n\nfunction create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === \"x\" ? r : r & 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n}\n\nvar CustomersRequest = function CustomersRequest() {\n  var _useSelector = useSelector(function (state) {\n    return state.user.details;\n  }),\n      token = _useSelector.token,\n      tokenType = _useSelector.tokenType;\n\n  var customerAnalytics = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(channels) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              requestId = create_UUID();\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(baseURL + \"backoffice/Customers/CustomerAnalytics\", {\n                params: {\n                  channels: channels,\n                  days: 30\n                },\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function customerAnalytics(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getConsumerInfo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(phoneno) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              requestId = create_UUID();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get(baseURL + \"backoffice/Customers/GetConsumersInfoById\", {\n                params: {\n                  phoneno: phoneno,\n                  days: 30\n                },\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.data);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function getConsumerInfo(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var resetTransactionPin = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              requestId = create_UUID();\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios.post(baseURL + \"backoffice/Customers/ResetTransactionPin\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response.data);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    return function resetTransactionPin(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var updateNextOfKin = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              requestId = create_UUID();\n              _context4.prev = 1;\n              _context4.next = 4;\n              return axios.post(baseURL + \"backoffice/Customers/UpdateNextOfKin\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response.data);\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 8]]);\n    }));\n\n    return function updateNextOfKin(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var updateAccountInfo = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              requestId = create_UUID();\n              _context5.prev = 1;\n              _context5.next = 4;\n              return axios.post(baseURL + \"backoffice/Customers/UpdateAccount\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response.data);\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 8]]);\n    }));\n\n    return function updateAccountInfo(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var freezeWallet = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              requestId = create_UUID();\n              _context6.prev = 1;\n              _context6.next = 4;\n              return axios.post(baseURL + \"backoffice/Customers/FreezeWallet\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context6.sent;\n              return _context6.abrupt(\"return\", response.data);\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](1);\n              return _context6.abrupt(\"return\", _context6.t0);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 8]]);\n    }));\n\n    return function freezeWallet(_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var getFrozenAccountDetails = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(phoneNo) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              requestId = create_UUID();\n              _context7.prev = 1;\n              _context7.next = 4;\n              return axios.get(baseURL + \"backoffice/Customers/Frozen/\".concat(phoneNo), {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context7.sent;\n              return _context7.abrupt(\"return\", response.data);\n\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](1);\n              return _context7.abrupt(\"return\", _context7.t0);\n\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 8]]);\n    }));\n\n    return function getFrozenAccountDetails(_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var blacklistDevice = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              requestId = create_UUID();\n              _context8.prev = 1;\n              _context8.next = 4;\n              return axios.post(baseURL + \"backoffice/Customers/BlacklistDevice\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context8.sent;\n              return _context8.abrupt(\"return\", response.data);\n\n            case 8:\n              _context8.prev = 8;\n              _context8.t0 = _context8[\"catch\"](1);\n              return _context8.abrupt(\"return\", _context8.t0);\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 8]]);\n    }));\n\n    return function blacklistDevice(_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var upgradeCustomer = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              requestId = create_UUID();\n              _context9.prev = 1;\n              _context9.next = 4;\n              return axios.post(baseURL + \"backoffice/Customers/Upgrade\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context9.sent;\n              return _context9.abrupt(\"return\", response.data);\n\n            case 8:\n              _context9.prev = 8;\n              _context9.t0 = _context9[\"catch\"](1);\n              return _context9.abrupt(\"return\", _context9.t0);\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 8]]);\n    }));\n\n    return function upgradeCustomer(_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var creditOrDebitCustomer = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              requestId = create_UUID();\n              _context10.prev = 1;\n              _context10.next = 4;\n              return axios.post(baseURL + \"backoffice/Customers/creditordebitwallet\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context10.sent;\n              return _context10.abrupt(\"return\", response.data);\n\n            case 8:\n              _context10.prev = 8;\n              _context10.t0 = _context10[\"catch\"](1);\n              return _context10.abrupt(\"return\", _context10.t0);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 8]]);\n    }));\n\n    return function creditOrDebitCustomer(_x10) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  return {\n    updateAccountInfo: updateAccountInfo,\n    updateNextOfKin: updateNextOfKin,\n    resetTransactionPin: resetTransactionPin,\n    getConsumerInfo: getConsumerInfo,\n    customerAnalytics: customerAnalytics,\n    freezeWallet: freezeWallet,\n    getFrozenAccountDetails: getFrozenAccountDetails,\n    blacklistDevice: blacklistDevice,\n    upgradeCustomer: upgradeCustomer,\n    creditOrDebitCustomer: creditOrDebitCustomer\n  };\n};\n\nexport default CustomersRequest;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/requests/customer.js"],"names":["axios","useSelector","baseURL","create_UUID","dt","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","CustomersRequest","state","user","details","token","tokenType","customerAnalytics","channels","requestId","get","params","days","headers","Authorization","response","data","getConsumerInfo","phoneno","resetTransactionPin","post","updateNextOfKin","updateAccountInfo","freezeWallet","getFrozenAccountDetails","phoneNo","blacklistDevice","upgradeCustomer","creditOrDebitCustomer"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport baseURL from \"./baseUrl\";\n\nfunction create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n    /[xy]/g,\n    function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    }\n  );\n  return uuid;\n}\n\nconst CustomersRequest = () => {\n  const { token, tokenType } = useSelector((state) => state.user.details);\n\n  const customerAnalytics = async (channels) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(\n        baseURL + \"backoffice/Customers/CustomerAnalytics\",\n        {\n          params: {\n            channels,\n            days: 30,\n          },\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const getConsumerInfo = async (phoneno) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(\n        baseURL + \"backoffice/Customers/GetConsumersInfoById\",\n        {\n          params: {\n            phoneno,\n            days: 30,\n          },\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const resetTransactionPin = async (data) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.post(\n        baseURL + \"backoffice/Customers/ResetTransactionPin\",\n        data,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const updateNextOfKin = async (data) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.post(\n        baseURL + \"backoffice/Customers/UpdateNextOfKin\",\n        data,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const updateAccountInfo = async (data) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.post(\n        baseURL + \"backoffice/Customers/UpdateAccount\",\n        data,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const freezeWallet = async (data) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.post(\n        baseURL + \"backoffice/Customers/FreezeWallet\",\n        data,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  const getFrozenAccountDetails = async (phoneNo) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.get(\n        baseURL + `backoffice/Customers/Frozen/${phoneNo}`,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  const blacklistDevice = async (data) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.post(\n        baseURL + \"backoffice/Customers/BlacklistDevice\",\n        data,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  const upgradeCustomer = async (data) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.post(\n        baseURL + \"backoffice/Customers/Upgrade\",\n        data,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  const creditOrDebitCustomer = async (data) => {\n    let requestId = create_UUID();\n    try {\n      const response = await axios.post(\n        baseURL + \"backoffice/Customers/creditordebitwallet\",\n        data,\n        {\n          headers: {\n            \"X-RequestId\": `${requestId}`,\n            Authorization: `${tokenType} ${token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n\n\n  return {\n    updateAccountInfo,\n    updateNextOfKin,\n    resetTransactionPin,\n    getConsumerInfo,\n    customerAnalytics,\n    freezeWallet,\n    getFrozenAccountDetails,\n    blacklistDevice,\n    upgradeCustomer,\n    creditOrDebitCustomer,\n  };\n};\n\nexport default CustomersRequest;\n"]},"metadata":{},"sourceType":"module"}