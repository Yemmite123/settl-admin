{"ast":null,"code":"import _defineProperty from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/auth/ResetPassword1.js\";\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../requests/auth\";\nimport { ReactComponent as DangerIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/img/icons/danger.svg\";\nimport { setChangePassword as _setChangePassword } from '../../redux/actions/userAction';\nimport PasswordStrengthMeter from '../../components/Auth/PasswordStrengthMeter';\nimport PasswordChanged from \"../../pages/auth/PasswordChanged\";\nimport \"./ResetPassword.css\";\nimport Loading from \"../../components/Loading\";\nimport usePasswordToggle from '../../Hooks/usePasswordToggle';\nimport logo from \"../../assets/img/logo/Settl logo.svg\";\nimport appStore from \"../../assets/img/logo/App Store.svg\";\nimport googleStore from \"../../assets/img/logo/Google Store.svg\";\nimport settlScreenshot from \"../../assets/img/screenshots/settl_screenshot.svg\";\nimport { TabContent, TabPane } from \"reactstrap\";\n\nvar Login = function Login(_ref) {\n  var _ref3;\n\n  var setChangePassword = _ref.setChangePassword,\n      email = _ref.email;\n\n  var _usePasswordToggle = usePasswordToggle(),\n      _usePasswordToggle2 = _slicedToArray(_usePasswordToggle, 2),\n      PasswordInutType = _usePasswordToggle2[0],\n      ToggleIcon = _usePasswordToggle2[1];\n\n  var _usePasswordToggle3 = usePasswordToggle(),\n      _usePasswordToggle4 = _slicedToArray(_usePasswordToggle3, 2),\n      ConfirmPasswordInutType = _usePasswordToggle4[0],\n      ConfirmToggleIcon = _usePasswordToggle4[1];\n\n  var _usePasswordToggle5 = usePasswordToggle(),\n      _usePasswordToggle6 = _slicedToArray(_usePasswordToggle5, 2),\n      OldPasswordInputType = _usePasswordToggle6[0],\n      OldPasswordIcon = _usePasswordToggle6[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      oldPassword = _useState2[0],\n      setOldPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setIsLaoding = _useState8[1];\n\n  var _useState9 = useState(\"1\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      activeTab = _useState10[0],\n      setActiveTab = _useState10[1]; // const error = errorHandling()\n\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var match = null;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setIsLaoding(true);\n              _context.next = 4;\n              return Auth(\"admin/changepassword\", {\n                email: email,\n                oldPassword: oldPassword,\n                password: password,\n                confirmPassword: confirmPassword\n              });\n\n            case 4:\n              response = _context.sent;\n\n              if (response.code === \"00\") {\n                setChangePassword(response.data);\n                setActiveTab(\"2\");\n                setIsLaoding(false);\n              } else {\n                setError(response);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"auth_bgold\",\n    className: \"container-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"login_section\",\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth_right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Easy & Reliable \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 63\n    }\n  }), \" Banking Platform\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: settlScreenshot,\n    alt: \"settl screenshot\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center downloadApps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: appStore,\n    alt: \"App Store\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: googleStore,\n    alt: \"Google Store\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 login_screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center login_screen_input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"settl Logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset_password_header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, \"For proper security we require a minimum of 8 characters with at least 1 uppercase, 1 lowercase, and 1 digit.\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: (_ref3 = {\n      backgroundColor: \"green\",\n      padding: \"0.5rem\"\n    }, _defineProperty(_ref3, \"backgroundColor\", \"#ffc7ca\"), _defineProperty(_ref3, \"borderRadius\", \"10px\"), _defineProperty(_ref3, \"border\", \"1px solid #fc5159\"), _ref3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DangerIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#fc5159\",\n      marginLeft: \"0.5rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, error))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"reset_password_label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"oldPassword\",\n    autoComplete: \"off\",\n    type: OldPasswordInputType,\n    className: \"form-control shadow-none\",\n    required: true,\n    onChange: function onChange(e) {\n      return setOldPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"old_password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, \"Old password\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reset_password_toggle_icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, OldPasswordIcon)), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"reset_password_label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    autoComplete: \"off\",\n    type: PasswordInutType,\n    className: \"form-control shadow-none\",\n    required: true,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"new_password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, \"New password\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reset_password_toggle_icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, ToggleIcon)), /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"reset_password_label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"confirmPassword\",\n    autoComplete: \"off\",\n    type: ConfirmPasswordInutType,\n    className: \"form-control shadow-none\",\n    required: true,\n    value: confirmPassword,\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Confirm_password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, \"Confirm password\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reset_password_toggle_icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, ConfirmToggleIcon))), /*#__PURE__*/React.createElement(PasswordStrengthMeter, {\n    password: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn reset_password_btn\",\n    disabled: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 24\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 111\n    }\n  }) : \"Reset Password\")))))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PasswordChanged, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 20\n    }\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$user, _state$user$details, _state$user$details$a;\n\n  return {\n    email: (_state$user = state.user) === null || _state$user === void 0 ? void 0 : (_state$user$details = _state$user.details) === null || _state$user$details === void 0 ? void 0 : (_state$user$details$a = _state$user$details.admin) === null || _state$user$details$a === void 0 ? void 0 : _state$user$details$a.email\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setChangePassword: function setChangePassword(body) {\n      return dispatch(_setChangePassword(body));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/auth/ResetPassword1.js"],"names":["React","useState","connect","Auth","setChangePassword","PasswordStrengthMeter","PasswordChanged","Loading","usePasswordToggle","TabContent","TabPane","Login","email","PasswordInutType","ToggleIcon","ConfirmPasswordInutType","ConfirmToggleIcon","OldPasswordInputType","OldPasswordIcon","oldPassword","setOldPassword","password","setPassword","confirmPassword","setConfirmPassword","loading","setIsLaoding","activeTab","setActiveTab","error","setError","match","handleSubmit","e","preventDefault","response","code","data","settlScreenshot","appStore","googleStore","logo","backgroundColor","padding","color","marginLeft","target","value","mapStateToProps","state","user","details","admin","mapDispatchToProps","dispatch","body"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,qBAArB;;AAEA,SAASC,iBAAiB,IAAjBA,kBAAT,QAAkC,gCAAlC;AACA,OAAOC,qBAAP,MAAkC,6CAAlC;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;;;;AAKA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAgC;AAAA;;AAAA,MAA9BP,iBAA8B,QAA9BA,iBAA8B;AAAA,MAAXQ,KAAW,QAAXA,KAAW;;AAC5C,2BAAwCJ,iBAAiB,EAAzD;AAAA;AAAA,MAAOK,gBAAP;AAAA,MAA0BC,UAA1B;;AACA,4BAAsDN,iBAAiB,EAAvE;AAAA;AAAA,MAAOO,uBAAP;AAAA,MAAiCC,iBAAjC;;AACA,4BAAgDR,iBAAiB,EAAjE;AAAA;AAAA,MAAOS,oBAAP;AAAA,MAA6BC,eAA7B;;AACA,kBAAsCjB,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOkB,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAiCnB,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOoB,QAAP;AAAA,MAAkBC,WAAlB;;AACA,mBAA+CrB,QAAQ,CAAC,EAAD,CAAvD;AAAA;AAAA,MAAOsB,eAAP;AAAA,MAAyBC,kBAAzB;;AACA,mBAAgCvB,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOwB,OAAP;AAAA,MAAgBC,YAAhB;;AACA,mBAAkCzB,QAAQ,CAAC,GAAD,CAA1C;AAAA;AAAA,MAAO0B,SAAP;AAAA,MAAkBC,YAAlB,kBAR4C,CAS5C;;;AACA,oBAA0B3B,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAO4B,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,KAAK,GAAG,IAAd;;AAEA,MAAMC,YAAY;AAAA,yEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AACER,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAFiB;AAAA,qBAGOvB,IAAI,CAAC,sBAAD,EAAyB;AAACS,gBAAAA,KAAK,EAALA,KAAD;AAAQO,gBAAAA,WAAW,EAAXA,WAAR;AAAqBE,gBAAAA,QAAQ,EAARA,QAArB;AAA+BE,gBAAAA,eAAe,EAAfA;AAA/B,eAAzB,CAHX;;AAAA;AAGXY,cAAAA,QAHW;;AAIhB,kBAAGA,QAAQ,CAACC,IAAT,KAAkB,IAArB,EAA0B;AACxBhC,gBAAAA,iBAAiB,CAAC+B,QAAQ,CAACE,IAAV,CAAjB;AACAT,gBAAAA,YAAY,CAAC,GAAD,CAAZ;AACAF,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,eAJD,MAIM;AACDI,gBAAAA,QAAQ,CAACK,QAAD,CAAR;AACJ;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZH,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAeE,sBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,EAAE,EAAC,eAAR;AAAwB,IAAA,SAAS,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEL,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5C,sBADD,eAEC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEW,eAAV;AAA2B,IAAA,GAAG,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFD,eAKC;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEC,QAAV;AAAoB,IAAA,GAAG,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,GAAG,EAAEC,WAAV;AAAuB,IAAA,GAAG,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALD,CADH,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAES,IAAV;AAAgB,IAAA,GAAG,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAFA,EAGCZ,KAAK,iBACN;AAAK,IAAA,SAAS,EAAC,uDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AACE,IAAA,SAAS,EAAC,kDADZ;AAEE,IAAA,KAAK;AACHa,MAAAA,eAAe,EAAE,OADd;AAEHC,MAAAA,OAAO,EAAE;AAFN,iDAGc,SAHd,0CAIW,MAJX,oCAKK,mBALL,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,UAAU,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIhB,KADJ,CAXF,CADE,CAJA,eAsBA;AAAU,IAAA,SAAS,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,YAAY,EAAC,KAFjB;AAGI,IAAA,IAAI,EAAEZ,oBAHV;AAII,IAAA,SAAS,EAAC,0BAJd;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,QAAQ,EAAE,kBAAAgB,CAAC;AAAA,aAAIb,cAAc,CAACa,CAAC,CAACa,MAAF,CAASC,KAAV,CAAlB;AAAA,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eASA;AACE,IAAA,OAAO,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATA,eAcA;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI7B,eADJ,CAdA,CAtBA,eAwCA;AAAU,IAAA,SAAS,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,YAAY,EAAC,KAFjB;AAGI,IAAA,IAAI,EAAEL,gBAHV;AAII,IAAA,SAAS,EAAC,0BAJd;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,QAAQ,EAAE,kBAAAoB,CAAC;AAAA,aAAIX,WAAW,CAACW,CAAC,CAACa,MAAF,CAASC,KAAV,CAAf;AAAA,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eASA;AACE,IAAA,OAAO,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATA,eAcA;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIjC,UADJ,CAdA,CAxCA,eA4DA;AAAU,IAAA,SAAS,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,IAAI,EAAC,iBADT;AAEI,IAAA,YAAY,EAAC,KAFjB;AAGI,IAAA,IAAI,EAAEC,uBAHV;AAII,IAAA,SAAS,EAAC,0BAJd;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,KAAK,EAAEQ,eANX;AAOI,IAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,aAAIT,kBAAkB,CAACS,CAAC,CAACa,MAAF,CAASC,KAAV,CAAtB;AAAA,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAUA;AACC,IAAA,OAAO,EAAC,kBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVA,eAeA;AAAM,IAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+C/B,iBAA/C,CAfA,CA5DA,CAFJ,eAgFI,oBAAC,qBAAD;AAAuB,IAAA,QAAQ,EAAEK,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhFJ,eAiFK;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,wBAAhC;AAAyD,IAAA,QAAQ,EAAEI,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6EA,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,gBAApG,CAjFL,CADF,CADF,CAdJ,CADA,CADF,eA2GE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACS,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,CA3GF,CADF,CADA,CADF;AAsHH,CAlJD;;AAoJA,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA;;AAAA,SAAY;AAClCrC,IAAAA,KAAK,iBAAEqC,KAAK,CAACC,IAAR,uEAAE,YAAYC,OAAd,iFAAE,oBAAqBC,KAAvB,0DAAE,sBAA4BxC;AADD,GAAZ;AAAA,CAAxB;;AAIA,IAAMyC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxClD,IAAAA,iBAAiB,EAAE,2BAACmD,IAAD;AAAA,aAAUD,QAAQ,CAAClD,kBAAiB,CAACmD,IAAD,CAAlB,CAAlB;AAAA;AADqB,GAAf;AAAA,CAA3B;;AAIA,eAAerD,OAAO,CAAC8C,eAAD,EAAkBK,kBAAlB,CAAP,CAA6C1C,KAA7C,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Auth } from \"../../requests/auth\";\r\nimport { ReactComponent as DangerIcon } from \"../../assets/img/icons/danger.svg\";\r\nimport { setChangePassword } from '../../redux/actions/userAction';\r\nimport PasswordStrengthMeter from '../../components/Auth/PasswordStrengthMeter';\r\nimport PasswordChanged from \"../../pages/auth/PasswordChanged\"\r\nimport \"./ResetPassword.css\";\r\nimport Loading from \"../../components/Loading\";\r\nimport usePasswordToggle from '../../Hooks/usePasswordToggle';\r\nimport logo from \"../../assets/img/logo/Settl logo.svg\";\r\nimport appStore from \"../../assets/img/logo/App Store.svg\";\r\nimport googleStore from \"../../assets/img/logo/Google Store.svg\";\r\nimport settlScreenshot from \"../../assets/img/screenshots/settl_screenshot.svg\";\r\nimport { TabContent, TabPane } from \"reactstrap\";\r\n\r\n\r\nconst Login = ({setChangePassword, email}) => {\r\n  const [PasswordInutType,  ToggleIcon] = usePasswordToggle();\r\n  const [ConfirmPasswordInutType,  ConfirmToggleIcon] = usePasswordToggle();\r\n  const [OldPasswordInputType, OldPasswordIcon] = usePasswordToggle();\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [password,  setPassword] = useState('');\r\n  const [confirmPassword,  setConfirmPassword] = useState('');\r\n  const [loading, setIsLaoding] = useState(false)\r\n  const [activeTab, setActiveTab] = useState(\"1\")\r\n  // const error = errorHandling()\r\n  const [error, setError] = useState(null);\r\n  const match = null;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n      setIsLaoding(true)\r\n      const response =  await Auth(\"admin/changepassword\", {email, oldPassword, password, confirmPassword});\r\n       if(response.code === \"00\"){\r\n         setChangePassword(response.data)\r\n         setActiveTab(\"2\")\r\n         setIsLaoding(false)\r\n       }else {\r\n            setError(response)\r\n       }\r\n      \r\n    \r\n  }\r\n\r\n    return (\r\n      <div id=\"auth_bgold\" className=\"container-fluid\">\r\n      <div id=\"login_section\" className=\"container\">\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                 <div className=\"auth_right\">\r\n                  <h1 className=\"text-center\">Easy & Reliable <br/> Banking Platform</h1>\r\n                  <div className=\"text-center\">\r\n                    <img src={settlScreenshot} alt=\"settl screenshot\"/>\r\n                  </div>\r\n                  <div className=\"text-center downloadApps\">\r\n                      <img src={appStore} alt=\"App Store\"/>\r\n                      <img src={googleStore} alt=\"Google Store\"/>\r\n                  </div>\r\n                 </div>\r\n              </div>\r\n            \r\n              <div className=\"col-md-6 login_screen\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"text-center login_screen_input\">\r\n                    <img src={logo} alt=\"settl Logo\"/>\r\n                      <div className=\"reset_password_header\"> \r\n                      <h1>Reset Password</h1>\r\n                      <p>For proper security we require a minimum of 8 characters with at least 1 uppercase, 1 lowercase, and 1 digit.</p>\r\n                      {error && (\r\n                      <div className=\"d-flex justify-content-center align-items-center mt-3\">\r\n                    <div\r\n                      className=\"d-flex justify-content-center align-items-center\"\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        padding: \"0.5rem\",\r\n                        backgroundColor: \"#ffc7ca\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"1px solid #fc5159\",\r\n                      }}\r\n                    >\r\n                      <DangerIcon />\r\n                      <span style={{ color: \"#fc5159\", marginLeft: \"0.5rem\" }}>\r\n                         {error}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                      <fieldset className=\"reset_password_label\">\r\n                      <input \r\n                          name=\"oldPassword\" \r\n                          autoComplete=\"off\" \r\n                          type={OldPasswordInputType} \r\n                          className=\"form-control shadow-none\" \r\n                          required\r\n                          onChange={e => setOldPassword(e.target.value)}\r\n                      />\r\n                      <label \r\n                        htmlFor=\"old_password\"\r\n                      >\r\n                        Old password\r\n                      </label>\r\n                      <span className=\"reset_password_toggle_icon\">\r\n                        { OldPasswordIcon }\r\n                      </span>\r\n                      </fieldset>\r\n                      <fieldset className=\"reset_password_label\">\r\n                      <input \r\n                          name=\"password\" \r\n                          autoComplete=\"off\" \r\n                          type={PasswordInutType} \r\n                          className=\"form-control shadow-none\" \r\n                          required\r\n                          onChange={e => setPassword(e.target.value)}\r\n                      />\r\n                      <label \r\n                        htmlFor=\"new_password\"\r\n                      >\r\n                        New password\r\n                      </label>\r\n                      <span className=\"reset_password_toggle_icon\">\r\n                        { ToggleIcon }\r\n                      </span>\r\n                      </fieldset>\r\n                      {/* <PasswordStrengthBar password={password} /> */}\r\n                        {/* <PasswordStrengthMeter password={password}/> */}\r\n                      <fieldset className=\"reset_password_label\">\r\n                      <input \r\n                          name=\"confirmPassword\" \r\n                          autoComplete=\"off\" \r\n                          type={ConfirmPasswordInutType} \r\n                          className=\"form-control shadow-none\" \r\n                          required\r\n                          value={confirmPassword}\r\n                          onChange={e => setConfirmPassword(e.target.value)}\r\n                      />\r\n                      <label \r\n                       htmlFor=\"Confirm_password\"\r\n                      >\r\n                        Confirm password \r\n                      </label>\r\n                      <span className=\"reset_password_toggle_icon\">{ ConfirmToggleIcon }</span>\r\n                      </fieldset>\r\n                  </div>\r\n                      <PasswordStrengthMeter password={password} />\r\n                       <button type=\"submit\" className=\"btn reset_password_btn\" disabled={loading}>{loading ? <Loading /> :\"Reset Password\"}</button>\r\n                      \r\n                  </div>\r\n                </form>\r\n              </div>\r\n              \r\n          </div>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n                   <PasswordChanged />\r\n          </TabPane>\r\n        </TabContent>\r\n         \r\n      </div>\r\n  </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.user?.details?.admin?.email\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setChangePassword: (body) => dispatch(setChangePassword(body))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n"]},"metadata":{},"sourceType":"module"}