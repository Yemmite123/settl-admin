{"ast":null,"code":"import React from\"react\";import BootstrapTable from\"react-bootstrap-table-next\";import paginationFactory from\"react-bootstrap-table2-paginator\";import data from\"./data\";import Loader from\"../../../../components/Loader\";var PerformanceChart=function PerformanceChart(_ref){var data=_ref.data;var columns=[{dataField:\"customerSuccessAgent\",text:\"Customer Success Agents\",headerStyle:{color:\"#858EBD\",textTransform:\"uppercase\",fontWeight:\"normal\",border:\"none\",width:\"250px\"},formatter:function formatter(cell,row,rowIndex){return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",gap:\"1rem\"}},/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:\"#F4F7FF\",padding:\"0.2rem 1rem\",borderRadius:\"8px\",display:\"flex\",alignItems:\"center\"}},rowIndex+1),/*#__PURE__*/React.createElement(\"p\",{style:{margin:\"auto 0\",padding:\"auto 0\",fontWeight:\"500\"}},cell));}},{dataField:\"resolvedIssue\",text:\"Resolved issues\",headerStyle:{color:\"#858EBD\",textTransform:\"uppercase\",fontWeight:\"normal\",border:\"none\",textAlign:\"center\"},style:function style(){return{textAlign:\"center\",fontWeight:\"500\"};}},{dataField:\"resolution\",text:\"progress\",headerStyle:{color:\"#858EBD\",textTransform:\"uppercase\",fontWeight:\"normal\",border:\"none\"},formatter:function formatter(cell,row,rowIndex){var color;if(row.percentResolution>=60){color=\"#1EB75B\";}else if(row.percentResolution<60&&row.percentResolution>30){color=\"#EDBF78\";}else{color=\"#F50D49\";}return/*#__PURE__*/React.createElement(\"div\",{style:{height:\"8px\",backgroundColor:\"#F6F4F8\",borderRadius:\"5px\"}},/*#__PURE__*/React.createElement(\"div\",{style:{width:\"\".concat(cell,\"%\"),height:\"100%\",backgroundColor:color,borderRadius:\"5px\"}}));}},{dataField:\"avgResolutionTime\",text:\"Avg. Resolution Time\",headerStyle:{color:\"#858EBD\",textTransform:\"uppercase\",fontWeight:\"normal\",border:\"none\",textAlign:\"center\"},style:function style(){return{textAlign:\"center\",fontWeight:\"500\"};}},{dataField:\"resolution\",text:\"resolution\",headerStyle:{color:\"#858EBD\",textTransform:\"uppercase\",fontWeight:\"normal\",border:\"none\",width:\"250px\"},formatter:function formatter(cell,row,rowIndex){var color;if(row.percentResolution>=60){color=\"#1EB75B\";}else if(row.percentResolution<60&&row.percentResolution>30){color=\"#EDBF78\";}else{color=\"#F50D49\";}return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",gap:\"1rem\"}},/*#__PURE__*/React.createElement(\"p\",{style:{color:\"#304762\",fontWeight:\"600\"}},\" \",row.percentResolution,\"%\",\" \"),/*#__PURE__*/React.createElement(\"p\",{style:{color:color,fontSize:\"12px\"}},\"(\",row.percentResolved,\")\",\" \",row.percentResolution>=60?\"\\u2191\":\"\\u2193\"),/*#__PURE__*/React.createElement(\"p\",{style:{color:\"#798C9C\",fontSize:\"12px\"}},\"(Versus last 30 days)\"));}}];var rowStyle={border:\"none !important\"};var customTotal=function customTotal(from,to,size){return/*#__PURE__*/React.createElement(\"span\",{className:\"react-bootstrap-table-pagination-total\",style:{padding:\"1rem\"}},\"Showing \",from,\" to \",to,\" of \",size,\" Results\");};return/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:\"white\",marginTop:\"3rem\"}},/*#__PURE__*/React.createElement(\"p\",{className:\"table_title\"},\"CS Resolution Performance\"),!data?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(BootstrapTable,{keyField:\"id\",bordered:false,data:data,columns:columns,rowStyle:rowStyle,pagination:paginationFactory({sizePerPage:9,hideSizePerPage:true,showTotal:true,paginationTotalRenderer:customTotal})}));};export default PerformanceChart;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/dashboards/Issue Resolution/Analytics/PerformaceChart.js"],"names":["React","BootstrapTable","paginationFactory","data","Loader","PerformanceChart","columns","dataField","text","headerStyle","color","textTransform","fontWeight","border","width","formatter","cell","row","rowIndex","display","gap","backgroundColor","padding","borderRadius","alignItems","margin","textAlign","style","percentResolution","height","fontSize","percentResolved","rowStyle","customTotal","from","to","size","marginTop","sizePerPage","hideSizePerPage","showTotal","paginationTotalRenderer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport data from \"./data\";\nimport Loader from \"../../../../components/Loader\";\n\nconst PerformanceChart = ({ data }) => {\n  const columns = [\n    {\n      dataField: \"customerSuccessAgent\",\n      text: \"Customer Success Agents\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        width: \"250px\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"1rem\",\n            }}\n          >\n            <span\n              style={{\n                backgroundColor: \"#F4F7FF\",\n                padding: \"0.2rem 1rem\",\n                borderRadius: \"8px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              {rowIndex + 1}\n            </span>\n            <p\n              style={{\n                margin: \"auto 0\",\n                padding: \"auto 0\",\n                fontWeight: \"500\",\n              }}\n            >\n              {cell}\n            </p>\n          </div>\n        );\n      },\n    },\n    {\n      dataField: \"resolvedIssue\",\n      text: \"Resolved issues\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        textAlign: \"center\",\n      },\n      style: () => ({\n        textAlign: \"center\",\n        fontWeight: \"500\",\n      }),\n    },\n    {\n      dataField: \"resolution\",\n      text: \"progress\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        let color;\n        if (row.percentResolution >= 60) {\n          color = \"#1EB75B\";\n        } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n          color = \"#EDBF78\";\n        } else {\n          color = \"#F50D49\";\n        }\n        return (\n          <div\n            style={{\n              height: \"8px\",\n              backgroundColor: \"#F6F4F8\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <div\n              style={{\n                width: `${cell}%`,\n                height: \"100%\",\n                backgroundColor: color,\n                borderRadius: \"5px\",\n              }}\n            ></div>\n          </div>\n        );\n      },\n    },\n    {\n      dataField: \"avgResolutionTime\",\n      text: \"Avg. Resolution Time\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        textAlign: \"center\",\n      },\n      style: () => ({\n        textAlign: \"center\",\n        fontWeight: \"500\",\n      }),\n    },\n    {\n      dataField: \"resolution\",\n      text: \"resolution\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        width: \"250px\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        let color;\n        if (row.percentResolution >= 60) {\n          color = \"#1EB75B\";\n        } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n          color = \"#EDBF78\";\n        } else {\n          color = \"#F50D49\";\n        }\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"1rem\",\n            }}\n          >\n            <p\n              style={{\n                color: \"#304762\",\n                fontWeight: \"600\",\n              }}\n            >\n              {\" \"}\n              {row.percentResolution}%{\" \"}\n            </p>\n            <p\n              style={{\n                color: color,\n                fontSize: \"12px\",\n              }}\n            >\n              ({row.percentResolved}){\" \"}\n              {row.percentResolution >= 60 ? \"\\u2191\" : \"\\u2193\"}\n            </p>\n            <p\n              style={{\n                color: \"#798C9C\",\n                fontSize: \"12px\",\n              }}\n            >\n              (Versus last 30 days)\n            </p>\n          </div>\n        );\n      },\n    },\n  ];\n  const rowStyle = {\n    border: \"none !important\",\n  };\n  const customTotal = (from, to, size) => (\n    <span\n      className=\"react-bootstrap-table-pagination-total\"\n      style={{\n        padding: \"1rem\",\n      }}\n    >\n      Showing {from} to {to} of {size} Results\n    </span>\n  );\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        marginTop: \"3rem\",\n      }}\n    >\n      <p className=\"table_title\">CS Resolution Performance</p>\n      {!data ? (\n        <Loader />\n      ) : (\n        <BootstrapTable\n          keyField=\"id\"\n          bordered={false}\n          data={data}\n          columns={columns}\n          rowStyle={rowStyle}\n          pagination={paginationFactory({\n            sizePerPage: 9,\n            hideSizePerPage: true,\n            showTotal: true,\n            paginationTotalRenderer: customTotal,\n          })}\n        />\n      )}\n    </div>\n  );\n};\nexport default PerformanceChart;\n"]},"metadata":{},"sourceType":"module"}