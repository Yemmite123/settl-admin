{"ast":null,"code":"import _defineProperty from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from\"react-redux\";import{Auth}from\"../../requests/auth\";import{ReactComponent as DangerIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/img/icons/danger.svg\";import{setChangePassword as _setChangePassword}from'../../redux/actions/userAction';import PasswordStrengthMeter from'../../components/Auth/PasswordStrengthMeter';import PasswordChanged from\"../../pages/auth/PasswordChanged\";import\"./ResetPassword.css\";import Loading from\"../../components/Loading\";import usePasswordToggle from'../../Hooks/usePasswordToggle';import logo from\"../../assets/img/logo/Settl logo.svg\";import appStore from\"../../assets/img/logo/App Store.svg\";import googleStore from\"../../assets/img/logo/Google Store.svg\";import settlScreenshot from\"../../assets/img/screenshots/settl_screenshot.svg\";import{TabContent,TabPane}from\"reactstrap\";var Login=function Login(_ref){var _ref3;var setChangePassword=_ref.setChangePassword,email=_ref.email;var _usePasswordToggle=usePasswordToggle(),_usePasswordToggle2=_slicedToArray(_usePasswordToggle,2),PasswordInutType=_usePasswordToggle2[0],ToggleIcon=_usePasswordToggle2[1];var _usePasswordToggle3=usePasswordToggle(),_usePasswordToggle4=_slicedToArray(_usePasswordToggle3,2),ConfirmPasswordInutType=_usePasswordToggle4[0],ConfirmToggleIcon=_usePasswordToggle4[1];var _usePasswordToggle5=usePasswordToggle(),_usePasswordToggle6=_slicedToArray(_usePasswordToggle5,2),OldPasswordInputType=_usePasswordToggle6[0],OldPasswordIcon=_usePasswordToggle6[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),oldPassword=_useState2[0],setOldPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setIsLaoding=_useState8[1];var _useState9=useState(\"1\"),_useState10=_slicedToArray(_useState9,2),activeTab=_useState10[0],setActiveTab=_useState10[1];// const error = errorHandling()\nvar _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];var match=null;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();setIsLaoding(true);_context.next=4;return Auth(\"admin/changepassword\",{email:email,oldPassword:oldPassword,password:password,confirmPassword:confirmPassword});case 4:response=_context.sent;if(response.code===\"00\"){setChangePassword(response.data);setActiveTab(\"2\");setIsLaoding(false);}else{setError(response);}case 6:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{id:\"auth_bgold\",className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"div\",{id:\"login_section\",className:\"container\"},/*#__PURE__*/React.createElement(TabContent,{activeTab:activeTab},/*#__PURE__*/React.createElement(TabPane,{tabId:\"1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"auth_right\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"text-center\"},\"Easy & Reliable \",/*#__PURE__*/React.createElement(\"br\",null),\" Banking Platform\"),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"img\",{src:settlScreenshot,alt:\"settl screenshot\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center downloadApps\"},/*#__PURE__*/React.createElement(\"img\",{src:appStore,alt:\"App Store\"}),/*#__PURE__*/React.createElement(\"img\",{src:googleStore,alt:\"Google Store\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6 login_screen\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"text-center login_screen_input\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"settl Logo\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"reset_password_header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Reset Password\"),/*#__PURE__*/React.createElement(\"p\",null,\"For proper security we require a minimum of 8 characters with at least 1 uppercase, 1 lowercase, and 1 digit.\"),error&&/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center mt-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center\",style:(_ref3={backgroundColor:\"green\",padding:\"0.5rem\"},_defineProperty(_ref3,\"backgroundColor\",\"#ffc7ca\"),_defineProperty(_ref3,\"borderRadius\",\"10px\"),_defineProperty(_ref3,\"border\",\"1px solid #fc5159\"),_ref3)},/*#__PURE__*/React.createElement(DangerIcon,null),/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#fc5159\",marginLeft:\"0.5rem\"}},error))),/*#__PURE__*/React.createElement(\"fieldset\",{className:\"reset_password_label\"},/*#__PURE__*/React.createElement(\"input\",{name:\"oldPassword\",autoComplete:\"off\",type:OldPasswordInputType,className:\"form-control shadow-none\",required:true,onChange:function onChange(e){return setOldPassword(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"old_password\"},\"Old password\"),/*#__PURE__*/React.createElement(\"span\",{className:\"reset_password_toggle_icon\"},OldPasswordIcon)),/*#__PURE__*/React.createElement(\"fieldset\",{className:\"reset_password_label\"},/*#__PURE__*/React.createElement(\"input\",{name:\"password\",autoComplete:\"off\",type:PasswordInutType,className:\"form-control shadow-none\",required:true,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"new_password\"},\"New password\"),/*#__PURE__*/React.createElement(\"span\",{className:\"reset_password_toggle_icon\"},ToggleIcon)),/*#__PURE__*/React.createElement(\"fieldset\",{className:\"reset_password_label\"},/*#__PURE__*/React.createElement(\"input\",{name:\"confirmPassword\",autoComplete:\"off\",type:ConfirmPasswordInutType,className:\"form-control shadow-none\",required:true,value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Confirm_password\"},\"Confirm password\"),/*#__PURE__*/React.createElement(\"span\",{className:\"reset_password_toggle_icon\"},ConfirmToggleIcon))),/*#__PURE__*/React.createElement(PasswordStrengthMeter,{password:password}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn reset_password_btn\",disabled:loading},loading?/*#__PURE__*/React.createElement(Loading,null):\"Reset Password\")))))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"2\"},/*#__PURE__*/React.createElement(PasswordChanged,null)))));};var mapStateToProps=function mapStateToProps(state){var _state$user,_state$user$details,_state$user$details$a;return{email:(_state$user=state.user)===null||_state$user===void 0?void 0:(_state$user$details=_state$user.details)===null||_state$user$details===void 0?void 0:(_state$user$details$a=_state$user$details.admin)===null||_state$user$details$a===void 0?void 0:_state$user$details$a.email};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setChangePassword:function setChangePassword(body){return dispatch(_setChangePassword(body));}};};export default connect(mapStateToProps,mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/auth/ResetPassword1.js"],"names":["React","useState","connect","Auth","setChangePassword","PasswordStrengthMeter","PasswordChanged","Loading","usePasswordToggle","TabContent","TabPane","Login","email","PasswordInutType","ToggleIcon","ConfirmPasswordInutType","ConfirmToggleIcon","OldPasswordInputType","OldPasswordIcon","oldPassword","setOldPassword","password","setPassword","confirmPassword","setConfirmPassword","loading","setIsLaoding","activeTab","setActiveTab","error","setError","match","handleSubmit","e","preventDefault","response","code","data","settlScreenshot","appStore","googleStore","logo","backgroundColor","padding","color","marginLeft","target","value","mapStateToProps","state","user","details","admin","mapDispatchToProps","dispatch","body"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Auth } from \"../../requests/auth\";\r\nimport { ReactComponent as DangerIcon } from \"../../assets/img/icons/danger.svg\";\r\nimport { setChangePassword } from '../../redux/actions/userAction';\r\nimport PasswordStrengthMeter from '../../components/Auth/PasswordStrengthMeter';\r\nimport PasswordChanged from \"../../pages/auth/PasswordChanged\"\r\nimport \"./ResetPassword.css\";\r\nimport Loading from \"../../components/Loading\";\r\nimport usePasswordToggle from '../../Hooks/usePasswordToggle';\r\nimport logo from \"../../assets/img/logo/Settl logo.svg\";\r\nimport appStore from \"../../assets/img/logo/App Store.svg\";\r\nimport googleStore from \"../../assets/img/logo/Google Store.svg\";\r\nimport settlScreenshot from \"../../assets/img/screenshots/settl_screenshot.svg\";\r\nimport { TabContent, TabPane } from \"reactstrap\";\r\n\r\n\r\nconst Login = ({setChangePassword, email}) => {\r\n  const [PasswordInutType,  ToggleIcon] = usePasswordToggle();\r\n  const [ConfirmPasswordInutType,  ConfirmToggleIcon] = usePasswordToggle();\r\n  const [OldPasswordInputType, OldPasswordIcon] = usePasswordToggle();\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [password,  setPassword] = useState('');\r\n  const [confirmPassword,  setConfirmPassword] = useState('');\r\n  const [loading, setIsLaoding] = useState(false)\r\n  const [activeTab, setActiveTab] = useState(\"1\")\r\n  // const error = errorHandling()\r\n  const [error, setError] = useState(null);\r\n  const match = null;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n      setIsLaoding(true)\r\n      const response =  await Auth(\"admin/changepassword\", {email, oldPassword, password, confirmPassword});\r\n       if(response.code === \"00\"){\r\n         setChangePassword(response.data)\r\n         setActiveTab(\"2\")\r\n         setIsLaoding(false)\r\n       }else {\r\n            setError(response)\r\n       }\r\n      \r\n    \r\n  }\r\n\r\n    return (\r\n      <div id=\"auth_bgold\" className=\"container-fluid\">\r\n      <div id=\"login_section\" className=\"container\">\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                 <div className=\"auth_right\">\r\n                  <h1 className=\"text-center\">Easy & Reliable <br/> Banking Platform</h1>\r\n                  <div className=\"text-center\">\r\n                    <img src={settlScreenshot} alt=\"settl screenshot\"/>\r\n                  </div>\r\n                  <div className=\"text-center downloadApps\">\r\n                      <img src={appStore} alt=\"App Store\"/>\r\n                      <img src={googleStore} alt=\"Google Store\"/>\r\n                  </div>\r\n                 </div>\r\n              </div>\r\n            \r\n              <div className=\"col-md-6 login_screen\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"text-center login_screen_input\">\r\n                    <img src={logo} alt=\"settl Logo\"/>\r\n                      <div className=\"reset_password_header\"> \r\n                      <h1>Reset Password</h1>\r\n                      <p>For proper security we require a minimum of 8 characters with at least 1 uppercase, 1 lowercase, and 1 digit.</p>\r\n                      {error && (\r\n                      <div className=\"d-flex justify-content-center align-items-center mt-3\">\r\n                    <div\r\n                      className=\"d-flex justify-content-center align-items-center\"\r\n                      style={{\r\n                        backgroundColor: \"green\",\r\n                        padding: \"0.5rem\",\r\n                        backgroundColor: \"#ffc7ca\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"1px solid #fc5159\",\r\n                      }}\r\n                    >\r\n                      <DangerIcon />\r\n                      <span style={{ color: \"#fc5159\", marginLeft: \"0.5rem\" }}>\r\n                         {error}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                      <fieldset className=\"reset_password_label\">\r\n                      <input \r\n                          name=\"oldPassword\" \r\n                          autoComplete=\"off\" \r\n                          type={OldPasswordInputType} \r\n                          className=\"form-control shadow-none\" \r\n                          required\r\n                          onChange={e => setOldPassword(e.target.value)}\r\n                      />\r\n                      <label \r\n                        htmlFor=\"old_password\"\r\n                      >\r\n                        Old password\r\n                      </label>\r\n                      <span className=\"reset_password_toggle_icon\">\r\n                        { OldPasswordIcon }\r\n                      </span>\r\n                      </fieldset>\r\n                      <fieldset className=\"reset_password_label\">\r\n                      <input \r\n                          name=\"password\" \r\n                          autoComplete=\"off\" \r\n                          type={PasswordInutType} \r\n                          className=\"form-control shadow-none\" \r\n                          required\r\n                          onChange={e => setPassword(e.target.value)}\r\n                      />\r\n                      <label \r\n                        htmlFor=\"new_password\"\r\n                      >\r\n                        New password\r\n                      </label>\r\n                      <span className=\"reset_password_toggle_icon\">\r\n                        { ToggleIcon }\r\n                      </span>\r\n                      </fieldset>\r\n                      {/* <PasswordStrengthBar password={password} /> */}\r\n                        {/* <PasswordStrengthMeter password={password}/> */}\r\n                      <fieldset className=\"reset_password_label\">\r\n                      <input \r\n                          name=\"confirmPassword\" \r\n                          autoComplete=\"off\" \r\n                          type={ConfirmPasswordInutType} \r\n                          className=\"form-control shadow-none\" \r\n                          required\r\n                          value={confirmPassword}\r\n                          onChange={e => setConfirmPassword(e.target.value)}\r\n                      />\r\n                      <label \r\n                       htmlFor=\"Confirm_password\"\r\n                      >\r\n                        Confirm password \r\n                      </label>\r\n                      <span className=\"reset_password_toggle_icon\">{ ConfirmToggleIcon }</span>\r\n                      </fieldset>\r\n                  </div>\r\n                      <PasswordStrengthMeter password={password} />\r\n                       <button type=\"submit\" className=\"btn reset_password_btn\" disabled={loading}>{loading ? <Loading /> :\"Reset Password\"}</button>\r\n                      \r\n                  </div>\r\n                </form>\r\n              </div>\r\n              \r\n          </div>\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n                   <PasswordChanged />\r\n          </TabPane>\r\n        </TabContent>\r\n         \r\n      </div>\r\n  </div>\r\n)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.user?.details?.admin?.email\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setChangePassword: (body) => dispatch(setChangePassword(body))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n"]},"metadata":{},"sourceType":"module"}