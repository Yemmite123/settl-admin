{"ast":null,"code":"import _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/customers/ReprocessTransactionDialog.js\";\nimport React, { useState } from \"react\";\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../BgImages/close.svg\";\nimport { Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Label } from \"reactstrap\";\nimport InputBox from \"../../components/InputBox\";\nexport default function ReprocessTransactionDialog(props) {\n  var _useState = useState(\"Assurance uwangue\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      adminFullName = _useState2[0],\n      setAdminFullName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reasonForReprocess = _useState4[0],\n      setReasonForReprocess = _useState4[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    className: \"admin-modal freeze-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Reprocess Transaction\", /*#__PURE__*/React.createElement(Close, {\n    className: \"close-modal\",\n    onClick: props.toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, \"Please confirm this is the right \", props.title, \" account before initiating this process\")), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputBox, {\n    type: \"text\",\n    name: \"adminFullName\",\n    id: \"adminFullName\",\n    value: adminFullName,\n    onChange: function onChange(e) {\n      return setAdminFullName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"adminFullName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, \"Admin Full Name\")), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputBox, {\n    type: \"textarea\",\n    name: \"reasonForReprocess\",\n    id: \"reasonForReprocess\",\n    placeholder: \"Reprocess Reason\",\n    value: reasonForReprocess,\n    rows: \"4\",\n    onChange: function onChange(e) {\n      return setReasonForReprocess(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn-add w-100 py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Reprocess\"))))));\n}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/customers/ReprocessTransactionDialog.js"],"names":["React","useState","Button","Modal","ModalBody","ModalHeader","Form","FormGroup","Label","InputBox","ReprocessTransactionDialog","props","adminFullName","setAdminFullName","reasonForReprocess","setReasonForReprocess","isOpen","toggle","title","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,IALJ,EAMIC,SANJ,EAOIC,KAPJ,QAQO,YARP;AASA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,eAAe,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;AACtD,kBAA0CV,QAAQ,CAAC,mBAAD,CAAlD;AAAA;AAAA,MAAOW,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAoDZ,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,MAAOa,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEA,sBACI,uDACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEJ,KAAK,CAACK,MAArB;AAA6B,IAAA,MAAM,EAAEL,KAAK,CAACM,MAA3C;AAAmD,IAAA,SAAS,EAAC,0BAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEI,oBAAC,KAAD;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,OAAO,EAAEN,KAAK,CAACM,MAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAqCN,KAAK,CAACO,KAA3C,4CADJ,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,eAFT;AAGI,IAAA,EAAE,EAAC,eAHP;AAII,IAAA,KAAK,EAAEN,aAJX;AAKI,IAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,aAAON,gBAAgB,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARJ,CADJ,eAWI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,oBAFT;AAGI,IAAA,EAAE,EAAC,oBAHP;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,KAAK,EAAEP,kBALX;AAMI,IAAA,IAAI,EAAC,GANT;AAOI,IAAA,QAAQ,EAAE,kBAACK,CAAD;AAAA,aAAOJ,qBAAqB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5B;AAAA,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,CAJJ,eA2BI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CA3BJ,CADJ,CARJ,CADJ,CADJ;AA8CH","sourcesContent":["import React, { useState } from \"react\";\nimport { ReactComponent as Close } from \"../../BgImages/close.svg\";\nimport { \n    Button,\n    Modal, \n    ModalBody,\n    ModalHeader,\n    Form,\n    FormGroup,\n    Label \n} from \"reactstrap\";\nimport InputBox from \"../../components/InputBox\";\n\nexport default function ReprocessTransactionDialog(props) {\n    const [adminFullName, setAdminFullName] = useState(\"Assurance uwangue\");\n    const [reasonForReprocess, setReasonForReprocess] = useState(\"\");\n    \n    return(\n        <>\n            <Modal isOpen={props.isOpen} toggle={props.toggle} className=\"admin-modal freeze-modal\">\n                <ModalHeader>\n                    Reprocess Transaction\n                    <Close\n                        className=\"close-modal\"\n                        onClick={props.toggle}\n                    />\n                </ModalHeader>\n                <ModalBody>\n                    <div>\n                        <div className=\"text-center\">\n                            <p>Please confirm this is the right {props.title} account before initiating this process</p>\n                        </div>\n                        <Form>\n                            <FormGroup>\n                                <InputBox\n                                    type=\"text\"\n                                    name=\"adminFullName\" \n                                    id=\"adminFullName\"\n                                    value={adminFullName}\n                                    onChange={(e) => setAdminFullName(e.target.value)}\n                                />\n                                <Label for=\"adminFullName\">Admin Full Name</Label>\n                            </FormGroup>\n                            <FormGroup className=\"pb-3\">\n                                <InputBox\n                                    type=\"textarea\"\n                                    name=\"reasonForReprocess\"\n                                    id=\"reasonForReprocess\"\n                                    placeholder=\"Reprocess Reason\"\n                                    value={reasonForReprocess}\n                                    rows=\"4\"\n                                    onChange={(e) => setReasonForReprocess(e.target.value)}\n                                />\n                            </FormGroup>\n                        </Form>\n                        <div className=\"w-100 mt-4\">\n                            <Button color=\"primary\" className=\"btn-add w-100 py-3\">Reprocess</Button>\n                        </div>\n                    </div>\n                </ModalBody>\n            </Modal>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}