{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/dashboards/Issue Resolution/Analytics/PerformaceChart.js\";\n\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport data from \"./data\";\nimport Loader from \"../../../../components/Loader\";\n\nvar PerformanceChart = function PerformanceChart(_ref) {\n  var data = _ref.data;\n  var columns = [{\n    dataField: \"customerSuccessAgent\",\n    text: \"Customer Success Agents\",\n    headerStyle: {\n      color: \"#858EBD\",\n      textTransform: \"uppercase\",\n      fontWeight: \"normal\",\n      border: \"none\",\n      width: \"250px\"\n    },\n    formatter: function formatter(cell, row, rowIndex) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"1rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          backgroundColor: \"#F4F7FF\",\n          padding: \"0.2rem 1rem\",\n          borderRadius: \"8px\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, rowIndex + 1), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          margin: \"auto 0\",\n          padding: \"auto 0\",\n          fontWeight: \"500\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, cell));\n    }\n  }, {\n    dataField: \"resolvedIssue\",\n    text: \"Resolved issues\",\n    headerStyle: {\n      color: \"#858EBD\",\n      textTransform: \"uppercase\",\n      fontWeight: \"normal\",\n      border: \"none\",\n      textAlign: \"center\"\n    },\n    style: function style() {\n      return {\n        textAlign: \"center\",\n        fontWeight: \"500\"\n      };\n    }\n  }, {\n    dataField: \"resolution\",\n    text: \"progress\",\n    headerStyle: {\n      color: \"#858EBD\",\n      textTransform: \"uppercase\",\n      fontWeight: \"normal\",\n      border: \"none\"\n    },\n    formatter: function formatter(cell, row, rowIndex) {\n      var color;\n\n      if (row.percentResolution >= 60) {\n        color = \"#1EB75B\";\n      } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n        color = \"#EDBF78\";\n      } else {\n        color = \"#F50D49\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"8px\",\n          backgroundColor: \"#F6F4F8\",\n          borderRadius: \"5px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"\".concat(cell, \"%\"),\n          height: \"100%\",\n          backgroundColor: color,\n          borderRadius: \"5px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    dataField: \"avgResolutionTime\",\n    text: \"Avg. Resolution Time\",\n    headerStyle: {\n      color: \"#858EBD\",\n      textTransform: \"uppercase\",\n      fontWeight: \"normal\",\n      border: \"none\",\n      textAlign: \"center\"\n    },\n    style: function style() {\n      return {\n        textAlign: \"center\",\n        fontWeight: \"500\"\n      };\n    }\n  }, {\n    dataField: \"resolution\",\n    text: \"resolution\",\n    headerStyle: {\n      color: \"#858EBD\",\n      textTransform: \"uppercase\",\n      fontWeight: \"normal\",\n      border: \"none\",\n      width: \"250px\"\n    },\n    formatter: function formatter(cell, row, rowIndex) {\n      var color;\n\n      if (row.percentResolution >= 60) {\n        color = \"#1EB75B\";\n      } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n        color = \"#EDBF78\";\n      } else {\n        color = \"#F50D49\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"1rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: \"#304762\",\n          fontWeight: \"600\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, \" \", row.percentResolution, \"%\", \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: color,\n          fontSize: \"12px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, \"(\", row.percentResolved, \")\", \" \", row.percentResolution >= 60 ? \"\\u2191\" : \"\\u2193\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: \"#798C9C\",\n          fontSize: \"12px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, \"(Versus last 30 days)\"));\n    }\n  }];\n  var rowStyle = {\n    border: \"none !important\"\n  };\n\n  var customTotal = function customTotal(from, to, size) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"react-bootstrap-table-pagination-total\",\n      style: {\n        padding: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }\n    }, \"Showing \", from, \" to \", to, \" of \", size, \" Results\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      marginTop: \"3rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"table_title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"CS Resolution Performance\"), !data ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(BootstrapTable, {\n    keyField: \"id\",\n    bordered: false,\n    data: data,\n    columns: columns,\n    rowStyle: rowStyle,\n    pagination: paginationFactory({\n      sizePerPage: 9,\n      hideSizePerPage: true,\n      showTotal: true,\n      paginationTotalRenderer: customTotal\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PerformanceChart;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/dashboards/Issue Resolution/Analytics/PerformaceChart.js"],"names":["React","BootstrapTable","paginationFactory","data","Loader","PerformanceChart","columns","dataField","text","headerStyle","color","textTransform","fontWeight","border","width","formatter","cell","row","rowIndex","display","gap","backgroundColor","padding","borderRadius","alignItems","margin","textAlign","style","percentResolution","height","fontSize","percentResolved","rowStyle","customTotal","from","to","size","marginTop","sizePerPage","hideSizePerPage","showTotal","paginationTotalRenderer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport data from \"./data\";\nimport Loader from \"../../../../components/Loader\";\n\nconst PerformanceChart = ({ data }) => {\n  const columns = [\n    {\n      dataField: \"customerSuccessAgent\",\n      text: \"Customer Success Agents\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        width: \"250px\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"1rem\",\n            }}\n          >\n            <span\n              style={{\n                backgroundColor: \"#F4F7FF\",\n                padding: \"0.2rem 1rem\",\n                borderRadius: \"8px\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              {rowIndex + 1}\n            </span>\n            <p\n              style={{\n                margin: \"auto 0\",\n                padding: \"auto 0\",\n                fontWeight: \"500\",\n              }}\n            >\n              {cell}\n            </p>\n          </div>\n        );\n      },\n    },\n    {\n      dataField: \"resolvedIssue\",\n      text: \"Resolved issues\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        textAlign: \"center\",\n      },\n      style: () => ({\n        textAlign: \"center\",\n        fontWeight: \"500\",\n      }),\n    },\n    {\n      dataField: \"resolution\",\n      text: \"progress\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        let color;\n        if (row.percentResolution >= 60) {\n          color = \"#1EB75B\";\n        } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n          color = \"#EDBF78\";\n        } else {\n          color = \"#F50D49\";\n        }\n        return (\n          <div\n            style={{\n              height: \"8px\",\n              backgroundColor: \"#F6F4F8\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <div\n              style={{\n                width: `${cell}%`,\n                height: \"100%\",\n                backgroundColor: color,\n                borderRadius: \"5px\",\n              }}\n            ></div>\n          </div>\n        );\n      },\n    },\n    {\n      dataField: \"avgResolutionTime\",\n      text: \"Avg. Resolution Time\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        textAlign: \"center\",\n      },\n      style: () => ({\n        textAlign: \"center\",\n        fontWeight: \"500\",\n      }),\n    },\n    {\n      dataField: \"resolution\",\n      text: \"resolution\",\n      headerStyle: {\n        color: \"#858EBD\",\n        textTransform: \"uppercase\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        width: \"250px\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        let color;\n        if (row.percentResolution >= 60) {\n          color = \"#1EB75B\";\n        } else if (row.percentResolution < 60 && row.percentResolution > 30) {\n          color = \"#EDBF78\";\n        } else {\n          color = \"#F50D49\";\n        }\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"1rem\",\n            }}\n          >\n            <p\n              style={{\n                color: \"#304762\",\n                fontWeight: \"600\",\n              }}\n            >\n              {\" \"}\n              {row.percentResolution}%{\" \"}\n            </p>\n            <p\n              style={{\n                color: color,\n                fontSize: \"12px\",\n              }}\n            >\n              ({row.percentResolved}){\" \"}\n              {row.percentResolution >= 60 ? \"\\u2191\" : \"\\u2193\"}\n            </p>\n            <p\n              style={{\n                color: \"#798C9C\",\n                fontSize: \"12px\",\n              }}\n            >\n              (Versus last 30 days)\n            </p>\n          </div>\n        );\n      },\n    },\n  ];\n  const rowStyle = {\n    border: \"none !important\",\n  };\n  const customTotal = (from, to, size) => (\n    <span\n      className=\"react-bootstrap-table-pagination-total\"\n      style={{\n        padding: \"1rem\",\n      }}\n    >\n      Showing {from} to {to} of {size} Results\n    </span>\n  );\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        marginTop: \"3rem\",\n      }}\n    >\n      <p className=\"table_title\">CS Resolution Performance</p>\n      {!data ? (\n        <Loader />\n      ) : (\n        <BootstrapTable\n          keyField=\"id\"\n          bordered={false}\n          data={data}\n          columns={columns}\n          rowStyle={rowStyle}\n          pagination={paginationFactory({\n            sizePerPage: 9,\n            hideSizePerPage: true,\n            showTotal: true,\n            paginationTotalRenderer: customTotal,\n          })}\n        />\n      )}\n    </div>\n  );\n};\nexport default PerformanceChart;\n"]},"metadata":{},"sourceType":"module"}