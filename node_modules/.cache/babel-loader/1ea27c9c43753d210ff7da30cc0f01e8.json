{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/dashboards/Reports/Customers/index.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport TabView from \"../TabView\";\nimport TransactionDetail from \"../TransactionDetail\";\nimport data from \"./data\";\nimport Request from \"../request\";\nimport Loader from \"../../../../components/Loader\";\n\nvar CustomerReport = function CustomerReport() {\n  var _Request = Request(),\n      getData = _Request.getData;\n\n  var text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeTab = _useState2[0],\n      setActiveTab = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showDetails = _useState4[0],\n      setShowDetails = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      index = _useState6[0],\n      setIndex = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      analysis = _useState8[0],\n      setAnalysis = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      transRef = _useState10[0],\n      setTransRef = _useState10[1];\n\n  var _useState11 = useState(30),\n      _useState12 = _slicedToArray(_useState11, 2),\n      days = _useState12[0],\n      setDays = _useState12[1];\n\n  var _useState13 = useState(text[2]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      filterText = _useState14[0],\n      setFilterText = _useState14[1];\n\n  var tabs = [\"All\", \"Peer-to-Peer\", \"Cashout\", \"Savings\", \"Bill Payment\", \"Wallet top-up\"];\n  var title = [\"All\", \"P2P\", \"Cashout\", \"Savings\", \"Bills\", \"Wallet top-up\"];\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, _response$data, allTransactionRecord, p2PTransactionRecord, cashOutTransactionRecord, savingsTransactionRecord, billPaymentTransactionRecord, walletTopUpTransactionRecord;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getData(1, days);\n\n            case 2:\n              response = _context.sent;\n\n              if (response.code === \"00\") {\n                console.log(response.data);\n                _response$data = response.data, allTransactionRecord = _response$data.allTransactionRecord, p2PTransactionRecord = _response$data.p2PTransactionRecord, cashOutTransactionRecord = _response$data.cashOutTransactionRecord, savingsTransactionRecord = _response$data.savingsTransactionRecord, billPaymentTransactionRecord = _response$data.billPaymentTransactionRecord, walletTopUpTransactionRecord = _response$data.walletTopUpTransactionRecord;\n                setAnalysis([allTransactionRecord, p2PTransactionRecord, cashOutTransactionRecord, savingsTransactionRecord, billPaymentTransactionRecord, walletTopUpTransactionRecord]);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var refresh = function refresh() {\n    setAnalysis(null);\n    fetchData();\n  };\n\n  var updateDays = function updateDays(day, index) {\n    if (filterText !== text[index]) {\n      setAnalysis(null);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, [days]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg_absolute\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, tabs.map(function (tab, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        setActiveTab(i);\n        setShowDetails(false);\n      },\n      className: \"\".concat(activeTab === i ? \"active_nav\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, tab));\n  }))), !analysis ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, !showDetails ? /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, tabs.map(function (tab, i) {\n    return /*#__PURE__*/React.createElement(TabPane, {\n      tabId: i,\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TabView, {\n      title: title[i],\n      clicked: setShowDetails,\n      index: i,\n      setIndex: setIndex,\n      number: \"Customer\",\n      analysis: analysis[i],\n      setTransRef: setTransRef,\n      updateDays: updateDays,\n      filterText: filterText,\n      refresh: refresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(TransactionDetail, {\n    setShowDetails: setShowDetails,\n    title: tabs[index],\n    data: data,\n    type: \"Customer\",\n    transRef: transRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default CustomerReport;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/dashboards/Reports/Customers/index.js"],"names":["React","useState","useEffect","TabContent","TabPane","TabView","TransactionDetail","data","Request","Loader","CustomerReport","getData","text","activeTab","setActiveTab","showDetails","setShowDetails","index","setIndex","analysis","setAnalysis","transRef","setTransRef","days","setDays","filterText","setFilterText","tabs","title","fetchData","response","code","console","log","allTransactionRecord","p2PTransactionRecord","cashOutTransactionRecord","savingsTransactionRecord","billPaymentTransactionRecord","walletTopUpTransactionRecord","refresh","updateDays","day","map","tab","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport TabView from \"../TabView\";\nimport TransactionDetail from \"../TransactionDetail\";\nimport data from \"./data\";\nimport Request from \"../request\";\nimport Loader from \"../../../../components/Loader\";\n\nconst CustomerReport = () => {\n  const { getData } = Request();\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n\n  const [activeTab, setActiveTab] = useState(0);\n  const [showDetails, setShowDetails] = useState(false);\n  const [index, setIndex] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [transRef, setTransRef] = useState(\"\");\n\n  const [days, setDays] = useState(30);\n  const [filterText, setFilterText] = useState(text[2]);\n\n  const tabs = [\n    \"All\",\n    \"Peer-to-Peer\",\n    \"Cashout\",\n    \"Savings\",\n    \"Bill Payment\",\n    \"Wallet top-up\",\n  ];\n  const title = [\"All\", \"P2P\", \"Cashout\", \"Savings\", \"Bills\", \"Wallet top-up\"];\n\n  const fetchData = async () => {\n    const response = await getData(1, days);\n    if (response.code === \"00\") {\n      console.log(response.data);\n      const {\n        allTransactionRecord,\n        p2PTransactionRecord,\n        cashOutTransactionRecord,\n        savingsTransactionRecord,\n        billPaymentTransactionRecord,\n        walletTopUpTransactionRecord,\n      } = response.data;\n      setAnalysis([\n        allTransactionRecord,\n        p2PTransactionRecord,\n        cashOutTransactionRecord,\n        savingsTransactionRecord,\n        billPaymentTransactionRecord,\n        walletTopUpTransactionRecord,\n      ]);\n    }\n  };\n\n  const refresh = () => {\n    setAnalysis(null);\n    fetchData();\n  };\n\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setAnalysis(null);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [days]);\n  return (\n    <>\n      <>\n        <div className=\"bg_absolute\">\n          <div className=\"nav\">\n            {tabs.map((tab, i) => (\n              <div\n                onClick={() => {\n                  setActiveTab(i);\n                  setShowDetails(false);\n                }}\n                className={`${activeTab === i ? \"active_nav\" : \"\"}`}\n              >\n                <p>{tab}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n        {!analysis ? (\n          <Loader />\n        ) : (\n          <>\n            {!showDetails ? (\n              <TabContent activeTab={activeTab}>\n                {tabs.map((tab, i) => (\n                  <TabPane tabId={i} key={i}>\n                    <TabView\n                      title={title[i]}\n                      clicked={setShowDetails}\n                      index={i}\n                      setIndex={setIndex}\n                      number=\"Customer\"\n                      analysis={analysis[i]}\n                      setTransRef={setTransRef}\n                      updateDays={updateDays}\n                      filterText={filterText}\n                      refresh={refresh}\n                    />\n                  </TabPane>\n                ))}\n              </TabContent>\n            ) : (\n              <TransactionDetail\n                setShowDetails={setShowDetails}\n                title={tabs[index]}\n                data={data}\n                type=\"Customer\"\n                transRef={transRef}\n              />\n            )}\n          </>\n        )}\n      </>\n    </>\n  );\n};\nexport default CustomerReport;\n"]},"metadata":{},"sourceType":"module"}