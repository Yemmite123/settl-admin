{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/contexts/WalletContext.js\";\nimport Text from \"antd/lib/typography/Text\";\nimport { setDay } from \"date-fns\";\nimport React, { useContext, useState, useEffect, createContext } from \"react\";\nimport walletRequest from \"../requests/wallet-savings\";\nvar APIContext = createContext();\nexport function APIContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      walletData = _useState2[0],\n      setWalletData = _useState2[1];\n\n  var _useState3 = useState(30),\n      _useState4 = _slicedToArray(_useState3, 2),\n      days = _useState4[0],\n      setDays = _useState4[1];\n\n  var text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n\n  var _useState5 = useState(text[2]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterText = _useState6[0],\n      setFilterText = _useState6[1];\n\n  var _walletRequest = walletRequest(),\n      getAllWallets = _walletRequest.getAllWallets;\n\n  var getWalletList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAllWallets(days);\n\n            case 2:\n              response = _context.sent;\n\n              if (response.code == \"00\") {\n                console.log(response.data);\n                setWalletData(response.data);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getWalletList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var refresh = function refresh() {\n    setWalletData([]);\n    getWalletList();\n  };\n\n  var updateDays = function updateDays(day, index) {\n    if (filterText !== text[index]) {\n      setWalletData([]);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n\n  useEffect(function () {\n    getWalletList();\n  }, [days]);\n  return (\n    /*#__PURE__*/\n    // Add required values to the value prop within an object\n    React.createElement(APIContext.Provider, {\n      value: {\n        walletData: walletData,\n        filterText: filterText,\n        updateDays: updateDays,\n        refresh: refresh\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, children)\n  );\n} // Create a hook to use the APIContext, this is a Kent C. Dodds pattern\n\nexport function useAPI() {\n  var context = useContext(APIContext);\n\n  if (context === undefined) {\n    throw new Error(\"Context must be used within a Provider\");\n  }\n\n  return context;\n}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/contexts/WalletContext.js"],"names":["Text","setDay","React","useContext","useState","useEffect","createContext","walletRequest","APIContext","APIContextProvider","children","walletData","setWalletData","days","setDays","text","filterText","setFilterText","getAllWallets","getWalletList","response","code","console","log","data","refresh","updateDays","day","index","useAPI","context","undefined","Error"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,0BAAjB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,IAAMC,UAAU,GAAGF,aAAa,EAAhC;AAEA,OAAO,SAASG,kBAAT,OAA0C;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC/C,kBAAoCN,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwBR,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,IAAI,GAAG,CAAC,UAAD,EAAa,aAAb,EAA4B,cAA5B,EAA4C,cAA5C,CAAb;;AACA,mBAAoCX,QAAQ,CAACW,IAAI,CAAC,CAAD,CAAL,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,uBAA0BV,aAAa,EAAvC;AAAA,MAAQW,aAAR,kBAAQA,aAAR;;AAEA,MAAMC,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGD,aAAa,CAACL,IAAD,CADhB;;AAAA;AACdO,cAAAA,QADc;;AAEpB,kBAAIA,QAAQ,CAACC,IAAT,IAAiB,IAArB,EAA2B;AACzBC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAZ,gBAAAA,aAAa,CAACQ,QAAQ,CAACI,IAAV,CAAb;AACD;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbL,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAOA,MAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBb,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAO,IAAAA,aAAa;AACd,GAHD;;AAIA,MAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACjC,QAAIZ,UAAU,KAAKD,IAAI,CAACa,KAAD,CAAvB,EAAgC;AAC9BhB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,MAAAA,OAAO,CAACa,GAAD,CAAP;AACAV,MAAAA,aAAa,CAACF,IAAI,CAACa,KAAD,CAAL,CAAb;AACD;AACF,GAND;;AAOAvB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACN,IAAD,CAFM,CAAT;AAIA;AAAA;AACE;AACA,wBAAC,UAAD,CAAY,QAAZ;AACE,MAAA,KAAK,EAAE;AAAEF,QAAAA,UAAU,EAAVA,UAAF;AAAcK,QAAAA,UAAU,EAAVA,UAAd;AAA0BU,QAAAA,UAAU,EAAVA,UAA1B;AAAsCD,QAAAA,OAAO,EAAPA;AAAtC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGf,QAHH;AAFF;AAQD,C,CAED;;AACA,OAAO,SAASmB,MAAT,GAAkB;AACvB,MAAMC,OAAO,GAAG3B,UAAU,CAACK,UAAD,CAA1B;;AACA,MAAIsB,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD","sourcesContent":["import Text from \"antd/lib/typography/Text\";\nimport { setDay } from \"date-fns\";\nimport React, { useContext, useState, useEffect, createContext } from \"react\";\nimport walletRequest from \"../requests/wallet-savings\";\n\nconst APIContext = createContext();\n\nexport function APIContextProvider({ children }) {\n  const [walletData, setWalletData] = useState([]);\n  const [days, setDays] = useState(30);\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n  const [filterText, setFilterText] = useState(text[2]);\n\n  const { getAllWallets } = walletRequest();\n\n  const getWalletList = async () => {\n    const response = await getAllWallets(days);\n    if (response.code == \"00\") {\n      console.log(response.data);\n      setWalletData(response.data);\n    }\n  };\n  const refresh = () => {\n    setWalletData([]);\n    getWalletList();\n  };\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setWalletData([]);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n  useEffect(() => {\n    getWalletList();\n  }, [days]);\n\n  return (\n    // Add required values to the value prop within an object\n    <APIContext.Provider\n      value={{ walletData, filterText, updateDays, refresh }}\n    >\n      {children}\n    </APIContext.Provider>\n  );\n}\n\n// Create a hook to use the APIContext, this is a Kent C. Dodds pattern\nexport function useAPI() {\n  const context = useContext(APIContext);\n  if (context === undefined) {\n    throw new Error(\"Context must be used within a Provider\");\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}