{"ast":null,"code":"import _defineProperty from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/messaging/CreateNewMessage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport InputBox from \"./../../components/InputBox\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from 'draft-js';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport SuccessDialog from \"../SuccessDialog\";\nimport FailureDialog from \"../FailureDialog\";\nimport pdf from \"../../assets/img/icons/pdf.svg\";\nimport messageRequest from \"../../requests/message\";\nvar messageOptions = [{\n  name: \"Email\",\n  id: 1\n}, {\n  name: \"SMS\",\n  id: 2\n}];\nvar recipientOptions = [{\n  name: \"All Customers\",\n  id: 1\n}, {\n  name: \"All Agents\",\n  id: 2\n}, {\n  name: \"Churn Customers\",\n  id: 3\n} // { name: \"Customized Users\" }\n];\n\nfunction CreateNewMessage(_ref) {\n  var _React$createElement;\n\n  var setShowNewMessage = _ref.setShowNewMessage,\n      userName = _ref.userName;\n\n  var _useState = useState(\"Settl Easter Campaign\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messageType = _useState4[0],\n      setMessageType = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedValues = _useState6[0],\n      setSelectedValues = _useState6[1];\n\n  var _useState7 = useState(EditorState.createEmpty()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editorState = _useState8[0],\n      setEditorState = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showSuccess = _useState10[0],\n      setShowSuccess = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showFailure = _useState12[0],\n      setShowFailure = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      customerTemplate = _useState16[0],\n      setCustomerTemplate = _useState16[1];\n\n  var _messageRequest = messageRequest(),\n      newMessage = _messageRequest.newMessage;\n\n  useEffect(function () {\n    window.scrollTo(0, 0);\n  }, []);\n\n  var onEditorStateChange = function onEditorStateChange(editorState) {\n    setEditorState(editorState);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              _context.next = 4;\n              return newMessage(messageType, userName.split(\" \")[0], title, editorState.getCurrentContent().getPlainText(), selectedValues);\n\n            case 4:\n              response = _context.sent;\n\n              if (!(response.code === \"00\")) {\n                _context.next = 14;\n                break;\n              }\n\n              console.log(response);\n              setTitle(\"Settl Easter Campaign\");\n              setMessageType(\"\");\n              setSelectedValues(\"\");\n              setEditorState(EditorState.createEmpty());\n              setLoading(false);\n              setShowSuccess(true);\n              return _context.abrupt(\"return\", true);\n\n            case 14:\n              setLoading(false);\n              setShowFailure(true);\n              return _context.abrupt(\"return\", false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/messages\",\n    className: \"back\",\n    onClick: function onClick() {\n      return setShowNewMessage(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"< Back to All Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"p-4\",\n    style: {\n      border: \"1px solid #ECF3FC\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"New Message\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"new-admin-form message-form mt-4\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Multiselect, {\n    className: \"forget_pass_select\",\n    options: messageOptions,\n    showCheckbox: false,\n    showArrow: true,\n    displayValue: \"name\",\n    placeholder: messageType === \"\" ? \"Message Type\" : messageType,\n    singleSelect: true,\n    onSelect: function onSelect(e) {\n      return setMessageType(e[0].id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Multiselect, {\n    className: \"forget_pass_select\",\n    options: recipientOptions,\n    showCheckbox: false,\n    showArrow: true,\n    displayValue: \"name\",\n    placeholder: selectedValues === \"\" ? \"Send to\" : selectedValues,\n    singleSelect: true,\n    onSelect: function onSelect(e) {\n      return setSelectedValues(e[0].id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  })), customerTemplate === \"\" && selectedValues === \"Customized Users\" && /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"customerTemplate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    id: \"customerTemplate\",\n    accept: \".png, .jpg, .pdf, .csv\",\n    value: customerTemplate,\n    onChange: function onChange(e) {\n      return setCustomerTemplate(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"Max file size should be 20MB.\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    download: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, \"Download this template format\"))), customerTemplate !== \"\" && /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"customerTemplate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, \"Customer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"document-wrapper align-items-center d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pdf,\n    alt: \"pdf icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, customerTemplate.replace(/^C:\\\\fakepath\\\\/, \"\"))))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"pb-3 relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputBox, {\n    type: \"text\",\n    name: \"title\",\n    id: \"title\",\n    value: title,\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    className: \"label-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, \"Title\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Editor, (_React$createElement = {\n    editorState: editorState,\n    toolbarClassName: \"toolbarClassName\",\n    wrapperClassName: \"wrapperClassName\",\n    editorClassName: \"editorClassName\"\n  }, _defineProperty(_React$createElement, \"toolbarClassName\", \"toolbar-class\"), _defineProperty(_React$createElement, \"toolbar\", {\n    options: ['inline', 'link', 'textAlign', 'list', 'image'],\n    inline: {\n      inDropdown: false,\n      options: ['bold', 'italic']\n    },\n    textAlign: {\n      inDropdown: false\n    },\n    link: {\n      inDropdown: false\n    }\n  }), _defineProperty(_React$createElement, \"onEditorStateChange\", onEditorStateChange), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 29\n  }), _React$createElement)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-1 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      opacity: \"0.7\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, \"Max 366 Char\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    className: \"btn-add py-2 w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \"Send Message\", loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-border spinner-border-sm spinner text-white ml-2\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 37\n    }\n  }, \"Loading...\")) : \"\")))), /*#__PURE__*/React.createElement(SuccessDialog, {\n    isOpen: showSuccess,\n    toggle: function toggle() {\n      return setShowSuccess(!showSuccess);\n    },\n    title: \"Success Message\",\n    details: \"Your message has been successfully sent to all Settl customers.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FailureDialog, {\n    isOpen: showFailure,\n    toggle: function toggle() {\n      return setShowFailure(!showFailure);\n    },\n    title: \"Failure Message\",\n    details: \"Oops! An error occured.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$user, _state$user$details, _state$user$details$a;\n\n  return {\n    userName: state === null || state === void 0 ? void 0 : (_state$user = state.user) === null || _state$user === void 0 ? void 0 : (_state$user$details = _state$user.details) === null || _state$user$details === void 0 ? void 0 : (_state$user$details$a = _state$user$details.admin) === null || _state$user$details$a === void 0 ? void 0 : _state$user$details$a.fullname\n  };\n};\n\nexport default connect(mapStateToProps)(CreateNewMessage);","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/messaging/CreateNewMessage.js"],"names":["React","useState","useEffect","connect","Link","Button","Card","Form","FormGroup","Label","Input","Multiselect","InputBox","Editor","EditorState","convertToRaw","SuccessDialog","FailureDialog","messageRequest","messageOptions","name","id","recipientOptions","CreateNewMessage","setShowNewMessage","userName","title","setTitle","messageType","setMessageType","selectedValues","setSelectedValues","createEmpty","editorState","setEditorState","showSuccess","setShowSuccess","showFailure","setShowFailure","loading","setLoading","customerTemplate","setCustomerTemplate","newMessage","window","scrollTo","onEditorStateChange","handleSubmit","e","preventDefault","split","getCurrentContent","getPlainText","response","code","console","log","prev","border","target","value","pdf","replace","options","inline","inDropdown","textAlign","link","opacity","mapStateToProps","state","user","details","admin","fullname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,SAA7B,EAAwCC,KAAxC,EAA+CC,KAA/C,QAA4D,YAA5D;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,OAAO,kDAAP;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,IAAMC,cAAc,GAAG,CACnB;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,EAAE,EAAE;AAArB,CADmB,EAEnB;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,EAAE,EAAE;AAAnB,CAFmB,CAAvB;AAKA,IAAMC,gBAAgB,GAAG,CACrB;AAAEF,EAAAA,IAAI,EAAE,eAAR;AAAyBC,EAAAA,EAAE,EAAE;AAA7B,CADqB,EAErB;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,EAAE,EAAE;AAA1B,CAFqB,EAGrB;AAAED,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,EAAE,EAAE;AAA/B,CAHqB,CAIrB;AAJqB,CAAzB;;AAOA,SAASE,gBAAT,OAAyD;AAAA;;AAAA,MAA9BC,iBAA8B,QAA9BA,iBAA8B;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AACrD,kBAA0BxB,QAAQ,CAAC,uBAAD,CAAlC;AAAA;AAAA,MAAOyB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsC1B,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAO2B,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA4C5B,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAO6B,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAAsC9B,QAAQ,CAACa,WAAW,CAACkB,WAAZ,EAAD,CAA9C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,mBAAsCjC,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOkC,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAAsCnC,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOoC,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA8BrC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOsC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,oBAAgDvC,QAAQ,CAAC,EAAD,CAAxD;AAAA;AAAA,MAAOwC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,wBAAuBxB,cAAc,EAArC;AAAA,MAAQyB,UAAR,mBAAQA,UAAR;;AAEAzC,EAAAA,SAAS,CAAC,YAAM;AACZ0C,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACb,WAAD,EAAiB;AACzCC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAFD;;AAIA,MAAMc,YAAY;AAAA,yEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACC,cAAF;AACAT,cAAAA,UAAU,CAAC,IAAD,CAAV;AAFiB;AAAA,qBAIMG,UAAU,CAC7Bf,WAD6B,EAE7BH,QAAQ,CAACyB,KAAT,CAAe,GAAf,EAAoB,CAApB,CAF6B,EAG7BxB,KAH6B,EAI7BO,WAAW,CAACkB,iBAAZ,GAAgCC,YAAhC,EAJ6B,EAK7BtB,cAL6B,CAJhB;;AAAA;AAIXuB,cAAAA,QAJW;;AAAA,oBAWdA,QAAQ,CAACC,IAAT,KAAkB,IAXJ;AAAA;AAAA;AAAA;;AAYbC,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA1B,cAAAA,QAAQ,CAAC,uBAAD,CAAR;AACAE,cAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,cAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAG,cAAAA,cAAc,CAACpB,WAAW,CAACkB,WAAZ,EAAD,CAAd;AACAQ,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,cAAAA,cAAc,CAAC,IAAD,CAAd;AAlBa,+CAmBN,IAnBM;;AAAA;AAsBjBI,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,cAAAA,cAAc,CAAC,IAAD,CAAd;AAvBiB,+CAwBV,KAxBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZS,YAAY;AAAA;AAAA;AAAA,KAAlB;;AA4BA,sBACI,uDACI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAC,WADP;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMvB,iBAAiB,CAAC,UAACiC,IAAD;AAAA,eAAU,CAACA,IAAX;AAAA,OAAD,CAAvB;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAQI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAC,kCADd;AAEI,IAAA,QAAQ,EAAEX,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,OAAO,EAAE5B,cAFb;AAGI,IAAA,YAAY,EAAE,KAHlB;AAII,IAAA,SAAS,EAAE,IAJf;AAKI,IAAA,YAAY,EAAC,MALjB;AAMI,IAAA,WAAW,EAAES,WAAW,KAAK,EAAhB,GAAqB,cAArB,GAAsCA,WANvD;AAOI,IAAA,YAAY,EAAE,IAPlB;AAQI,IAAA,QAAQ,EAAE,kBAACoB,CAAD;AAAA,aAAOnB,cAAc,CAACmB,CAAC,CAAC,CAAD,CAAD,CAAK3B,EAAN,CAArB;AAAA,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAgBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,OAAO,EAAEC,gBAFb;AAGI,IAAA,YAAY,EAAE,KAHlB;AAII,IAAA,SAAS,EAAE,IAJf;AAKI,IAAA,YAAY,EAAC,MALjB;AAMI,IAAA,WAAW,EAAEQ,cAAc,KAAK,EAAnB,GAAwB,SAAxB,GAAoCA,cANrD;AAOI,IAAA,YAAY,EAAE,IAPlB;AAQI,IAAA,QAAQ,EAAE,kBAACkB,CAAD;AAAA,aAAOjB,iBAAiB,CAACiB,CAAC,CAAC,CAAD,CAAD,CAAK3B,EAAN,CAAxB;AAAA,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBJ,EA4BMoB,gBAAgB,KAAK,EAArB,IAA2BX,cAAc,KAAK,kBAA/C,iBACG,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,kBAFP;AAGI,IAAA,MAAM,EAAC,wBAHX;AAII,IAAA,KAAK,EAAEW,gBAJX;AAKI,IAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,aAAON,mBAAmB,CAACM,CAAC,CAACW,MAAF,CAASC,KAAV,CAA1B;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAWI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,CAXJ,CA7BR,EA8CKnB,gBAAgB,KAAK,EAArB,iBACG,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEoB,GAAV;AAAe,IAAA,GAAG,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,gBAAgB,CAACqB,OAAjB,CAAyB,iBAAzB,EAA4C,EAA5C,CADL,CADJ,CAJJ,CAJJ,CA/CR,eA+DI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,EAAE,EAAC,OAHP;AAII,IAAA,KAAK,EAAEpC,KAJX;AAKI,IAAA,QAAQ,EAAE,kBAACsB,CAAD;AAAA,aAAOrB,QAAQ,CAACqB,CAAC,CAACW,MAAF,CAASC,KAAV,CAAf;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,CA/DJ,eAyEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,WAAW,EAAE3B,WADjB;AAEI,IAAA,gBAAgB,EAAC,kBAFrB;AAGI,IAAA,gBAAgB,EAAC,kBAHrB;AAII,IAAA,eAAe,EAAC;AAJpB,+DAKqB,eALrB,oDAMa;AACL8B,IAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,WAAnB,EAAgC,MAAhC,EAAwC,OAAxC,CADJ;AAELC,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJF,MAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT;AAFL,KAFH;AAMLG,IAAAA,SAAS,EAAE;AAAED,MAAAA,UAAU,EAAE;AAAd,KANN;AAOLE,IAAAA,IAAI,EAAE;AAAEF,MAAAA,UAAU,EAAE;AAAd;AAPD,GANb,gEAeyBnB,mBAfzB;AAAA;AAAA;AAAA;AAAA,4BADJ,eAkBI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAE;AAACsB,MAAAA,OAAO,EAAE;AAAV,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAlBJ,CAzEJ,eA+FI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAC,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOQ7B,OAAO,gBACP;AAAK,IAAA,SAAS,EAAC,0DAAf;AAA0E,IAAA,IAAI,EAAC,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADO,GAGI,EAVnB,CA/FJ,CAFJ,CADJ,CARJ,eA2HI,oBAAC,aAAD;AACI,IAAA,MAAM,EAAEJ,WADZ;AAEI,IAAA,MAAM,EAAE;AAAA,aAAMC,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KAFZ;AAGI,IAAA,KAAK,EAAC,iBAHV;AAII,IAAA,OAAO,EAAC,iEAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3HJ,eAkII,oBAAC,aAAD;AACI,IAAA,MAAM,EAAEE,WADZ;AAEI,IAAA,MAAM,EAAE;AAAA,aAAMC,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KAFZ;AAGI,IAAA,KAAK,EAAC,iBAHV;AAII,IAAA,OAAO,EAAC,yBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlIJ,CADJ;AA2IH;;AAGD,IAAMgC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA;;AAAA,SAAY;AAChC7C,IAAAA,QAAQ,EAAE6C,KAAF,aAAEA,KAAF,sCAAEA,KAAK,CAAEC,IAAT,uEAAE,YAAaC,OAAf,iFAAE,oBAAsBC,KAAxB,0DAAE,sBAA6BC;AADP,GAAZ;AAAA,CAAxB;;AAGA,eAAevE,OAAO,CAACkE,eAAD,CAAP,CAAyB9C,gBAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport InputBox from \"./../../components/InputBox\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from 'draft-js';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport SuccessDialog from \"../SuccessDialog\";\nimport FailureDialog from \"../FailureDialog\";\nimport pdf from \"../../assets/img/icons/pdf.svg\";\nimport messageRequest from \"../../requests/message\";\n\nconst messageOptions = [\n    { name: \"Email\", id: 1 },\n    { name: \"SMS\", id: 2 }\n] \n\nconst recipientOptions = [\n    { name: \"All Customers\", id: 1 },\n    { name: \"All Agents\", id: 2 }, \n    { name: \"Churn Customers\", id: 3 },\n    // { name: \"Customized Users\" }\n]\n\nfunction CreateNewMessage({setShowNewMessage, userName}) {\n    const [title, setTitle] = useState(\"Settl Easter Campaign\");\n    const [messageType, setMessageType] = useState(\"\");\n    const [selectedValues, setSelectedValues] = useState(\"\");\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [showFailure, setShowFailure] = useState(false);\n    const [loading, setLoading] = useState(false);\n    \n    const [customerTemplate, setCustomerTemplate] = useState(\"\");\n\n    const { newMessage } = messageRequest();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    const onEditorStateChange = (editorState) => {\n        setEditorState(editorState);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n    \n        const response = await newMessage(\n            messageType,\n            userName.split(\" \")[0],\n            title,\n            editorState.getCurrentContent().getPlainText(),\n            selectedValues\n        );\n        if(response.code === \"00\") {\n            console.log(response);\n            setTitle(\"Settl Easter Campaign\");\n            setMessageType(\"\");\n            setSelectedValues(\"\");\n            setEditorState(EditorState.createEmpty());\n            setLoading(false);\n            setShowSuccess(true);\n            return true;\n        } \n\n        setLoading(false);\n        setShowFailure(true);\n        return false;\n    }   \n\n\n    return(\n        <>\n            <Link \n                to=\"/messages\"\n                className=\"back\"\n                onClick={() => setShowNewMessage((prev) => !prev)}\n            >\n                &lt; Back to All Messages\n            </Link>\n            <div className=\"w-50 mx-auto\">\n                <Card className=\"p-4\" style={{border: \"1px solid #ECF3FC\"}}>\n                    <h6 className=\"text-center\">New Message</h6>\n                    <Form \n                        className=\"new-admin-form message-form mt-4\"\n                        onSubmit={handleSubmit}\n                    >\n                        <FormGroup>\n                            <Multiselect\n                                className=\"forget_pass_select\"\n                                options={messageOptions}\n                                showCheckbox={false}\n                                showArrow={true}\n                                displayValue=\"name\"\n                                placeholder={messageType === \"\" ? \"Message Type\" : messageType}\n                                singleSelect={true}\n                                onSelect={(e) => setMessageType(e[0].id)}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Multiselect\n                                className=\"forget_pass_select\"\n                                options={recipientOptions}\n                                showCheckbox={false}\n                                showArrow={true}\n                                displayValue=\"name\"\n                                placeholder={selectedValues === \"\" ? \"Send to\" : selectedValues}\n                                singleSelect={true}\n                                onSelect={(e) => setSelectedValues(e[0].id)}\n                            />\n                        </FormGroup>\n                        {(customerTemplate === \"\" && selectedValues === \"Customized Users\") && (\n                            <FormGroup className=\"upload\">\n                                <div>\n                                    <Label htmlFor=\"customerTemplate\">Customer</Label>\n                                    <Input \n                                        type=\"file\" \n                                        id=\"customerTemplate\" \n                                        accept=\".png, .jpg, .pdf, .csv\" \n                                        value={customerTemplate}\n                                        onChange={(e) => setCustomerTemplate(e.target.value)}\n                                    />\n                                </div>\n                                <span className=\"d-block pt-2\">\n                                    Max file size should be 20MB. \n                                    <a href=\"#\" download>Download this template format</a>\n                                </span>\n                            </FormGroup>\n                        )}\n                        {customerTemplate !== \"\" && (\n                            <FormGroup className=\"upload\">\n                                <div>\n                                    <Label htmlFor=\"customerTemplate\">Customer</Label>\n                                </div>\n                                <div className=\"document-wrapper align-items-center d-flex\">\n                                    <div className=\"mr-3\">\n                                        <img src={pdf} alt=\"pdf icon\" />\n                                    </div>\n                                    <div>\n                                        <p className=\"mb-0\">\n                                            {customerTemplate.replace(/^C:\\\\fakepath\\\\/, \"\")}\n                                        </p>\n                                    </div>\n                                </div>\n                            </FormGroup>\n                        )}\n                        <FormGroup className=\"pb-3 relative\">\n                            <InputBox\n                                type=\"text\"\n                                name=\"title\"\n                                id=\"title\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                            />\n                            <Label for=\"title\" className=\"label-title\">Title</Label>\n                        </FormGroup>\n                        <FormGroup>\n                            <Editor\n                                editorState={editorState}\n                                toolbarClassName=\"toolbarClassName\"\n                                wrapperClassName=\"wrapperClassName\"\n                                editorClassName=\"editorClassName\"\n                                toolbarClassName=\"toolbar-class\"\n                                toolbar={{\n                                    options: ['inline', 'link', 'textAlign', 'list', 'image'],\n                                    inline: { \n                                        inDropdown: false,\n                                        options: ['bold', 'italic']\n                                    },\n                                    textAlign: { inDropdown: false },\n                                    link: { inDropdown: false }\n                                }}\n                                onEditorStateChange={onEditorStateChange}\n                            />\n                            <div className=\"mt-1 text-right\">\n                                <p style={{opacity: \"0.7\"}}>Max 366 Char</p>\n                            </div>\n                        </FormGroup>\n                        <Button\n                            type=\"submit\" \n                            color=\"primary\" \n                            className=\"btn-add py-2 w-100\"\n                        >\n                            Send Message\n                            {\n                                loading ? (\n                                <div className=\"spinner-border spinner-border-sm spinner text-white ml-2\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>) : (\"\")\n                            }\n                        </Button>\n                    </Form>\n                </Card>\n            </div>\n\n            <SuccessDialog \n                isOpen={showSuccess}\n                toggle={() => setShowSuccess(!showSuccess)}\n                title=\"Success Message\"\n                details=\"Your message has been successfully sent to all Settl customers.\"\n            />\n\n            <FailureDialog \n                isOpen={showFailure}\n                toggle={() => setShowFailure(!showFailure)}\n                title=\"Failure Message\"\n                details=\"Oops! An error occured.\"\n            />\n        </>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    userName: state?.user?.details?.admin?.fullname,\n});\nexport default connect(mapStateToProps)(CreateNewMessage);"]},"metadata":{},"sourceType":"module"}