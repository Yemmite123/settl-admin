{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{ReactComponent as Close}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../BgImages/close.svg\";import{Button,Modal,ModalBody,ModalHeader,Form,FormGroup,Label}from\"reactstrap\";import InputBox from\"../../components/InputBox\";import Loading from\"../../components/Loading\";import Request from\"../../requests/customer\";export default function UpdateAccountInformationDialog(props){var _props$data,_props$data2,_props$data3,_props$data4;var _Request=Request(),updateAccountInfo=_Request.updateAccountInfo;var _useState=useState((_props$data=props.data)===null||_props$data===void 0?void 0:_props$data.firstName),_useState2=_slicedToArray(_useState,2),firstName=_useState2[0],setFirstName=_useState2[1];var _useState3=useState((_props$data2=props.data)===null||_props$data2===void 0?void 0:_props$data2.lastName),_useState4=_slicedToArray(_useState3,2),lastName=_useState4[0],setLastName=_useState4[1];var _useState5=useState((_props$data3=props.data)===null||_props$data3===void 0?void 0:_props$data3.email),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmailAddress=_useState6[1];var _useState7=useState((_props$data4=props.data)===null||_props$data4===void 0?void 0:_props$data4.phoneno),_useState8=_slicedToArray(_useState7,2),phoneNumber=_useState8[0],setPhoneNumber=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var updateInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return updateAccountInfo({firstName:firstName,lastName:lastName,email:email,phoneNumber:phoneNumber});case 3:response=_context.sent;if(response.code===\"00\"){props.toggle();props.setShowDetails(false);props.setTableData(null);}setLoading(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function updateInfo(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{isOpen:props.isOpen,toggle:props.toggle,className:\"admin-modal suspended-modal\"},/*#__PURE__*/React.createElement(ModalHeader,null,\"Update Account Information\",/*#__PURE__*/React.createElement(Close,{className:\"close-modal\",onClick:props.toggle})),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"firstName\",id:\"firstName\",value:firstName,onChange:function onChange(e){return setFirstName(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"firstName\"},\"First Name\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"lastName\",id:\"lastName\",value:lastName,onChange:function onChange(e){return setLastName(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"lastName\"},\"Last Name\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"emailAddress\",id:\"emailAddress\",value:email,onChange:function onChange(e){return setEmailAddress(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"emailAddress\"},\"Email address\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"phoneNumber\",id:\"phoneNumber\",value:phoneNumber,onChange:function onChange(e){return setPhoneNumber(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"adminFullName\"},\"Phone number\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(Button,{color:\"info\",className:\"btn-cancel\",onClick:props.toggle},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn-add\",onClick:updateInfo,disabled:true},loading?/*#__PURE__*/React.createElement(Loading,null):\"Update\")))));}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/customers/UpdateAccountInformationDialog.js"],"names":["React","useState","Button","Modal","ModalBody","ModalHeader","Form","FormGroup","Label","InputBox","Loading","Request","UpdateAccountInformationDialog","props","updateAccountInfo","data","firstName","setFirstName","lastName","setLastName","email","setEmailAddress","phoneno","phoneNumber","setPhoneNumber","loading","setLoading","updateInfo","response","code","toggle","setShowDetails","setTableData","isOpen","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ReactComponent as Close } from \"../../BgImages/close.svg\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n} from \"reactstrap\";\nimport InputBox from \"../../components/InputBox\";\nimport Loading from \"../../components/Loading\";\nimport Request from \"../../requests/customer\";\n\nexport default function UpdateAccountInformationDialog(props) {\n  const { updateAccountInfo } = Request();\n  const [firstName, setFirstName] = useState(props.data?.firstName);\n  const [lastName, setLastName] = useState(props.data?.lastName);\n  const [email, setEmailAddress] = useState(props.data?.email);\n  const [phoneNumber, setPhoneNumber] = useState(props.data?.phoneno);\n  const [loading, setLoading] = useState(false);\n\n  const updateInfo = async () => {\n    setLoading(true);\n    const response = await updateAccountInfo({\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n    });\n    if (response.code === \"00\") {\n      props.toggle();\n      props.setShowDetails(false);\n      props.setTableData(null);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={props.isOpen}\n        toggle={props.toggle}\n        className=\"admin-modal suspended-modal\"\n      >\n        <ModalHeader>\n          Update Account Information\n          <Close className=\"close-modal\" onClick={props.toggle} />\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <InputBox\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n              <Label for=\"firstName\">First Name</Label>\n            </FormGroup>\n            <FormGroup>\n              <InputBox\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n              <Label for=\"lastName\">Last Name</Label>\n            </FormGroup>\n            <FormGroup>\n              <InputBox\n                type=\"text\"\n                name=\"emailAddress\"\n                id=\"emailAddress\"\n                value={email}\n                onChange={(e) => setEmailAddress(e.target.value)}\n              />\n              <Label for=\"emailAddress\">Email address</Label>\n            </FormGroup>\n            <FormGroup>\n              <InputBox\n                type=\"text\"\n                name=\"phoneNumber\"\n                id=\"phoneNumber\"\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n              />\n              <Label for=\"adminFullName\">Phone number</Label>\n            </FormGroup>\n          </Form>\n          <br />\n          <br />\n          <br />\n          <br />\n          <hr />\n          <div className=\"d-flex justify-content-between\">\n            <Button color=\"info\" className=\"btn-cancel\" onClick={props.toggle}>\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              className=\"btn-add\"\n              onClick={updateInfo}\n              disabled\n            >\n              {loading ? <Loading /> : \"Update\"}\n            </Button>\n          </div>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}