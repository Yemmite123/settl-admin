{"ast":null,"code":"import React from\"react\";import{Col,Container,Row}from\"reactstrap\";import Code from\"../../components/Code\";var Intro=function Intro(){return/*#__PURE__*/React.createElement(\"div\",{id:\"introduction\",className:\"mb-5\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Introduction\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},/*#__PURE__*/React.createElement(\"code\",null,\"npm run build\"),\" creates a build directory with a production build of your app. Set up your favorite HTTP server so that a visitor to your site is served index.html, and requests to static paths like\",\" \",/*#__PURE__*/React.createElement(\"code\",null,\"/static/js/main.<hash>.js\"),\" are served with the contents of the \",/*#__PURE__*/React.createElement(\"code\",null,\"/static/js/main.<hash>.js\"),\" file.\"));};var StaticServer=function StaticServer(){return/*#__PURE__*/React.createElement(\"div\",{id:\"static-server\",className:\"mb-5\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Static Server\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"For environments using\",\" \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://nodejs.org/en/\",target:\"_blank\",rel:\"noreferrer noopener\"},\"Node\"),\", the easiest way to handle this would be to install\",\" \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/zeit/serve\",target:\"_blank\",rel:\"noreferrer noopener\"},\"serve\"),\" \",\"and let it handle the rest:\"),/*#__PURE__*/React.createElement(Code,null,\"npm install -g serve\\nserve -s build\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"The last command shown above will serve your static site on the port 5000. Like many of\",/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/vercel/serve\",target:\"_blank\",rel:\"noreferrer noopener\"},\"serve\"),\"\\u2019s internal settings, the port can be adjusted using the \",/*#__PURE__*/React.createElement(\"code\",null,\"-l\"),\" or \",/*#__PURE__*/React.createElement(\"code\",null,\"--listen\"),\" flags:\"),/*#__PURE__*/React.createElement(Code,null,\"serve -s build -l 4000\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"Run this command to get a full list of the options available:\"),/*#__PURE__*/React.createElement(Code,null,\"serve -h\"));};var OtherSolutions=function OtherSolutions(){return/*#__PURE__*/React.createElement(\"div\",{id:\"other-solutions\",className:\"mb-5\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Other Solutions\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"You don\\u2019t necessarily need a static server in order to run a Create React App project in production. It also works well when integrated into an existing server side app.\"));};var Express=function Express(){return/*#__PURE__*/React.createElement(\"div\",{id:\"express\",className:\"mb-5\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Express\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"Express is a fast, unopinionated, minimalist web framework for Node.js. Here\\u2019s a programmatic example:\"),/*#__PURE__*/React.createElement(Code,null,\"const express = require('express');\\nconst path = require('path');\\nconst app = express();\\napp.use(express.static(path.join(__dirname, 'build')));\\napp.get('/', function(req, res) {\\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\\n});\\napp.listen(9000);\"));};var Netlify=function Netlify(){return/*#__PURE__*/React.createElement(\"div\",{id:\"netlify\",className:\"mb-5\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Netlify\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"Deploy modern static websites with Netlify. Get CDN, Continuous deployment, 1-click HTTPS, and all the services you need.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"To do a manual deploy to Netlify\\u2019s CDN:\"),/*#__PURE__*/React.createElement(Code,null,\"npm install netlify-cli -g\\nnetlify deploy\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"Choose \",/*#__PURE__*/React.createElement(\"code\",null,\"build\"),\" as the path to deploy.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-lg\"},\"To setup continuous delivery:\",/*#__PURE__*/React.createElement(\"br\",null),\"With this setup Netlify will build and deploy when you push to git or open a pull request:\"),/*#__PURE__*/React.createElement(\"ol\",{className:\"text-lg\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"https://app.netlify.com/signup\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Start a new netlify project\")),/*#__PURE__*/React.createElement(\"li\",null,\"Pick your Git hosting service and select your repository\"),/*#__PURE__*/React.createElement(\"li\",null,\"Click \",/*#__PURE__*/React.createElement(\"code\",null,\"Build your site\"))));};var Deployment=function Deployment(){return/*#__PURE__*/React.createElement(Container,{fluid:true,className:\"p-0\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:10,xl:8,className:\"mx-auto\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"h3\"},\"Deployment\"),/*#__PURE__*/React.createElement(\"hr\",{className:\"my-4\"}),/*#__PURE__*/React.createElement(Intro,null),/*#__PURE__*/React.createElement(StaticServer,null),/*#__PURE__*/React.createElement(OtherSolutions,null),/*#__PURE__*/React.createElement(Express,null),/*#__PURE__*/React.createElement(Netlify,null))));};export default Deployment;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/docs/Deployment.js"],"names":["React","Col","Container","Row","Code","Intro","StaticServer","OtherSolutions","Express","Netlify","Deployment"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n  <div id=\"introduction\" className=\"mb-5\">\r\n    <h3>Introduction</h3>\r\n    <p className=\"text-lg\">\r\n      <code>npm run build</code> creates a build directory with a production\r\n      build of your app. Set up your favorite HTTP server so that a visitor\r\n      to your site is served index.html, and requests to static paths like{\" \"}\r\n      <code>{`/static/js/main.<hash>.js`}</code> are served with the contents\r\n      of the <code>{`/static/js/main.<hash>.js`}</code> file.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst StaticServer = () => (\r\n  <div id=\"static-server\" className=\"mb-5\">\r\n    <h3>Static Server</h3>\r\n    <p className=\"text-lg\">\r\n      For environments using{\" \"}\r\n      <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noreferrer noopener\">Node</a>,\r\n      the easiest way to handle this would be to install{\" \"}\r\n      <a href=\"https://github.com/zeit/serve\" target=\"_blank\" rel=\"noreferrer noopener\">serve</a>{\" \"}\r\n      and let it handle the rest:\r\n    </p>\r\n    <Code>{`npm install -g serve\r\nserve -s build`}</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      The last command shown above will serve your static site on the port 5000.\r\n      Like many of\r\n      <a href=\"https://github.com/vercel/serve\" target=\"_blank\" rel=\"noreferrer noopener\">serve</a>â€™s \r\n      internal settings, the port can be adjusted using the <code>-l</code> or <code>--listen</code> flags:\r\n    </p>\r\n    <Code>serve -s build -l 4000</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      Run this command to get a full list of the options available:\r\n    </p>\r\n    <Code>serve -h</Code>\r\n  </div>\r\n);\r\n\r\nconst OtherSolutions = () => (\r\n  <div id=\"other-solutions\" className=\"mb-5\">\r\n    <h3>Other Solutions</h3>\r\n    <p className=\"text-lg\">\r\n      You donâ€™t necessarily need a static server in order to run a \r\n      Create React App project in production. It also works well when \r\n      integrated into an existing server side app.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst Express = () => (\r\n  <div id=\"express\" className=\"mb-5\">\r\n    <h4>Express</h4>\r\n    <p className=\"text-lg\">\r\n      Express is a fast, unopinionated, minimalist web framework for Node.js.\r\n      Hereâ€™s a programmatic example:\r\n    </p>\r\n    <Code>{`const express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\napp.use(express.static(path.join(__dirname, 'build')));\r\napp.get('/', function(req, res) {\r\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\r\n});\r\napp.listen(9000);`}</Code>\r\n  </div>\r\n);\r\n\r\nconst Netlify = () => (\r\n  <div id=\"netlify\" className=\"mb-5\">\r\n    <h4>Netlify</h4>\r\n    <p className=\"text-lg\">\r\n      Deploy modern static websites with Netlify. Get CDN, Continuous deployment, \r\n      1-click HTTPS, and all the services you need.\r\n    </p>\r\n    <p className=\"text-lg\">\r\n      To do a manual deploy to Netlifyâ€™s CDN:\r\n    </p>\r\n    <Code>{`npm install netlify-cli -g\r\nnetlify deploy`}</Code>\r\n\r\n    <p className=\"text-lg\">Choose <code>build</code> as the path to deploy.</p>\r\n    <p className=\"text-lg\">\r\n      To setup continuous delivery:<br />\r\n      With this setup Netlify will build and deploy when you push to git or open a pull request:\r\n    </p>\r\n    <ol className=\"text-lg\">\r\n      <li>\r\n        <a\r\n        href=\"https://app.netlify.com/signup\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\">\r\n          Start a new netlify project\r\n        </a>\r\n      </li>\r\n      <li>Pick your Git hosting service and select your repository</li>\r\n      <li>Click <code>Build your site</code></li>\r\n    </ol>\r\n  </div>\r\n);\r\n\r\nconst Deployment = () => (\r\n  <Container fluid className=\"p-0\">\r\n    <Row>\r\n      <Col lg={10} xl={8} className=\"mx-auto\">\r\n        <h1 className=\"h3\">Deployment</h1>\r\n        <hr className=\"my-4\" />\r\n        <Intro />\r\n        <StaticServer />\r\n        <OtherSolutions />\r\n        <Express />\r\n        <Netlify />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default Deployment;\r\n"]},"metadata":{},"sourceType":"module"}