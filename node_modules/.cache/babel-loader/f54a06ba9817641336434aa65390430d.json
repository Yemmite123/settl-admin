{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{Button,Form,FormGroup,Label,Modal,ModalBody,ModalHeader}from\"reactstrap\";import{Plus}from\"react-feather\";import InputBox from\"../../components/InputBox\";import{Multiselect}from\"multiselect-react-dropdown\";import adminRequest from\"../../requests/admin\";import SuccessDialog from\"../SuccessDialog\";import FailureDialog from\"../FailureDialog\";import{useAPI}from\"../../contexts/AdminContext\";var options=[{id:1,name:\"Admin\"},{id:2,name:\"Super Admin\"},{id:3,name:\"Support\"}];var style={border:\"1px solid #4F1699\",background:\"#4F1699\",fontSize:\"15px\",lineHeight:\"18px\",letterSpacing:\"0.3px\",width:\"100%\",padding:\"15px\"};function AddNewAdmin(_ref){var userName=_ref.userName;var _useAPI=useAPI(),changeUpdateStatus=_useAPI.changeUpdateStatus;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),addAdminModal=_useState2[0],setAddAdminModal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),completeModal=_useState4[0],setCompleteModal=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),employeeName=_useState6[0],setEmployeeName=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),employeeEmailAddress=_useState8[0],setEmployeeEmailAddress=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),employeePhoneNumber=_useState10[0],setEmployeePhoneNumber=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),employeeDepartment=_useState12[0],setEmployeeDepartment=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),adminRole=_useState14[0],setAdminRole=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),loading=_useState16[0],setLoading=_useState16[1];var _useState17=useState({message:\"\",data:\"\"}),_useState18=_slicedToArray(_useState17,2),error=_useState18[0],setError=_useState18[1];var _adminRequest=adminRequest(),addAdmin=_adminRequest.addAdmin;var toggleModal=function toggleModal(){return setAddAdminModal(!addAdminModal);};var toggleCompleteModal=function toggleCompleteModal(){return setCompleteModal(!completeModal);};var checkInputValue=function checkInputValue(){if(employeeEmailAddress===\"\"||employeeDepartment===\"\"||employeePhoneNumber===\"\"||employeeName===\"\"||adminRole===\"\")return true;return false;};var reset=function reset(){setEmployeeEmailAddress(\"\");setEmployeeDepartment(\"\");setEmployeePhoneNumber(\"\");setEmployeeName(\"\");setAdminRole(\"\");};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();setLoading(true);_context.next=4;return addAdmin(employeeName,employeeEmailAddress,employeePhoneNumber,adminRole,employeeDepartment,userName.split(\" \")[0]);case 4:response=_context.sent;if(!(response.code===\"00\")){_context.next=13;break;}setLoading(false);setError(response);setAddAdminModal(false);setCompleteModal(true);changeUpdateStatus();reset();return _context.abrupt(\"return\",true);case 13:setError(response);setCompleteModal(true);setLoading(false);return _context.abrupt(\"return\",false);case 17:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"text-right\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn-add\",onClick:toggleModal},/*#__PURE__*/React.createElement(Plus,null),\"New Admin\")),/*#__PURE__*/React.createElement(Modal,{isOpen:addAdminModal,toggle:toggleModal,className:\"admin-modal\"},/*#__PURE__*/React.createElement(ModalHeader,{toggle:toggleModal},\"Create New Admin\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{method:\"post\",onSubmit:handleSubmit,className:\"new-admin-form\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"employeeName\",id:\"employeeName\",value:employeeName,onChange:function onChange(e){return setEmployeeName(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"employeeName\"},\"Employee Name\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"email\",name:\"employeeEmailAddress\",id:\"employeeEmailAddress\",value:employeeEmailAddress,onChange:function onChange(e){return setEmployeeEmailAddress(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"employeeEmailAddress\"},\"Email Address\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"employeePhoneNumber\",id:\"employeePhoneNumber\",value:employeePhoneNumber,onChange:function onChange(e){return setEmployeePhoneNumber(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"employeePhoneNumber\"},\"Phone number\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"employeeDepartment\",id:\"employeeDepartment\",value:employeeDepartment,onChange:function onChange(e){return setEmployeeDepartment(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"employeeDepartment\"},\"Department\")),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Multiselect,{className:\"forget_pass_select\",options:options,showCheckbox:true,showArrow:true// style={ { border: \"3px solid red\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } }\n,placeholder:adminRole===\"\"?\"Admin Role\":adminRole,displayValue:\"name\",onSelect:function onSelect(e){return setAdminRole(e[0].id);},singleSelect:true})),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn-add\",type:\"submit\",disabled:checkInputValue(),style:style},\"Create Admin\",loading?/*#__PURE__*/React.createElement(\"div\",{className:\"spinner-border spinner-border-sm spinner text-white ml-2\",role:\"status\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\")):\"\")))),/*#__PURE__*/React.createElement(SuccessDialog,{isOpen:completeModal,toggle:toggleCompleteModal,title:error.message,details:error.data}),/*#__PURE__*/React.createElement(FailureDialog,{isOpen:completeModal,toggle:toggleCompleteModal,title:error.message,details:error.data}));}var mapStateToProps=function mapStateToProps(state){var _state$user,_state$user$details,_state$user$details$a;return{userName:state===null||state===void 0?void 0:(_state$user=state.user)===null||_state$user===void 0?void 0:(_state$user$details=_state$user.details)===null||_state$user$details===void 0?void 0:(_state$user$details$a=_state$user$details.admin)===null||_state$user$details$a===void 0?void 0:_state$user$details$a.fullname};};export default connect(mapStateToProps)(AddNewAdmin);","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/admin-management/AddAdminModal.js"],"names":["React","useState","connect","Button","Form","FormGroup","Label","Modal","ModalBody","ModalHeader","Plus","InputBox","Multiselect","adminRequest","SuccessDialog","FailureDialog","useAPI","options","id","name","style","border","background","fontSize","lineHeight","letterSpacing","width","padding","AddNewAdmin","userName","changeUpdateStatus","addAdminModal","setAddAdminModal","completeModal","setCompleteModal","employeeName","setEmployeeName","employeeEmailAddress","setEmployeeEmailAddress","employeePhoneNumber","setEmployeePhoneNumber","employeeDepartment","setEmployeeDepartment","adminRole","setAdminRole","loading","setLoading","message","data","error","setError","addAdmin","toggleModal","toggleCompleteModal","checkInputValue","reset","handleSubmit","e","preventDefault","split","response","code","target","value","mapStateToProps","state","user","details","admin","fullname"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Modal,\n  ModalBody,\n  ModalHeader,\n} from \"reactstrap\";\nimport { Plus } from \"react-feather\";\nimport InputBox from \"../../components/InputBox\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport adminRequest from \"../../requests/admin\";\nimport SuccessDialog from \"../SuccessDialog\";\nimport FailureDialog from \"../FailureDialog\";\nimport { useAPI } from \"../../contexts/AdminContext\";\n\nconst options = [\n  {\n    id: 1,\n    name: \"Admin\"\n  },\n  {\n    id: 2,\n    name: \"Super Admin\"\n  },\n  {\n    id: 3,\n    name: \"Support\"\n  },\n];\n\nconst style = {\n  border: \"1px solid #4F1699\",\n  background: \"#4F1699\",\n  fontSize: \"15px\",\n  lineHeight: \"18px\",\n  letterSpacing: \"0.3px\",\n  width: \"100%\",\n  padding: \"15px\",\n};\n\nfunction AddNewAdmin({ userName }) {\n  const { changeUpdateStatus } = useAPI();\n  const [addAdminModal, setAddAdminModal] = useState(false);\n  const [completeModal, setCompleteModal] = useState(false);\n  const [employeeName, setEmployeeName] = useState(\"\");\n  const [employeeEmailAddress, setEmployeeEmailAddress] = useState(\"\");\n  const [employeePhoneNumber, setEmployeePhoneNumber] = useState(\"\");\n  const [employeeDepartment, setEmployeeDepartment] = useState(\"\");\n  const [adminRole, setAdminRole] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const [error, setError] = useState({\n    message: \"\",\n    data: \"\",\n  });\n\n  const { addAdmin } = adminRequest();\n\n  const toggleModal = () => setAddAdminModal(!addAdminModal);\n  const toggleCompleteModal = () => setCompleteModal(!completeModal);\n\n  const checkInputValue = () => {\n    if (\n      employeeEmailAddress === \"\" ||\n      employeeDepartment === \"\" ||\n      employeePhoneNumber === \"\" ||\n      employeeName === \"\" ||\n      adminRole === \"\"\n    )\n      return true;\n    return false;\n  };\n\n  const reset = () => {\n    setEmployeeEmailAddress(\"\");\n    setEmployeeDepartment(\"\");\n    setEmployeePhoneNumber(\"\");\n    setEmployeeName(\"\");\n    setAdminRole(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const response = await addAdmin(\n      employeeName,\n      employeeEmailAddress,\n      employeePhoneNumber,\n      adminRole,\n      employeeDepartment,\n      userName.split(\" \")[0]\n    );\n    if (response.code === \"00\") {\n      setLoading(false);\n      setError(response);\n      setAddAdminModal(false);\n      setCompleteModal(true);\n      changeUpdateStatus();\n      reset();\n      return true;\n    }\n\n    setError(response);\n    setCompleteModal(true);\n    setLoading(false);\n    return false;\n  };\n\n  return (\n    <>\n      <div className=\"text-right\">\n        <Button color=\"primary\" className=\"btn-add\" onClick={toggleModal}>\n          <Plus />\n          New Admin\n        </Button>\n      </div>\n      <Modal\n        isOpen={addAdminModal}\n        toggle={toggleModal}\n        className=\"admin-modal\"\n      >\n        <ModalHeader toggle={toggleModal}>Create New Admin</ModalHeader>\n        <ModalBody>\n          <Form\n            method=\"post\"\n            onSubmit={handleSubmit}\n            className=\"new-admin-form\"\n          >\n            <FormGroup>\n              <InputBox\n                type=\"text\"\n                name=\"employeeName\"\n                id=\"employeeName\"\n                value={employeeName}\n                onChange={(e) => setEmployeeName(e.target.value)}\n              />\n              <Label for=\"employeeName\">Employee Name</Label>\n            </FormGroup>\n            <FormGroup>\n              <InputBox\n                type=\"email\"\n                name=\"employeeEmailAddress\"\n                id=\"employeeEmailAddress\"\n                value={employeeEmailAddress}\n                onChange={(e) => setEmployeeEmailAddress(e.target.value)}\n              />\n              <Label for=\"employeeEmailAddress\">Email Address</Label>\n            </FormGroup>\n            <FormGroup>\n              <InputBox\n                type=\"text\"\n                name=\"employeePhoneNumber\"\n                id=\"employeePhoneNumber\"\n                value={employeePhoneNumber}\n                onChange={(e) => setEmployeePhoneNumber(e.target.value)}\n              />\n              <Label for=\"employeePhoneNumber\">Phone number</Label>\n            </FormGroup>\n            <FormGroup>\n              <InputBox\n                type=\"text\"\n                name=\"employeeDepartment\"\n                id=\"employeeDepartment\"\n                value={employeeDepartment}\n                onChange={(e) => setEmployeeDepartment(e.target.value)}\n              />\n              <Label for=\"employeeDepartment\">Department</Label>\n            </FormGroup>\n            <FormGroup>\n              <Multiselect\n                className=\"forget_pass_select\"\n                options={options}\n                showCheckbox={true}\n                showArrow={true}\n                // style={ { border: \"3px solid red\", \"border-bottom\": \"1px solid blue\", \"border-radius\": \"0px\" } }\n                placeholder={adminRole === \"\" ? \"Admin Role\" : adminRole}\n                displayValue=\"name\"\n                onSelect={(e) => setAdminRole(e[0].id)}\n                singleSelect={true}\n              />\n            </FormGroup>\n            <hr />\n            <Button\n              color=\"primary\"\n              className=\"btn-add\"\n              type=\"submit\"\n              disabled={checkInputValue()}\n              style={style}\n            >\n              Create Admin\n              {loading ? (\n                <div\n                  className=\"spinner-border spinner-border-sm spinner text-white ml-2\"\n                  role=\"status\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </Button>\n          </Form>\n        </ModalBody>\n      </Modal>\n\n      <SuccessDialog\n        isOpen={completeModal}\n        toggle={toggleCompleteModal}\n        title={error.message}\n        details={error.data}\n      />\n\n      <FailureDialog\n        isOpen={completeModal}\n        toggle={toggleCompleteModal}\n        title={error.message}\n        details={error.data}\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  userName: state?.user?.details?.admin?.fullname,\n});\nexport default connect(mapStateToProps)(AddNewAdmin);\n"]},"metadata":{},"sourceType":"module"}