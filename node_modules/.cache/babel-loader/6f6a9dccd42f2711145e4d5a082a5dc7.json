{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/dashboards/Card Management/index.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header\";\nimport Statistics from \"./Statistics\";\nimport Table from \"./Table\";\nimport logo from \"../../../assets/img/icons/referralicon.svg\";\nimport cardRequests from \"./../../../requests/card-management\";\nimport Loader from \"../../../components/Loader\";\nimport CustomerDetails from \"./CustomerDetails\";\n\nvar CardManagement = function CardManagement() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      card = _useState2[0],\n      setCard = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cardData = _useState4[0],\n      setCardData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showCustomerDetails = _useState6[0],\n      setShowCustomerDetails = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      details = _useState8[0],\n      setDetails = _useState8[1];\n\n  var _useState9 = useState(30),\n      _useState10 = _slicedToArray(_useState9, 2),\n      days = _useState10[0],\n      setDays = _useState10[1];\n\n  var text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n\n  var _useState11 = useState(text[2]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filterText = _useState12[0],\n      setFilterText = _useState12[1];\n\n  var _cardRequests = cardRequests(),\n      getAllCards = _cardRequests.getAllCards;\n\n  var getRecentCardRequestsList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getAllCards(days);\n\n            case 2:\n              response = _context.sent;\n\n              if (response.code === \"00\") {\n                console.log(response.data);\n                console.log(response.data.allCardRequests);\n                setCard(response.data);\n                setCardData(response.data.allCardRequests);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getRecentCardRequestsList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var refresh = function refresh() {\n    setCard(\"\");\n    setCardData(\"\");\n    getRecentCardRequestsList();\n  };\n\n  var transactions = [{\n    name: \"Total Virtual Card Request\",\n    total_amount: card.volOfVirtualCardRequest,\n    percentage: card.percentVirtualCardRequest\n  }, {\n    name: \"Total Physical Card Request\",\n    total_amount: \"0\",\n    percentage: \"0\"\n  }, {\n    name: \"Total Virtual Card Disbursed\",\n    total_amount: card.virtualCardDisbursed,\n    percentage: card.percentageVirtualCard\n  }, {\n    name: \"Total Physical Card Disbursed\",\n    total_amount: card.physicalCardDisbursed,\n    percentage: card.percentagePhysicalCard\n  }, {\n    name: \"Total Volume of Active Cards\",\n    total_amount: card.volOfActiveCard,\n    percentage: card.percentageActiveCard\n  }, {\n    name: \"Total Volume of Users with Cards\",\n    total_amount: card.volOfCardUsers,\n    percentage: card.percentVolOfCardUser\n  }];\n\n  var updateDays = function updateDays(day, index) {\n    if (filterText !== text[index]) {\n      setCard(\"\");\n      setCardData(\"\");\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n\n  useEffect(function () {\n    setCard(\"\");\n    setCardData(\"\");\n    getRecentCardRequestsList();\n  }, [showCustomerDetails]);\n  useEffect(function () {\n    getRecentCardRequestsList();\n  }, [days]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    logo: logo,\n    name: \"Card Analytics\",\n    calendar: true,\n    filterText: filterText,\n    updateDays: updateDays,\n    refresh: refresh,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), !showCustomerDetails ? /*#__PURE__*/React.createElement(React.Fragment, null, card.length !== 0 ? /*#__PURE__*/React.createElement(Statistics, {\n    transactions: transactions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    tableData: cardData,\n    setShowCustomerDetails: setShowCustomerDetails,\n    setDetails: setDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(CustomerDetails, {\n    setShowCustomerDetails: setShowCustomerDetails,\n    details: details,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default CardManagement;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/dashboards/Card Management/index.js"],"names":["React","useState","useEffect","Header","Statistics","Table","cardRequests","Loader","CustomerDetails","CardManagement","card","setCard","cardData","setCardData","showCustomerDetails","setShowCustomerDetails","details","setDetails","days","setDays","text","filterText","setFilterText","getAllCards","getRecentCardRequestsList","response","code","console","log","data","allCardRequests","refresh","transactions","name","total_amount","volOfVirtualCardRequest","percentage","percentVirtualCardRequest","virtualCardDisbursed","percentageVirtualCard","physicalCardDisbursed","percentagePhysicalCard","volOfActiveCard","percentageActiveCard","volOfCardUsers","percentVolOfCardUser","updateDays","day","index","logo","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,kBAAwBR,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAsDZ,QAAQ,CAAC,KAAD,CAA9D;AAAA;AAAA,MAAOa,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,mBAA8Bd,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwBhB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOiB,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,IAAI,GAAG,CAAC,UAAD,EAAa,aAAb,EAA4B,cAA5B,EAA4C,cAA5C,CAAb;;AACA,oBAAoCnB,QAAQ,CAACmB,IAAI,CAAC,CAAD,CAAL,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,sBAAwBhB,YAAY,EAApC;AAAA,MAAQiB,WAAR,iBAAQA,WAAR;;AAEA,MAAMC,yBAAyB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACTD,WAAW,CAACL,IAAD,CADF;;AAAA;AAC1BO,cAAAA,QAD0B;;AAEhC,kBAAIA,QAAQ,CAACC,IAAT,KAAkB,IAAtB,EAA4B;AAC1BC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAF,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,eAA1B;AACAnB,gBAAAA,OAAO,CAACc,QAAQ,CAACI,IAAV,CAAP;AACAhB,gBAAAA,WAAW,CAACY,QAAQ,CAACI,IAAT,CAAcC,eAAf,CAAX;AACD;;AAP+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAzBN,yBAAyB;AAAA;AAAA;AAAA,KAA/B;;AAUA,MAAMO,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBpB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAW,IAAAA,yBAAyB;AAC1B,GAJD;;AAMA,MAAMQ,YAAY,GAAG,CACnB;AACEC,IAAAA,IAAI,EAAE,4BADR;AAEEC,IAAAA,YAAY,EAAExB,IAAI,CAACyB,uBAFrB;AAGEC,IAAAA,UAAU,EAAE1B,IAAI,CAAC2B;AAHnB,GADmB,EAMnB;AACEJ,IAAAA,IAAI,EAAE,6BADR;AAEEC,IAAAA,YAAY,EAAE,GAFhB;AAGEE,IAAAA,UAAU,EAAE;AAHd,GANmB,EAWnB;AACEH,IAAAA,IAAI,EAAE,8BADR;AAEEC,IAAAA,YAAY,EAAExB,IAAI,CAAC4B,oBAFrB;AAGEF,IAAAA,UAAU,EAAE1B,IAAI,CAAC6B;AAHnB,GAXmB,EAgBnB;AACEN,IAAAA,IAAI,EAAE,+BADR;AAEEC,IAAAA,YAAY,EAAExB,IAAI,CAAC8B,qBAFrB;AAGEJ,IAAAA,UAAU,EAAE1B,IAAI,CAAC+B;AAHnB,GAhBmB,EAqBnB;AACER,IAAAA,IAAI,EAAE,8BADR;AAEEC,IAAAA,YAAY,EAAExB,IAAI,CAACgC,eAFrB;AAGEN,IAAAA,UAAU,EAAE1B,IAAI,CAACiC;AAHnB,GArBmB,EA0BnB;AACEV,IAAAA,IAAI,EAAE,kCADR;AAEEC,IAAAA,YAAY,EAAExB,IAAI,CAACkC,cAFrB;AAGER,IAAAA,UAAU,EAAE1B,IAAI,CAACmC;AAHnB,GA1BmB,CAArB;;AAgCA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACjC,QAAI3B,UAAU,KAAKD,IAAI,CAAC4B,KAAD,CAAvB,EAAgC;AAC9BrC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAM,MAAAA,OAAO,CAAC4B,GAAD,CAAP;AACAzB,MAAAA,aAAa,CAACF,IAAI,CAAC4B,KAAD,CAAL,CAAb;AACD;AACF,GAPD;;AAQA9C,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAW,IAAAA,yBAAyB;AAC1B,GAJQ,EAIN,CAACV,mBAAD,CAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,YAAM;AACdsB,IAAAA,yBAAyB;AAC1B,GAFQ,EAEN,CAACN,IAAD,CAFM,CAAT;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE+B,IADR;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,UAAU,EAAE5B,UAJd;AAKE,IAAA,UAAU,EAAEyB,UALd;AAME,IAAA,OAAO,EAAEf,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASG,CAACjB,mBAAD,gBACC,0CACGJ,IAAI,CAACwC,MAAL,KAAgB,CAAhB,gBACC,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAElB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAME,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEpB,QADb;AAEE,IAAA,sBAAsB,EAAEG,sBAF1B;AAGE,IAAA,UAAU,EAAEE,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,gBAcC,oBAAC,eAAD;AACE,IAAA,sBAAsB,EAAEF,sBAD1B;AAEE,IAAA,OAAO,EAAEC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CADF;AA+BD,CA1GD;;AA4GA,eAAeP,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header\";\nimport Statistics from \"./Statistics\";\nimport Table from \"./Table\";\nimport logo from \"../../../assets/img/icons/referralicon.svg\";\nimport cardRequests from \"./../../../requests/card-management\";\nimport Loader from \"../../../components/Loader\";\nimport CustomerDetails from \"./CustomerDetails\";\n\nconst CardManagement = () => {\n  const [card, setCard] = useState(\"\");\n  const [cardData, setCardData] = useState(\"\");\n  const [showCustomerDetails, setShowCustomerDetails] = useState(false);\n  const [details, setDetails] = useState({});\n  const [days, setDays] = useState(30);\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n  const [filterText, setFilterText] = useState(text[2]);\n  const { getAllCards } = cardRequests();\n\n  const getRecentCardRequestsList = async () => {\n    const response = await getAllCards(days);\n    if (response.code === \"00\") {\n      console.log(response.data);\n      console.log(response.data.allCardRequests);\n      setCard(response.data);\n      setCardData(response.data.allCardRequests);\n    }\n  };\n\n  const refresh = () => {\n    setCard(\"\");\n    setCardData(\"\");\n    getRecentCardRequestsList();\n  };\n\n  const transactions = [\n    {\n      name: \"Total Virtual Card Request\",\n      total_amount: card.volOfVirtualCardRequest,\n      percentage: card.percentVirtualCardRequest,\n    },\n    {\n      name: \"Total Physical Card Request\",\n      total_amount: \"0\",\n      percentage: \"0\",\n    },\n    {\n      name: \"Total Virtual Card Disbursed\",\n      total_amount: card.virtualCardDisbursed,\n      percentage: card.percentageVirtualCard,\n    },\n    {\n      name: \"Total Physical Card Disbursed\",\n      total_amount: card.physicalCardDisbursed,\n      percentage: card.percentagePhysicalCard,\n    },\n    {\n      name: \"Total Volume of Active Cards\",\n      total_amount: card.volOfActiveCard,\n      percentage: card.percentageActiveCard,\n    },\n    {\n      name: \"Total Volume of Users with Cards\",\n      total_amount: card.volOfCardUsers,\n      percentage: card.percentVolOfCardUser,\n    },\n  ];\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setCard(\"\");\n      setCardData(\"\");\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n  useEffect(() => {\n    setCard(\"\");\n    setCardData(\"\");\n    getRecentCardRequestsList();\n  }, [showCustomerDetails]);\n\n  useEffect(() => {\n    getRecentCardRequestsList();\n  }, [days]);\n  return (\n    <div>\n      <Header\n        logo={logo}\n        name=\"Card Analytics\"\n        calendar\n        filterText={filterText}\n        updateDays={updateDays}\n        refresh={refresh}\n      />\n      {!showCustomerDetails ? (\n        <>\n          {card.length !== 0 ? (\n            <Statistics transactions={transactions} />\n          ) : (\n            <Loader />\n          )}\n          <Table\n            tableData={cardData}\n            setShowCustomerDetails={setShowCustomerDetails}\n            setDetails={setDetails}\n          />\n        </>\n      ) : (\n        <CustomerDetails\n          setShowCustomerDetails={setShowCustomerDetails}\n          details={details}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CardManagement;\n"]},"metadata":{},"sourceType":"module"}