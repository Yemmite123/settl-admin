{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Text from\"antd/lib/typography/Text\";import{setDay}from\"date-fns\";import React,{useContext,useState,useEffect,createContext}from\"react\";import walletRequest from\"../requests/wallet-savings\";var APIContext=createContext();export function APIContextProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),walletData=_useState2[0],setWalletData=_useState2[1];var _useState3=useState(30),_useState4=_slicedToArray(_useState3,2),days=_useState4[0],setDays=_useState4[1];var text=[\"Today   \",\"Last 7 Days\",\"Last 30 days\",\"Last 90 Days\"];var _useState5=useState(text[2]),_useState6=_slicedToArray(_useState5,2),filterText=_useState6[0],setFilterText=_useState6[1];var _walletRequest=walletRequest(),getAllWallets=_walletRequest.getAllWallets;var getWalletList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getAllWallets(days);case 2:response=_context.sent;if(response.code==\"00\"){console.log(response.data);setWalletData(response.data);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function getWalletList(){return _ref2.apply(this,arguments);};}();var refresh=function refresh(){setWalletData([]);getWalletList();};var updateDays=function updateDays(day,index){if(filterText!==text[index]){setWalletData([]);setDays(day);setFilterText(text[index]);}};useEffect(function(){getWalletList();},[days]);return/*#__PURE__*/ (// Add required values to the value prop within an object\nReact.createElement(APIContext.Provider,{value:{walletData:walletData,filterText:filterText,updateDays:updateDays,refresh:refresh}},children));}// Create a hook to use the APIContext, this is a Kent C. Dodds pattern\nexport function useAPI(){var context=useContext(APIContext);if(context===undefined){throw new Error(\"Context must be used within a Provider\");}return context;}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/contexts/WalletContext.js"],"names":["Text","setDay","React","useContext","useState","useEffect","createContext","walletRequest","APIContext","APIContextProvider","children","walletData","setWalletData","days","setDays","text","filterText","setFilterText","getAllWallets","getWalletList","response","code","console","log","data","refresh","updateDays","day","index","useAPI","context","undefined","Error"],"mappings":"6mBAAA,MAAOA,CAAAA,IAAP,KAAiB,0BAAjB,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,CAAiDC,aAAjD,KAAsE,OAAtE,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CAEA,GAAMC,CAAAA,UAAU,CAAGF,aAAa,EAAhC,CAEA,MAAO,SAASG,CAAAA,kBAAT,MAA0C,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC/C,cAAoCN,QAAQ,CAAC,EAAD,CAA5C,wCAAOO,UAAP,eAAmBC,aAAnB,eACA,eAAwBR,QAAQ,CAAC,EAAD,CAAhC,yCAAOS,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,IAAI,CAAG,CAAC,UAAD,CAAa,aAAb,CAA4B,cAA5B,CAA4C,cAA5C,CAAb,CACA,eAAoCX,QAAQ,CAACW,IAAI,CAAC,CAAD,CAAL,CAA5C,yCAAOC,UAAP,eAAmBC,aAAnB,eAEA,mBAA0BV,aAAa,EAAvC,CAAQW,aAAR,gBAAQA,aAAR,CAEA,GAAMC,CAAAA,aAAa,2FAAG,sKACGD,CAAAA,aAAa,CAACL,IAAD,CADhB,QACdO,QADc,eAEpB,GAAIA,QAAQ,CAACC,IAAT,EAAiB,IAArB,CAA2B,CACzBC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB,EACAZ,aAAa,CAACQ,QAAQ,CAACI,IAAV,CAAb,CACD,CALmB,sDAAH,kBAAbL,CAAAA,aAAa,2CAAnB,CAOA,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBb,aAAa,CAAC,EAAD,CAAb,CACAO,aAAa,GACd,CAHD,CAIA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAMC,KAAN,CAAgB,CACjC,GAAIZ,UAAU,GAAKD,IAAI,CAACa,KAAD,CAAvB,CAAgC,CAC9BhB,aAAa,CAAC,EAAD,CAAb,CACAE,OAAO,CAACa,GAAD,CAAP,CACAV,aAAa,CAACF,IAAI,CAACa,KAAD,CAAL,CAAb,CACD,CACF,CAND,CAOAvB,SAAS,CAAC,UAAM,CACdc,aAAa,GACd,CAFQ,CAEN,CAACN,IAAD,CAFM,CAAT,CAIA,oBACE;AACA,oBAAC,UAAD,CAAY,QAAZ,EACE,KAAK,CAAE,CAAEF,UAAU,CAAVA,UAAF,CAAcK,UAAU,CAAVA,UAAd,CAA0BU,UAAU,CAAVA,UAA1B,CAAsCD,OAAO,CAAPA,OAAtC,CADT,EAGGf,QAHH,CAFF,EAQD,CAED;AACA,MAAO,SAASmB,CAAAA,MAAT,EAAkB,CACvB,GAAMC,CAAAA,OAAO,CAAG3B,UAAU,CAACK,UAAD,CAA1B,CACA,GAAIsB,OAAO,GAAKC,SAAhB,CAA2B,CACzB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,wCAAV,CAAN,CACD,CACD,MAAOF,CAAAA,OAAP,CACD","sourcesContent":["import Text from \"antd/lib/typography/Text\";\nimport { setDay } from \"date-fns\";\nimport React, { useContext, useState, useEffect, createContext } from \"react\";\nimport walletRequest from \"../requests/wallet-savings\";\n\nconst APIContext = createContext();\n\nexport function APIContextProvider({ children }) {\n  const [walletData, setWalletData] = useState([]);\n  const [days, setDays] = useState(30);\n  const text = [\"Today   \", \"Last 7 Days\", \"Last 30 days\", \"Last 90 Days\"];\n  const [filterText, setFilterText] = useState(text[2]);\n\n  const { getAllWallets } = walletRequest();\n\n  const getWalletList = async () => {\n    const response = await getAllWallets(days);\n    if (response.code == \"00\") {\n      console.log(response.data);\n      setWalletData(response.data);\n    }\n  };\n  const refresh = () => {\n    setWalletData([]);\n    getWalletList();\n  };\n  const updateDays = (day, index) => {\n    if (filterText !== text[index]) {\n      setWalletData([]);\n      setDays(day);\n      setFilterText(text[index]);\n    }\n  };\n  useEffect(() => {\n    getWalletList();\n  }, [days]);\n\n  return (\n    // Add required values to the value prop within an object\n    <APIContext.Provider\n      value={{ walletData, filterText, updateDays, refresh }}\n    >\n      {children}\n    </APIContext.Provider>\n  );\n}\n\n// Create a hook to use the APIContext, this is a Kent C. Dodds pattern\nexport function useAPI() {\n  const context = useContext(APIContext);\n  if (context === undefined) {\n    throw new Error(\"Context must be used within a Provider\");\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}