{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{Button,Dropdown,DropdownToggle,DropdownMenu,Modal,ModalBody,ModalHeader,Form,FormGroup,Label}from\"reactstrap\";import DropdownItem from\"reactstrap/lib/DropdownItem\";import more from\"../../../assets/img/icons/more.svg\";import InputBox from\"../../../components/InputBox\";import UpgradeAccountDialog from\"./UpgradeAccountDialog\";import checkIcon from\"./../../../assets/img/icons/check.svg\";import securityIcon from\"./../../../assets/img/icons/security-warning.svg\";import UpgradeSuccessModal from\"./UpgradeSuccessDialog\";import BlacklistDeviceDialog from\"../BlacklistDeviceDialog\";import Loading from\"../../../components/Loading\";import Request from\"../../../requests/customer\";function MoreDropDown(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dropdownOpen=_useState2[0],setDropdownOpen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),upgradeSuccessModal=_useState4[0],setUpgradeSuccessModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),upgradeAccountModal=_useState6[0],setUpgradeAccountModal=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),blacklistDevice=_useState8[0],setBlacklistDevice=_useState8[1];var _useState9=useState(props.freeze),_useState10=_slicedToArray(_useState9,2),freeze=_useState10[0],setfreeze=_useState10[1];var _useState11=useState(\"+2348030000000\"),_useState12=_slicedToArray(_useState11,2),customerPhoneNumber=_useState12[0],setCustomerPhoneNumber=_useState12[1];var _useState13=useState(\"Fraud suspected\"),_useState14=_slicedToArray(_useState13,2),reasonForFreeze=_useState14[0],setReasonForFreeze=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),loading=_useState16[0],setLoading=_useState16[1];var toggleFilter=function toggleFilter(){return setDropdownOpen(function(prevState){return!prevState;});};var toggleBlacklistDevice=function toggleBlacklistDevice(){return setBlacklistDevice(!blacklistDevice);};var _Request=Request(),freezeWallet=_Request.freezeWallet;var handleFreezeWallet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();setLoading(true);_context.next=4;return freezeWallet({AdminName:props.fullName,adminEmail:props.email,customerPhone:customerPhoneNumber,reason:reasonForFreeze});case 4:response=_context.sent;if(!(response.code===\"00\")){_context.next=14;break;}console.log(response);// setShowSuccess(true);\nalert(\"Freeze Operation is successful\");setfreeze(true);setCustomerPhoneNumber(\"+2348030000000\");setReasonForFreeze(\"Fraud suspected\");props.toggle();setLoading(false);return _context.abrupt(\"return\",true);case 14:setLoading(false);// setShowFailure(true);\nreturn _context.abrupt(\"return\",false);case 16:case\"end\":return _context.stop();}}},_callee);}));return function handleFreezeWallet(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Dropdown,{isOpen:dropdownOpen,toggle:toggleFilter,className:\"mr-3 more-dropdown\",id:\"more-dropdown\"},/*#__PURE__*/React.createElement(DropdownToggle,{caret:true},/*#__PURE__*/React.createElement(\"img\",{src:more,alt:\"an icon\"})),/*#__PURE__*/React.createElement(DropdownMenu,{className:\"filter-dropdown-menu\"},/*#__PURE__*/React.createElement(DropdownItem,{onClick:function onClick(){return setUpgradeAccountModal(true);}},\"Upgrade Customer\"),/*#__PURE__*/React.createElement(DropdownItem,{className:freeze?\"\":\"freeze\",onClick:freeze?\"\":props.toggle},freeze?\"Activate Wallet\":\"Freeze Wallet\"),/*#__PURE__*/React.createElement(DropdownItem,{onClick:function onClick(){return setBlacklistDevice(true);}},\"Blacklist Device\"))),/*#__PURE__*/React.createElement(Modal,{isOpen:props.isOpen,toggle:props.toggle,className:\"admin-modal freeze-modal\"},/*#__PURE__*/React.createElement(ModalHeader,null,\"Freeze Confirmation\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"img\",{src:securityIcon,className:\"mb-3\",alt:\"security warning icon\"}),/*#__PURE__*/React.createElement(\"p\",null,\"Are you sure you want to freeze this user\\u2019s account?\")),/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(InputBox,{type:\"text\",name:\"customerPhoneNumber\",id:\"customerPhoneNumber\",value:customerPhoneNumber,onChange:function onChange(e){return setCustomerPhoneNumber(e.target.value);}}),/*#__PURE__*/React.createElement(Label,{for:\"customerPhoneNumber\"},\"Customer Phone Number\")),/*#__PURE__*/React.createElement(FormGroup,{className:\"pb-3\"},/*#__PURE__*/React.createElement(InputBox,{type:\"textarea\",name:\"reasonForFreeze\",id:\"reasonForFreeze\",value:reasonForFreeze,rows:\"4\",onChange:function onChange(e){return setReasonForFreeze(e.target.value);}})),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(Button,{color:\"info\",className:\"btn-cancel\",onClick:props.toggle},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{color:\"danger\",className:\"btn-delete\",onClick:handleFreezeWallet},loading?/*#__PURE__*/React.createElement(Loading,null):\" Yes, Freeze\")))))),/*#__PURE__*/React.createElement(Modal,{isOpen:props.isOpenSuccess,toggle:props.toggleSuccess,className:\"admin-modal success-modal\"},/*#__PURE__*/React.createElement(ModalHeader,{toggle:props.toggleSuccess},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mr-3\"},/*#__PURE__*/React.createElement(\"img\",{src:checkIcon,alt:\"check icon\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h6\",null,\"Success\"),/*#__PURE__*/React.createElement(\"p\",null,\"Freeze operation was sucessful\"))))),/*#__PURE__*/React.createElement(UpgradeSuccessModal,{isOpen:upgradeSuccessModal,toggle:function toggle(){return setUpgradeSuccessModal(false);}}),/*#__PURE__*/React.createElement(UpgradeAccountDialog,{isOpen:upgradeAccountModal,toggle:function toggle(){return setUpgradeAccountModal(false);}}),/*#__PURE__*/React.createElement(BlacklistDeviceDialog,{title:\"customer\",isOpen:blacklistDevice,toggle:toggleBlacklistDevice}));}var mapStateToProps=function mapStateToProps(state){var _state$user,_state$user$details,_state$user$details$a,_state$user2,_state$user2$details,_state$user2$details$;return{fullName:(_state$user=state.user)===null||_state$user===void 0?void 0:(_state$user$details=_state$user.details)===null||_state$user$details===void 0?void 0:(_state$user$details$a=_state$user$details.admin)===null||_state$user$details$a===void 0?void 0:_state$user$details$a.fullname,email:(_state$user2=state.user)===null||_state$user2===void 0?void 0:(_state$user2$details=_state$user2.details)===null||_state$user2$details===void 0?void 0:(_state$user2$details$=_state$user2$details.admin)===null||_state$user2$details$===void 0?void 0:_state$user2$details$.email};};export default connect(mapStateToProps)(MoreDropDown);","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/customers/settl-customers/MoreDropDown.js"],"names":["React","useState","connect","Button","Dropdown","DropdownToggle","DropdownMenu","Modal","ModalBody","ModalHeader","Form","FormGroup","Label","DropdownItem","InputBox","UpgradeAccountDialog","UpgradeSuccessModal","BlacklistDeviceDialog","Loading","Request","MoreDropDown","props","dropdownOpen","setDropdownOpen","upgradeSuccessModal","setUpgradeSuccessModal","upgradeAccountModal","setUpgradeAccountModal","blacklistDevice","setBlacklistDevice","freeze","setfreeze","customerPhoneNumber","setCustomerPhoneNumber","reasonForFreeze","setReasonForFreeze","loading","setLoading","toggleFilter","prevState","toggleBlacklistDevice","freezeWallet","handleFreezeWallet","e","preventDefault","AdminName","fullName","adminEmail","email","customerPhone","reason","response","code","console","log","alert","toggle","more","isOpen","securityIcon","target","value","isOpenSuccess","toggleSuccess","checkIcon","mapStateToProps","state","user","details","admin","fullname"],"mappings":"6mBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OACIC,MADJ,CAEIC,QAFJ,CAGIC,cAHJ,CAIIC,YAJJ,CAKIC,KALJ,CAMIC,SANJ,CAOIC,WAPJ,CAQIC,IARJ,CASIC,SATJ,CAUIC,KAVJ,KAWO,YAXP,CAYA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,C,qDAEA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,C,wIAGA,MAAOC,CAAAA,mBAAP,KAAgC,wBAAhC,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0BAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzB,cAAwCpB,QAAQ,CAAC,KAAD,CAAhD,wCAAOqB,YAAP,eAAqBC,eAArB,eACA,eAAsDtB,QAAQ,CAAC,KAAD,CAA9D,yCAAOuB,mBAAP,eAA4BC,sBAA5B,eACA,eAAsDxB,QAAQ,CAAC,KAAD,CAA9D,yCAAOyB,mBAAP,eAA4BC,sBAA5B,eACA,eAA8C1B,QAAQ,CAAC,KAAD,CAAtD,yCAAO2B,eAAP,eAAwBC,kBAAxB,eAEA,eAA4B5B,QAAQ,CAACoB,KAAK,CAACS,MAAP,CAApC,0CAAOA,MAAP,gBAAeC,SAAf,gBACA,gBAAsD9B,QAAQ,CAAC,gBAAD,CAA9D,2CAAO+B,mBAAP,gBAA4BC,sBAA5B,gBACA,gBAA8ChC,QAAQ,CAAC,iBAAD,CAAtD,2CAAOiC,eAAP,gBAAwBC,kBAAxB,gBAEA,gBAA8BlC,QAAQ,CAAC,KAAD,CAAtC,2CAAOmC,OAAP,gBAAgBC,UAAhB,gBAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAMf,CAAAA,eAAe,CAAC,SAAAgB,SAAS,QAAI,CAACA,SAAL,EAAV,CAArB,EAArB,CACA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAMX,CAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAxB,EAA9B,CAEA,aAAyBT,OAAO,EAAhC,CAAQsB,YAAR,UAAQA,YAAR,CAEA,GAAMC,CAAAA,kBAAkB,0FAAG,iBAAOC,CAAP,+HACvBA,CAAC,CAACC,cAAF,GACAP,UAAU,CAAC,IAAD,CAAV,CAFuB,sBAIAI,CAAAA,YAAY,CAAC,CAChCI,SAAS,CAAExB,KAAK,CAACyB,QADe,CAEhCC,UAAU,CAAE1B,KAAK,CAAC2B,KAFc,CAGhCC,aAAa,CAAEjB,mBAHiB,CAIhCkB,MAAM,CAAEhB,eAJwB,CAAD,CAJZ,QAIjBiB,QAJiB,oBAWpBA,QAAQ,CAACC,IAAT,GAAkB,IAXE,2BAYnBC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EACA;AACAI,KAAK,CAAC,gCAAD,CAAL,CACAxB,SAAS,CAAC,IAAD,CAAT,CACAE,sBAAsB,CAAC,gBAAD,CAAtB,CACAE,kBAAkB,CAAC,iBAAD,CAAlB,CACAd,KAAK,CAACmC,MAAN,GACAnB,UAAU,CAAC,KAAD,CAAV,CAnBmB,gCAoBZ,IApBY,UAuBvBA,UAAU,CAAC,KAAD,CAAV,CACA;AAxBuB,gCAyBhB,KAzBgB,yDAAH,kBAAlBK,CAAAA,kBAAkB,4CAAxB,CA4BA,mBACI,qDACI,oBAAC,QAAD,EACI,MAAM,CAAEpB,YADZ,CAEI,MAAM,CAAEgB,YAFZ,CAGI,SAAS,CAAC,oBAHd,CAII,EAAE,CAAC,eAJP,eAMI,oBAAC,cAAD,EAAgB,KAAK,KAArB,eACI,2BAAK,GAAG,CAAEmB,IAAV,CAAgB,GAAG,CAAC,SAApB,EADJ,CANJ,cASI,oBAAC,YAAD,EAAc,SAAS,CAAC,sBAAxB,eACI,oBAAC,YAAD,EACI,OAAO,CAAE,yBAAM9B,CAAAA,sBAAsB,CAAC,IAAD,CAA5B,EADb,qBADJ,cAMI,oBAAC,YAAD,EACI,SAAS,CAAEG,MAAM,CAAG,EAAH,CAAO,QAD5B,CAEI,OAAO,CAAEA,MAAM,CAAG,EAAH,CAAQT,KAAK,CAACmC,MAFjC,EAIK1B,MAAM,CAAG,iBAAH,CAAuB,eAJlC,CANJ,cAYI,oBAAC,YAAD,EACI,OAAO,CAAE,yBAAMD,CAAAA,kBAAkB,CAAC,IAAD,CAAxB,EADb,qBAZJ,CATJ,CADJ,cA8BI,oBAAC,KAAD,EAAO,MAAM,CAAER,KAAK,CAACqC,MAArB,CAA6B,MAAM,CAAErC,KAAK,CAACmC,MAA3C,CAAmD,SAAS,CAAC,0BAA7D,eACI,oBAAC,WAAD,4BADJ,cAEI,oBAAC,SAAD,mBACI,4CACI,2BAAK,SAAS,CAAC,aAAf,eACI,2BAAK,GAAG,CAAEG,YAAV,CAAwB,SAAS,CAAC,MAAlC,CAAyC,GAAG,CAAC,uBAA7C,EADJ,cAEI,yFAFJ,CADJ,cAKI,oBAAC,IAAD,mBACI,oBAAC,SAAD,mBACI,oBAAC,QAAD,EACI,IAAI,CAAC,MADT,CAEI,IAAI,CAAC,qBAFT,CAGI,EAAE,CAAC,qBAHP,CAII,KAAK,CAAE3B,mBAJX,CAKI,QAAQ,CAAE,kBAACW,CAAD,QAAOV,CAAAA,sBAAsB,CAACU,CAAC,CAACiB,MAAF,CAASC,KAAV,CAA7B,EALd,EADJ,cAQI,oBAAC,KAAD,EAAO,GAAG,CAAC,qBAAX,0BARJ,CADJ,cAWI,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,eACI,oBAAC,QAAD,EACI,IAAI,CAAC,UADT,CAEI,IAAI,CAAC,iBAFT,CAGI,EAAE,CAAC,iBAHP,CAII,KAAK,CAAE3B,eAJX,CAKI,IAAI,CAAC,GALT,CAMI,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,kBAAkB,CAACQ,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAzB,EANd,EADJ,CAXJ,cAqBI,8BArBJ,cAsBI,2BAAK,SAAS,CAAC,gCAAf,eACI,oBAAC,MAAD,EACI,KAAK,CAAC,MADV,CAEI,SAAS,CAAC,YAFd,CAGI,OAAO,CAAExC,KAAK,CAACmC,MAHnB,WADJ,cAQI,oBAAC,MAAD,EACI,KAAK,CAAC,QADV,CAEI,SAAS,CAAC,YAFd,CAGI,OAAO,CAAEd,kBAHb,EAKKN,OAAO,cAAG,oBAAC,OAAD,MAAH,CAAiB,cAL7B,CARJ,CAtBJ,CALJ,CADJ,CAFJ,CA9BJ,cAiFI,oBAAC,KAAD,EAAO,MAAM,CAAEf,KAAK,CAACyC,aAArB,CAAoC,MAAM,CAAEzC,KAAK,CAAC0C,aAAlD,CAAiE,SAAS,CAAC,2BAA3E,eACI,oBAAC,WAAD,EAAa,MAAM,CAAE1C,KAAK,CAAC0C,aAA3B,eACI,2BAAK,SAAS,CAAC,QAAf,eACI,2BAAK,SAAS,CAAC,MAAf,eACI,2BAAK,GAAG,CAAEC,SAAV,CAAqB,GAAG,CAAC,YAAzB,EADJ,CADJ,cAII,4CACI,wCADJ,cAEI,8DAFJ,CAJJ,CADJ,CADJ,CAjFJ,cA+FI,oBAAC,mBAAD,EAAqB,MAAM,CAAExC,mBAA7B,CAAkD,MAAM,CAAE,wBAAMC,CAAAA,sBAAsB,CAAC,KAAD,CAA5B,EAA1D,EA/FJ,cAgGI,oBAAC,oBAAD,EAAsB,MAAM,CAAEC,mBAA9B,CAAmD,MAAM,CAAE,wBAAMC,CAAAA,sBAAsB,CAAC,KAAD,CAA5B,EAA3D,EAhGJ,cAiGI,oBAAC,qBAAD,EACI,KAAK,CAAC,UADV,CAEI,MAAM,CAAEC,eAFZ,CAGI,MAAM,CAAEY,qBAHZ,EAjGJ,CADJ,CAyGH,CAED,GAAMyB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,0HAAY,CAChCpB,QAAQ,cAAEoB,KAAK,CAACC,IAAR,2DAAE,YAAYC,OAAd,qEAAE,oBAAqBC,KAAvB,gDAAE,sBAA4BC,QADN,CAEhCtB,KAAK,eAAEkB,KAAK,CAACC,IAAR,6DAAE,aAAYC,OAAd,sEAAE,qBAAqBC,KAAvB,gDAAE,sBAA4BrB,KAFH,CAAZ,EAAxB,CAKA,cAAe9C,CAAAA,OAAO,CAAC+D,eAAD,CAAP,CAAyB7C,YAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { \n    Button,\n    Dropdown, \n    DropdownToggle, \n    DropdownMenu, \n    Modal, \n    ModalBody,\n    ModalHeader,\n    Form,\n    FormGroup,\n    Label \n} from \"reactstrap\";\nimport DropdownItem from \"reactstrap/lib/DropdownItem\";\nimport more from \"../../../assets/img/icons/more.svg\";\nimport InputBox from \"../../../components/InputBox\";\nimport UpgradeAccountDialog from \"./UpgradeAccountDialog\";\nimport checkIcon from \"./../../../assets/img/icons/check.svg\";\nimport securityIcon from \"./../../../assets/img/icons/security-warning.svg\";\nimport UpgradeSuccessModal from \"./UpgradeSuccessDialog\";\nimport BlacklistDeviceDialog from \"../BlacklistDeviceDialog\";\nimport Loading from \"../../../components/Loading\";\nimport Request from \"../../../requests/customer\";\n\nfunction MoreDropDown(props) {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [upgradeSuccessModal, setUpgradeSuccessModal] = useState(false);\n    const [upgradeAccountModal, setUpgradeAccountModal] = useState(false);\n    const [blacklistDevice, setBlacklistDevice] = useState(false);\n\n    const [freeze, setfreeze] = useState(props.freeze);\n    const [customerPhoneNumber, setCustomerPhoneNumber] = useState(\"+2348030000000\");\n    const [reasonForFreeze, setReasonForFreeze] = useState(\"Fraud suspected\");\n\n    const [loading, setLoading] = useState(false);\n\n    const toggleFilter = () => setDropdownOpen(prevState => !prevState);\n    const toggleBlacklistDevice = () => setBlacklistDevice(!blacklistDevice);\n    \n    const { freezeWallet } = Request();\n\n    const handleFreezeWallet = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n    \n        const response = await freezeWallet({\n            AdminName: props.fullName,\n            adminEmail: props.email,\n            customerPhone: customerPhoneNumber,\n            reason: reasonForFreeze\n        });\n\n        if(response.code === \"00\") {\n            console.log(response);\n            // setShowSuccess(true);\n            alert(\"Freeze Operation is successful\");\n            setfreeze(true);\n            setCustomerPhoneNumber(\"+2348030000000\");\n            setReasonForFreeze(\"Fraud suspected\");\n            props.toggle();\n            setLoading(false);\n            return true;\n        } \n  \n        setLoading(false);\n        // setShowFailure(true);\n        return false;\n    }\n\n    return(\n        <>\n            <Dropdown \n                isOpen={dropdownOpen} \n                toggle={toggleFilter} \n                className=\"mr-3 more-dropdown\"\n                id=\"more-dropdown\"\n            >\n                <DropdownToggle caret>\n                    <img src={more} alt=\"an icon\" />\n                </DropdownToggle>\n                <DropdownMenu className=\"filter-dropdown-menu\">\n                    <DropdownItem \n                        onClick={() => setUpgradeAccountModal(true)}\n                    >\n                        Upgrade Customer\n                    </DropdownItem>\n                    <DropdownItem \n                        className={freeze ? \"\": \"freeze\"} \n                        onClick={freeze ? \"\" : props.toggle}\n                    >\n                        {freeze ? \"Activate Wallet\" : \"Freeze Wallet\"}\n                    </DropdownItem>\n                    <DropdownItem \n                        onClick={() => setBlacklistDevice(true)}\n                    >\n                        Blacklist Device\n                    </DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n\n            <Modal isOpen={props.isOpen} toggle={props.toggle} className=\"admin-modal freeze-modal\">\n                <ModalHeader>Freeze Confirmation</ModalHeader>\n                <ModalBody>\n                    <div>\n                        <div className=\"text-center\">\n                            <img src={securityIcon} className=\"mb-3\" alt=\"security warning icon\" />\n                            <p>Are you sure you want to freeze this user’s account?</p>\n                        </div>\n                        <Form>\n                            <FormGroup>\n                                <InputBox\n                                    type=\"text\"\n                                    name=\"customerPhoneNumber\" \n                                    id=\"customerPhoneNumber\"\n                                    value={customerPhoneNumber}\n                                    onChange={(e) => setCustomerPhoneNumber(e.target.value)}\n                                />\n                                <Label for=\"customerPhoneNumber\">Customer Phone Number</Label>\n                            </FormGroup>\n                            <FormGroup className=\"pb-3\">\n                                <InputBox\n                                    type=\"textarea\"\n                                    name=\"reasonForFreeze\"\n                                    id=\"reasonForFreeze\"\n                                    value={reasonForFreeze}\n                                    rows=\"4\"\n                                    onChange={(e) => setReasonForFreeze(e.target.value)}\n                                />\n                            </FormGroup>\n                            <hr/>\n                            <div className=\"d-flex justify-content-between\">\n                                <Button \n                                    color=\"info\" \n                                    className=\"btn-cancel\" \n                                    onClick={props.toggle}\n                                >\n                                    Cancel\n                                </Button>\n                                <Button \n                                    color=\"danger\" \n                                    className=\"btn-delete\" \n                                    onClick={handleFreezeWallet}\n                                >\n                                    {loading ? <Loading /> : \" Yes, Freeze\"}\n                                </Button>\n                            </div>\n                        </Form>\n                    </div>\n                </ModalBody>\n            </Modal>\n            \n            <Modal isOpen={props.isOpenSuccess} toggle={props.toggleSuccess} className=\"admin-modal success-modal\">\n                <ModalHeader toggle={props.toggleSuccess}>\n                    <div className=\"d-flex\">\n                        <div className=\"mr-3\">\n                            <img src={checkIcon} alt=\"check icon\" />\n                        </div>\n                        <div>\n                            <h6>Success</h6>\n                            <p>Freeze operation was sucessful</p>\n                        </div>\n                    </div>\n                </ModalHeader>\n            </Modal>\n\n            <UpgradeSuccessModal isOpen={upgradeSuccessModal} toggle={() => setUpgradeSuccessModal(false)} />\n            <UpgradeAccountDialog isOpen={upgradeAccountModal} toggle={() => setUpgradeAccountModal(false)} />\n            <BlacklistDeviceDialog\n                title=\"customer\"\n                isOpen={blacklistDevice}\n                toggle={toggleBlacklistDevice}\n            />\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    fullName: state.user?.details?.admin?.fullname,\n    email: state.user?.details?.admin?.email,\n});\n\nexport default connect(mapStateToProps)(MoreDropDown);"]},"metadata":{},"sourceType":"module"}