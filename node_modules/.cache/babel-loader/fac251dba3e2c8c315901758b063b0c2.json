{"ast":null,"code":"import _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/customers/settl-customers/TransactionHistoryTable.js\";\nimport React, { useState } from \"react\";\nimport { Badge } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport Loader from \"../../../components/Loader\";\nimport TransactionHistoryTableHeader from \"./TransactionHistoryTableHeader\";\nexport default function TransactionHistoryTable(_ref) {\n  var _this = this;\n\n  var setShowTransactionDetails = _ref.setShowTransactionDetails,\n      tableData = _ref.tableData,\n      setTransRef = _ref.setTransRef;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isfiltered = _useState2[0],\n      setIsFiltered = _useState2[1];\n\n  var _useState3 = useState(tableData),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var Filter = function Filter(data) {\n    setData(\"\");\n    var currentDate = new Date();\n    var currentDateFormat = currentDate.setHours(0, 0, 0, 0);\n    var check = data.type.length > 0 || data.status.length > 0 || data.startDate !== currentDateFormat || data.endDate !== currentDateFormat;\n    setTimeout(function () {\n      var filtered = tableData.filter(function (product) {\n        if (check) {\n          setIsFiltered(true);\n          var splitDate = product.date.slice(0, -6).split(\"/\");\n          var productDate = new Date(+splitDate[2], splitDate[1] - 1, +splitDate[0]).setHours(0, 0, 0, 0);\n          return data.status.includes(product.transStatus.toLowerCase()) || data.type.includes(product.tranxType.toLowerCase()) || productDate >= data.startDate && productDate <= data.endDate;\n        } else {\n          setIsFiltered(false);\n          return product;\n        }\n      });\n      setData(filtered);\n    }, 500);\n  };\n\n  var tableColumns = [{\n    dataField: \"date\",\n    text: \"Date\",\n    formatter: function formatter(cell, row, rowIndex) {\n      return cell.slice(0, -8);\n    }\n  }, {\n    dataField: \"walletType\",\n    text: \"Wallet Type\"\n  }, {\n    dataField: \"tranxRef\",\n    text: \"Tranx Ref.\"\n  }, {\n    dataField: \"tranxType\",\n    text: \"Tranx Type\"\n  }, {\n    dataField: \"transAmount\",\n    text: \"Amount\",\n    classes: \"text-right\",\n    headerClasses: \"text-right\",\n    formatter: function formatter(cell, row, rowIndex) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 43\n        }\n      }, \"\\u20A6\", cell);\n    }\n  }, {\n    dataField: \"transStatus\",\n    text: \"Status\",\n    headerClasses: \"text-center\",\n    formatter: function formatter(cell, row, rowIndex) {\n      if ((cell === null || cell === void 0 ? void 0 : cell.toLowerCase()) === \"success\") {\n        return /*#__PURE__*/React.createElement(Badge, {\n          color: \"secondary\",\n          className: \"badge-active\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }, cell);\n      }\n\n      if ((cell === null || cell === void 0 ? void 0 : cell.toLowerCase()) === \"pending\") {\n        return /*#__PURE__*/React.createElement(Badge, {\n          color: \"secondary\",\n          className: \"badge-pending\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        }, cell);\n      }\n\n      if ((cell === null || cell === void 0 ? void 0 : cell.toLowerCase()) === \"failed\") {\n        return /*#__PURE__*/React.createElement(Badge, {\n          color: \"secondary\",\n          className: \"badge-failed\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }, cell);\n      }\n    }\n  }];\n\n  var customTotal = function customTotal(from, to, size) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"react-bootstrap-table-pagination-total\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, \"Showing \", from, \" to \", to, \" of \", size, \" Results\");\n  };\n\n  var rowEvents = {\n    onClick: function onClick(e, row, rowIndex) {\n      setShowTransactionDetails(function (prev) {\n        return !prev;\n      });\n      setTransRef(row.tranxRef);\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-admins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Transaction History\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-table transaction-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    responsive: true,\n    keyField: \"id\",\n    data: data ? data : [],\n    columns: tableColumns,\n    exportCSV: {\n      fileName: \"transaction history data.csv\"\n    },\n    search: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionHistoryTableHeader, {\n      csvData: props.csvProps,\n      filter: Filter,\n      filtered: isfiltered,\n      dataLength: data === null || data === void 0 ? void 0 : data.length,\n      search: props.searchProps,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }), !data ? /*#__PURE__*/React.createElement(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      bootstrap4: true,\n      bordered: false,\n      wrapperClasses: \"table-responsive\",\n      rowEvents: rowEvents,\n      pagination: paginationFactory({\n        sizePerPage: 9,\n        hideSizePerPage: true,\n        showTotal: true,\n        paginationTotalRenderer: customTotal\n      })\n    }, props.baseProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/pages/customers/settl-customers/TransactionHistoryTable.js"],"names":["React","useState","Badge","BootstrapTable","paginationFactory","ToolkitProvider","Loader","TransactionHistoryTableHeader","TransactionHistoryTable","setShowTransactionDetails","tableData","setTransRef","isfiltered","setIsFiltered","data","setData","Filter","currentDate","Date","currentDateFormat","setHours","check","type","length","status","startDate","endDate","setTimeout","filtered","filter","product","splitDate","date","slice","split","productDate","includes","transStatus","toLowerCase","tranxType","tableColumns","dataField","text","formatter","cell","row","rowIndex","classes","headerClasses","customTotal","from","to","size","rowEvents","onClick","e","prev","tranxRef","fileName","props","csvProps","searchProps","sizePerPage","hideSizePerPage","showTotal","paginationTotalRenderer","baseProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Badge } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport Loader from \"../../../components/Loader\";\nimport TransactionHistoryTableHeader from \"./TransactionHistoryTableHeader\";\n\nexport default function TransactionHistoryTable({\n  setShowTransactionDetails,\n  tableData,\n  setTransRef,\n}) {\n  const [isfiltered, setIsFiltered] = useState(false);\n  const [data, setData] = useState(tableData);\n\n  const Filter = (data) => {\n    setData(\"\");\n    const currentDate = new Date();\n    const currentDateFormat = currentDate.setHours(0, 0, 0, 0);\n    const check =\n      data.type.length > 0 ||\n      data.status.length > 0 ||\n      data.startDate !== currentDateFormat ||\n      data.endDate !== currentDateFormat;\n\n    setTimeout(() => {\n      const filtered = tableData.filter((product) => {\n        if (check) {\n          setIsFiltered(true);\n          const splitDate = product.date.slice(0, -6).split(\"/\");\n          const productDate = new Date(\n            +splitDate[2],\n            splitDate[1] - 1,\n            +splitDate[0]\n          ).setHours(0, 0, 0, 0);\n          return (\n            data.status.includes(product.transStatus.toLowerCase()) ||\n            data.type.includes(product.tranxType.toLowerCase()) ||\n            (productDate >= data.startDate && productDate <= data.endDate)\n          );\n        } else {\n          setIsFiltered(false);\n          return product;\n        }\n      });\n      setData(filtered);\n    }, 500);\n  };\n\n  const tableColumns = [\n    {\n      dataField: \"date\",\n      text: \"Date\",\n      formatter: (cell, row, rowIndex) => {\n        return cell.slice(0, -8);\n      },\n    },\n    {\n      dataField: \"walletType\",\n      text: \"Wallet Type\",\n    },\n    {\n      dataField: \"tranxRef\",\n      text: \"Tranx Ref.\",\n    },\n    {\n      dataField: \"tranxType\",\n      text: \"Tranx Type\",\n    },\n    {\n      dataField: \"transAmount\",\n      text: \"Amount\",\n      classes: \"text-right\",\n      headerClasses: \"text-right\",\n      formatter: (cell, row, rowIndex) => <span>₦{cell}</span>,\n    },\n    {\n      dataField: \"transStatus\",\n      text: \"Status\",\n      headerClasses: \"text-center\",\n      formatter: (cell, row, rowIndex) => {\n        if (cell?.toLowerCase() === \"success\") {\n          return (\n            <Badge color=\"secondary\" className=\"badge-active\">\n              {cell}\n            </Badge>\n          );\n        }\n        if (cell?.toLowerCase() === \"pending\") {\n          return (\n            <Badge color=\"secondary\" className=\"badge-pending\">\n              {cell}\n            </Badge>\n          );\n        }\n        if (cell?.toLowerCase() === \"failed\") {\n          return (\n            <Badge color=\"secondary\" className=\"badge-failed\">\n              {cell}\n            </Badge>\n          );\n        }\n      },\n    },\n  ];\n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n      Showing {from} to {to} of {size} Results\n    </span>\n  );\n\n  const rowEvents = {\n    onClick: (e, row, rowIndex) => {\n      setShowTransactionDetails((prev) => !prev);\n      setTransRef(row.tranxRef);\n    },\n  };\n\n  return (\n    <>\n      <div className=\"admin-body\">\n        <div className=\"all-admins\">\n          <h6>Transaction History</h6>\n          <div className=\"admin-table transaction-table\">\n            <ToolkitProvider\n              responsive\n              keyField=\"id\"\n              data={data ? data : []}\n              columns={tableColumns}\n              exportCSV={{\n                fileName: \"transaction history data.csv\",\n              }}\n              search\n            >\n              {(props) => (\n                <div>\n                  <TransactionHistoryTableHeader\n                    csvData={props.csvProps}\n                    filter={Filter}\n                    filtered={isfiltered}\n                    dataLength={data?.length}\n                    search={props.searchProps}\n                  />\n                  {!data ? (\n                    <Loader />\n                  ) : (\n                    <BootstrapTable\n                      bootstrap4\n                      bordered={false}\n                      wrapperClasses=\"table-responsive\"\n                      rowEvents={rowEvents}\n                      pagination={paginationFactory({\n                        sizePerPage: 9,\n                        hideSizePerPage: true,\n                        showTotal: true,\n                        paginationTotalRenderer: customTotal,\n                      })}\n                      {...props.baseProps}\n                    />\n                  )}\n                </div>\n              )}\n            </ToolkitProvider>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}