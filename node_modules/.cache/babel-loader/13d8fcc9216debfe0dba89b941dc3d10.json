{"ast":null,"code":"import _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/dashboards/Reports/table.js\";\n\nimport React, { useState } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport moment from \"moment\"; //import productsData from \"./products\";\n\nimport Header from \"./Header\";\nimport Loader from \"../../../components/Loader\";\n\nvar Table = function Table(_ref) {\n  var title = _ref.title,\n      clicked = _ref.clicked,\n      index = _ref.index,\n      setIndex = _ref.setIndex,\n      number = _ref.number,\n      productsData = _ref.productsData,\n      setTransRef = _ref.setTransRef;\n\n  var _useState = useState(productsData ? productsData : []),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isfiltered = _useState4[0],\n      setIsFiltered = _useState4[1];\n\n  var currentDate = new Date();\n  var currentDateFormat = currentDate.setHours(0, 0, 0, 0);\n\n  var SearchFilter = function SearchFilter(data) {\n    var filtered = productsData;\n\n    if (data.name === \"Settl Transaction Reference\") {\n      filtered = productsData.filter(function (product) {\n        return product.tranxRef.toLocaleLowerCase().startsWith(data.value.trim());\n      });\n    }\n\n    setProducts(filtered);\n  };\n\n  var Filter = function Filter(data) {\n    setProducts(\"\");\n    var check = data.status.length > 0 || data.transactionType.length > 0 || data.startDate !== currentDateFormat || data.endDate !== currentDateFormat;\n    setTimeout(function () {\n      var filtered = productsData.filter(function (product) {\n        if (check) {\n          setIsFiltered(true);\n          var splitDate = product.date.split(\"/\");\n          var productDate = new Date(+splitDate[2], splitDate[1] - 1, +splitDate[0]).setHours(0, 0, 0, 0);\n          var isDate = data.startDate !== currentDateFormat && data.endDate !== currentDateFormat;\n          console.log(\"date\", isDate);\n          return data.transactionType.includes(product.transType.toLowerCase()) || data.status.includes(product.transStatus.toLowerCase()) || isDate && productDate >= data.startDate && productDate <= data.endDate;\n        } else {\n          setIsFiltered(false);\n          return product;\n        }\n      });\n      setProducts(filtered);\n    }, 500);\n  };\n\n  var columns = [{\n    dataField: \"tranxRef\",\n    text: \"Tranx Ref\",\n    headerStyle: {\n      backgroundColor: \"#F8F9FA\",\n      border: \"none\"\n    }\n  }, {\n    dataField: \"transType\",\n    text: \"Transaction Type\",\n    headerStyle: {\n      backgroundColor: \"#F8F9FA\",\n      border: \"none\"\n    }\n  }, {\n    dataField: \"customerNumber\",\n    text: \"\".concat(number, \" Number\"),\n    headerStyle: {\n      backgroundColor: \"#F8F9FA\",\n      border: \"none\"\n    }\n  }, {\n    dataField: \"transEntry\",\n    text: \"Entry\",\n    headerStyle: {\n      backgroundColor: \"#F8F9FA\",\n      border: \"none\"\n    }\n  }, {\n    dataField: \"amount\",\n    text: \"Amount\",\n    headerStyle: {\n      backgroundColor: \"#F8F9FA\",\n      border: \"none\"\n    }\n  }, {\n    dataField: \"date\",\n    text: \"Date\",\n    headerStyle: {\n      backgroundColor: \"#F8F9FA\",\n      border: \"none\" // textAlign: \"center\",\n\n    },\n    formatter: function formatter(cell, row, rowIndex) {\n      return cell;\n    }\n  }, {\n    dataField: \"transStatus\",\n    text: \"Transaction Status\",\n    headerStyle: {\n      backgroundColor: \"#F8F9FA\",\n      border: \"none\",\n      textAlign: \"center\"\n    },\n    style: function style() {\n      return {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      };\n    },\n    formatter: function formatter(cell, row, rowIndex) {\n      if ((cell === null || cell === void 0 ? void 0 : cell.toLowerCase()) === \"success\") {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"status success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 18\n          }\n        }, cell);\n      }\n\n      if ((cell === null || cell === void 0 ? void 0 : cell.toLowerCase()) === \"pending\") {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"status pending\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 18\n          }\n        }, cell);\n      }\n\n      if ((cell === null || cell === void 0 ? void 0 : cell.toLowerCase()) === \"failed\") {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"status failed\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 18\n          }\n        }, cell);\n      }\n    }\n  }];\n\n  var customTotal = function customTotal(from, to, size) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"react-bootstrap-table-pagination-total\",\n      style: {\n        padding: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }\n    }, \"Showing \", from, \" to \", to, \" of \", size, \" Results\");\n  };\n\n  var rowStyle = {\n    border: \"none\",\n    cursor: \"pointer\"\n  };\n  var rowEvents = {\n    onClick: function onClick(e, row) {\n      if (clicked) {\n        clicked(true);\n        setIndex(index);\n        setTransRef(row.tranxRef);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(ToolkitProvider, {\n    responsive: true,\n    keyField: \"id\",\n    data: products,\n    columns: columns,\n    exportCSV: {\n      fileName: \"transaction report.csv\"\n    },\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"table_title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, title, \" Transaction Reports\"), /*#__PURE__*/React.createElement(Header, {\n      csvData: props.csvProps,\n      filter: Filter,\n      filtered: isfiltered,\n      productLength: products.length,\n      search: props.searchProps,\n      SearchFilter: SearchFilter,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }), !products ? /*#__PURE__*/React.createElement(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n      bootstrap4: true,\n      bordered: false,\n      rowStyle: rowStyle,\n      rowEvents: rowEvents,\n      pagination: paginationFactory({\n        sizePerPage: 9,\n        hideSizePerPage: true,\n        showTotal: true,\n        paginationTotalRenderer: customTotal\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }))));\n  });\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/pages/dashboards/Reports/table.js"],"names":["React","useState","BootstrapTable","paginationFactory","ToolkitProvider","moment","Header","Loader","Table","title","clicked","index","setIndex","number","productsData","setTransRef","products","setProducts","isfiltered","setIsFiltered","currentDate","Date","currentDateFormat","setHours","SearchFilter","data","filtered","name","filter","product","tranxRef","toLocaleLowerCase","startsWith","value","trim","Filter","check","status","length","transactionType","startDate","endDate","setTimeout","splitDate","date","split","productDate","isDate","console","log","includes","transType","toLowerCase","transStatus","columns","dataField","text","headerStyle","backgroundColor","border","formatter","cell","row","rowIndex","textAlign","style","display","justifyContent","alignItems","customTotal","from","to","size","padding","rowStyle","cursor","rowEvents","onClick","e","fileName","props","csvProps","searchProps","baseProps","sizePerPage","hideSizePerPage","showTotal","paginationTotalRenderer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport moment from \"moment\";\n//import productsData from \"./products\";\nimport Header from \"./Header\";\nimport Loader from \"../../../components/Loader\";\n\nconst Table = ({\n  title,\n  clicked,\n  index,\n  setIndex,\n  number,\n  productsData,\n  setTransRef,\n}) => {\n  const [products, setProducts] = useState(productsData ? productsData : []);\n  const [isfiltered, setIsFiltered] = useState(false);\n  const currentDate = new Date();\n  const currentDateFormat = currentDate.setHours(0, 0, 0, 0);\n  const SearchFilter = (data) => {\n    let filtered = productsData;\n    if (data.name === \"Settl Transaction Reference\") {\n      filtered = productsData.filter((product) =>\n        product.tranxRef.toLocaleLowerCase().startsWith(data.value.trim())\n      );\n    }\n    setProducts(filtered);\n  };\n  const Filter = (data) => {\n    setProducts(\"\");\n    const check =\n      data.status.length > 0 ||\n      data.transactionType.length > 0 ||\n      data.startDate !== currentDateFormat ||\n      data.endDate !== currentDateFormat;\n\n    setTimeout(() => {\n      const filtered = productsData.filter((product) => {\n        if (check) {\n          setIsFiltered(true);\n\n          const splitDate = product.date.split(\"/\");\n          const productDate = new Date(\n            +splitDate[2],\n            splitDate[1] - 1,\n            +splitDate[0]\n          ).setHours(0, 0, 0, 0);\n          const isDate =\n            data.startDate !== currentDateFormat &&\n            data.endDate !== currentDateFormat;\n          console.log(\"date\", isDate);\n          return (\n            data.transactionType.includes(product.transType.toLowerCase()) ||\n            data.status.includes(product.transStatus.toLowerCase()) ||\n            (isDate &&\n              productDate >= data.startDate &&\n              productDate <= data.endDate)\n          );\n        } else {\n          setIsFiltered(false);\n          return product;\n        }\n      });\n\n      setProducts(filtered);\n    }, 500);\n  };\n  const columns = [\n    {\n      dataField: \"tranxRef\",\n      text: \"Tranx Ref\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"transType\",\n      text: \"Transaction Type\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"customerNumber\",\n      text: `${number} Number`,\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"transEntry\",\n      text: \"Entry\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"amount\",\n      text: \"Amount\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n      },\n    },\n    {\n      dataField: \"date\",\n      text: \"Date\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        // textAlign: \"center\",\n      },\n      formatter: (cell, row, rowIndex) => {\n        return cell;\n      },\n    },\n    {\n      dataField: \"transStatus\",\n      text: \"Transaction Status\",\n      headerStyle: {\n        backgroundColor: \"#F8F9FA\",\n        border: \"none\",\n        textAlign: \"center\",\n      },\n      style: () => {\n        return {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        };\n      },\n      formatter: (cell, row, rowIndex) => {\n        if (cell?.toLowerCase() === \"success\") {\n          return <p className=\"status success\">{cell}</p>;\n        }\n        if (cell?.toLowerCase() === \"pending\") {\n          return <p className=\"status pending\">{cell}</p>;\n        }\n        if (cell?.toLowerCase() === \"failed\") {\n          return <p className=\"status failed\">{cell}</p>;\n        }\n      },\n    },\n  ];\n  const customTotal = (from, to, size) => (\n    <span\n      className=\"react-bootstrap-table-pagination-total\"\n      style={{\n        padding: \"1rem\",\n      }}\n    >\n      Showing {from} to {to} of {size} Results\n    </span>\n  );\n  const rowStyle = {\n    border: \"none\",\n    cursor: \"pointer\",\n  };\n  const rowEvents = {\n    onClick: (e, row) => {\n      if (clicked) {\n        clicked(true);\n        setIndex(index);\n        setTransRef(row.tranxRef);\n      }\n    },\n  };\n  return (\n    <ToolkitProvider\n      responsive\n      keyField=\"id\"\n      data={products} \n      columns={columns}\n      exportCSV={{\n        fileName: \"transaction report.csv\",\n      }}\n      search\n    >\n      {(props) => (\n        <>\n          <div className=\"table\">\n            <p className=\"table_title\">{title} Transaction Reports</p>\n            <Header\n              csvData={props.csvProps}\n              filter={Filter}\n              filtered={isfiltered}\n              productLength={products.length}\n              search={props.searchProps}\n              SearchFilter={SearchFilter}\n            />\n            {!products ? (\n              <Loader />\n            ) : (\n              <BootstrapTable\n                {...props.baseProps}\n                bootstrap4\n                bordered={false}\n                rowStyle={rowStyle}\n                rowEvents={rowEvents}\n                pagination={paginationFactory({\n                  sizePerPage: 9,\n                  hideSizePerPage: true,\n                  showTotal: true,\n                  paginationTotalRenderer: customTotal,\n                })}\n              />\n            )}\n          </div>\n        </>\n      )}\n    </ToolkitProvider>\n  );\n};\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}