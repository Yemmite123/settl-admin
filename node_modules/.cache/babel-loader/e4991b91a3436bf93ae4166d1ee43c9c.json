{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport baseURL from \"./baseUrl\";\nimport { useSelector } from \"react-redux\";\n\nfunction create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === \"x\" ? r : r & 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n}\n\nvar AdminRequest = function AdminRequest() {\n  var _useSelector = useSelector(function (state) {\n    return state.user.details;\n  }),\n      token = _useSelector.token,\n      tokenType = _useSelector.tokenType;\n\n  var getAllAdmin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              requestId = create_UUID();\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get(baseURL + \"backoffice/AdminManagement\", {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function getAllAdmin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getAdminById = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              requestId = create_UUID();\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get(baseURL + \"backoffice/AdminManagement/\".concat(id), {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.data);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function getAdminById(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var addAdmin = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(EmployeeName, EmailAddress, PhoneNumber, AdminRole, Position, CreatedBy) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              requestId = create_UUID();\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios.post(baseURL + \"backoffice/AdminManagement\", null, {\n                params: {\n                  EmployeeName: EmployeeName,\n                  EmailAddress: EmailAddress,\n                  PhoneNumber: PhoneNumber,\n                  AdminRole: AdminRole,\n                  Position: Position,\n                  CreatedBy: CreatedBy\n                },\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  \"content-type\": \"multipart/form-data\",\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response.data);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    return function addAdmin(_x2, _x3, _x4, _x5, _x6, _x7) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var updateAdmin = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              requestId = create_UUID();\n              _context4.prev = 1;\n              _context4.next = 4;\n              return axios.put(baseURL + \"backoffice/AdminManagement\", data, {\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response.data);\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 8]]);\n    }));\n\n    return function updateAdmin(_x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var deactivateAdmin = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, isActive, superAdminEmail) {\n      var requestId, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              requestId = create_UUID();\n              _context5.prev = 1;\n              _context5.next = 4;\n              return axios.patch(baseURL + \"backoffice/AdminManagement/Deactivate\", null, {\n                params: {\n                  id: id,\n                  isActive: isActive,\n                  superAdminEmail: superAdminEmail\n                },\n                headers: {\n                  \"X-RequestId\": \"\".concat(requestId),\n                  Authorization: \"\".concat(tokenType, \" \").concat(token)\n                }\n              });\n\n            case 4:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response.data);\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 8]]);\n    }));\n\n    return function deactivateAdmin(_x9, _x10, _x11) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return {\n    getAllAdmin: getAllAdmin,\n    getAdminById: getAdminById,\n    addAdmin: addAdmin,\n    updateAdmin: updateAdmin,\n    deactivateAdmin: deactivateAdmin\n  };\n};\n\nexport default AdminRequest;","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settladminfront-end/src/requests/admin.js"],"names":["axios","baseURL","useSelector","create_UUID","dt","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","AdminRequest","state","user","details","token","tokenType","getAllAdmin","requestId","get","headers","Authorization","response","data","getAdminById","id","addAdmin","EmployeeName","EmailAddress","PhoneNumber","AdminRole","Position","CreatedBy","post","params","updateAdmin","put","deactivateAdmin","isActive","superAdminEmail","patch"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport baseURL from \"./baseUrl\";\nimport { useSelector } from \"react-redux\";\n\nfunction create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n    /[xy]/g,\n    function (c) {\n      var r = (dt + Math.random() * 16) % 16 | 0;\n      dt = Math.floor(dt / 16);\n      return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    }\n  );\n  return uuid;\n}\n\nconst AdminRequest = () => {\n    const { token, tokenType } = useSelector((state) => state.user.details);\n    const getAllAdmin = async () => {\n        let requestId = create_UUID();\n\n        try {\n            const response = await axios.get(baseURL + \"backoffice/AdminManagement\", {\n                headers: {\n                    \"X-RequestId\": `${requestId}`,\n                    Authorization: `${tokenType} ${token}`,\n                },\n            });\n            return response.data;\n        } catch (error) {\n            return error;\n        }\n    };\n\n    const getAdminById = async (id) => {\n        let requestId = create_UUID();\n\n        try {\n            const response = await axios.get(baseURL + `backoffice/AdminManagement/${id}`, {\n                headers: { \n                    \"X-RequestId\": `${requestId}`,\n                    Authorization: `${tokenType} ${token}`,\n                }\n            });\n            return response.data;\n        } catch (error) {\n            return error;\n        }\n    };\n\n    const addAdmin = async (\n      EmployeeName, \n      EmailAddress,\n      PhoneNumber, \n      AdminRole, \n      Position, \n      CreatedBy\n    ) => {\n        let requestId = create_UUID();\n    \n        try {\n          const response = await axios.post(\n            baseURL + \"backoffice/AdminManagement\",\n            null,\n            {\n              params: {\n                EmployeeName,\n                EmailAddress,\n                PhoneNumber,\n                AdminRole,\n                Position,\n                CreatedBy\n              },\n              headers: {\n                \"X-RequestId\": `${requestId}`,\n                \"content-type\": \"multipart/form-data\",\n                Authorization: `${tokenType} ${token}`,\n              }\n            }\n          );\n          return response.data;\n        } catch (error) {\n          return error;\n        }\n    };\n\n    const updateAdmin = async (data) => {\n        let requestId = create_UUID();\n    \n        try {\n          const response = await axios.put(\n            baseURL + \"backoffice/AdminManagement\",\n            data,\n            {\n              headers: {\n                \"X-RequestId\": `${requestId}`,\n                Authorization: `${tokenType} ${token}`,\n              },\n            }\n          );\n          return response.data;\n        } catch (error) {\n          return error;\n        }\n    };\n\n    const deactivateAdmin = async (id, isActive, superAdminEmail) => {\n        let requestId = create_UUID();\n\n        try {\n            const response = await axios.patch(\n                baseURL + \"backoffice/AdminManagement/Deactivate\", null, {\n                    params: {\n                        id,\n                        isActive,\n                        superAdminEmail\n                    },   \n                    headers: { \n                        \"X-RequestId\": `${requestId}`,\n                        Authorization: `${tokenType} ${token}`,\n                    }\n                }\n            );\n            return response.data;\n        } catch (error) {\n            return error;\n        }\n    };\n\n    return {\n        getAllAdmin,\n        getAdminById,\n        addAdmin,\n        updateAdmin,\n        deactivateAdmin\n    }\n}\n\nexport default AdminRequest;\n"]},"metadata":{},"sourceType":"module"}