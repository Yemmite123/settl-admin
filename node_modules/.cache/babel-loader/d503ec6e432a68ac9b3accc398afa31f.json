{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/contexts/VendorContext.js\";\nimport React, { useContext, useState, useEffect, createContext } from \"react\";\nimport vendorsRequest from \"../requests/vendor-management\";\nvar APIContext = createContext();\nexport function APIContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      vendors = _useState2[0],\n      setVendors = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      banks = _useState4[0],\n      setBanks = _useState4[1];\n\n  var _vendorsRequest = vendorsRequest(),\n      getAllBanks = _vendorsRequest.getAllBanks,\n      getVendors = _vendorsRequest.getVendors;\n\n  var getVendorList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getVendors();\n\n            case 2:\n              response = _context.sent;\n\n              if (response.code == \"00\") {\n                console.log(response.data);\n                setVendors(response.data);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getVendorList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getBankList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getAllBanks();\n\n            case 2:\n              response = _context2.sent;\n\n              if (response.code == \"00\") {\n                console.log(response.data);\n                setBanks(response.data);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getBankList() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var refreshVendor = function refreshVendor() {\n    setVendors([]);\n    getVendorList();\n  };\n\n  var refreshBankList = function refreshBankList() {\n    setBanks([]);\n    getBankList();\n  };\n\n  useEffect(function () {\n    getVendorList();\n    getBankList();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Add required values to the value prop within an object\n    React.createElement(APIContext.Provider, {\n      value: {\n        vendors: vendors,\n        banks: banks,\n        refreshVendor: refreshVendor,\n        refreshBankList: refreshBankList\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, children)\n  );\n} // Create a hook to use the APIContext, this is a Kent C. Dodds pattern\n\nexport function useAPI() {\n  var context = useContext(APIContext);\n\n  if (context === undefined) {\n    throw new Error(\"Context must be used within a Provider\");\n  }\n\n  return context;\n}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/contexts/VendorContext.js"],"names":["React","useContext","useState","useEffect","createContext","vendorsRequest","APIContext","APIContextProvider","children","vendors","setVendors","banks","setBanks","getAllBanks","getVendors","getVendorList","response","code","console","log","data","getBankList","refreshVendor","refreshBankList","useAPI","context","undefined","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,IAAMC,UAAU,GAAGF,aAAa,EAAhC;AAEA,OAAO,SAASG,kBAAT,OAA0C;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAC/C,kBAA8BN,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AAEA,wBAAoCP,cAAc,EAAlD;AAAA,MAAQQ,WAAR,mBAAQA,WAAR;AAAA,MAAqBC,UAArB,mBAAqBA,UAArB;;AAEA,MAAMC,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGD,UAAU,EADb;;AAAA;AACdE,cAAAA,QADc;;AAEpB,kBAAIA,QAAQ,CAACC,IAAT,IAAiB,IAArB,EAA2B;AACzBC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAV,gBAAAA,UAAU,CAACM,QAAQ,CAACI,IAAV,CAAV;AACD;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbL,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAQA,MAAMM,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKR,WAAW,EADhB;;AAAA;AACZG,cAAAA,QADY;;AAElB,kBAAIA,QAAQ,CAACC,IAAT,IAAiB,IAArB,EAA2B;AACzBC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAR,gBAAAA,QAAQ,CAACI,QAAQ,CAACI,IAAV,CAAR;AACD;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXC,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAOA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BZ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAK,IAAAA,aAAa;AACd,GAHD;;AAIA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAS,IAAAA,WAAW;AACZ,GAHD;;AAIAlB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,aAAa;AACbM,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;AAKA;AAAA;AACE;AACA,wBAAC,UAAD,CAAY,QAAZ;AACE,MAAA,KAAK,EAAE;AAAEZ,QAAAA,OAAO,EAAPA,OAAF;AAAWE,QAAAA,KAAK,EAALA,KAAX;AAAkBW,QAAAA,aAAa,EAAbA,aAAlB;AAAiCC,QAAAA,eAAe,EAAfA;AAAjC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGf,QAHH;AAFF;AAQD,C,CAED;;AACA,OAAO,SAASgB,MAAT,GAAkB;AACvB,MAAMC,OAAO,GAAGxB,UAAU,CAACK,UAAD,CAA1B;;AACA,MAAImB,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD","sourcesContent":["import React, { useContext, useState, useEffect, createContext } from \"react\";\nimport vendorsRequest from \"../requests/vendor-management\";\n\nconst APIContext = createContext();\n\nexport function APIContextProvider({ children }) {\n  const [vendors, setVendors] = useState([]);\n  const [banks, setBanks] = useState([]);\n\n  const { getAllBanks, getVendors } = vendorsRequest();\n\n  const getVendorList = async () => {\n    const response = await getVendors();\n    if (response.code == \"00\") {\n      console.log(response.data);\n      setVendors(response.data);\n    }\n  };\n\n  const getBankList = async () => {\n    const response = await getAllBanks();\n    if (response.code == \"00\") {\n      console.log(response.data);\n      setBanks(response.data);\n    }\n  };\n  const refreshVendor = () => {\n    setVendors([]);\n    getVendorList();\n  };\n  const refreshBankList = () => {\n    setBanks([]);\n    getBankList();\n  };\n  useEffect(() => {\n    getVendorList();\n    getBankList();\n  }, []);\n\n  return (\n    // Add required values to the value prop within an object\n    <APIContext.Provider\n      value={{ vendors, banks, refreshVendor, refreshBankList }}\n    >\n      {children}\n    </APIContext.Provider>\n  );\n}\n\n// Create a hook to use the APIContext, this is a Kent C. Dodds pattern\nexport function useAPI() {\n  const context = useContext(APIContext);\n  if (context === undefined) {\n    throw new Error(\"Context must be used within a Provider\");\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}