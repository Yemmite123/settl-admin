{"ast":null,"code":"import _regeneratorRuntime from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect,createContext}from\"react\";import adminRequest from\"../requests/admin\";var APIContext=createContext();export function APIContextProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),adminData=_useState2[0],setAdminData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),updateAdmin=_useState4[0],setUpdateAdmin=_useState4[1];var _adminRequest=adminRequest(),getAllAdmin=_adminRequest.getAllAdmin;var getRecentAdminList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getAllAdmin();case 2:response=_context.sent;if(response.code===\"00\"){console.log(response.data);setAdminData(response.data);setUpdateAdmin(false);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function getRecentAdminList(){return _ref2.apply(this,arguments);};}();var changeUpdateStatus=function changeUpdateStatus(){setUpdateAdmin(true);};useEffect(function(){getRecentAdminList();},[updateAdmin]);return/*#__PURE__*/ (// Add required values to the value prop within an object\nReact.createElement(APIContext.Provider,{value:{adminData:adminData,changeUpdateStatus:changeUpdateStatus}},children));}// Create a hook to use the APIContext, this is a Kent C. Dodds pattern\nexport function useAPI(){var context=useContext(APIContext);if(context===undefined){throw new Error(\"Context must be used within a Provider\");}return context;}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /settl-backoffice/src/contexts/AdminContext.js"],"names":["React","useContext","useState","useEffect","createContext","adminRequest","APIContext","APIContextProvider","children","adminData","setAdminData","updateAdmin","setUpdateAdmin","getAllAdmin","getRecentAdminList","response","code","console","log","data","changeUpdateStatus","useAPI","context","undefined","Error"],"mappings":"6mBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,CAAiDC,aAAjD,KAAsE,OAAtE,CACA,MAAOC,CAAAA,YAAP,KAAyB,mBAAzB,CAEA,GAAMC,CAAAA,UAAU,CAAGF,aAAa,EAAhC,CAEA,MAAO,SAASG,CAAAA,kBAAT,MAA0C,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC/C,cAAkCN,QAAQ,CAAC,EAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAAsCR,QAAQ,CAAC,IAAD,CAA9C,yCAAOS,WAAP,eAAoBC,cAApB,eACA,kBAAwBP,YAAY,EAApC,CAAQQ,WAAR,eAAQA,WAAR,CAEA,GAAMC,CAAAA,kBAAkB,2FAAG,sKACFD,CAAAA,WAAW,EADT,QACnBE,QADmB,eAEzB,GAAIA,QAAQ,CAACC,IAAT,GAAkB,IAAtB,CAA4B,CAC1BC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB,EACAT,YAAY,CAACK,QAAQ,CAACI,IAAV,CAAZ,CACAP,cAAc,CAAC,KAAD,CAAd,CACD,CANwB,sDAAH,kBAAlBE,CAAAA,kBAAkB,2CAAxB,CASA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BR,cAAc,CAAC,IAAD,CAAd,CACD,CAFD,CAGAT,SAAS,CAAC,UAAM,CACdW,kBAAkB,GACnB,CAFQ,CAEN,CAACH,WAAD,CAFM,CAAT,CAIA,oBACE;AACA,oBAAC,UAAD,CAAY,QAAZ,EAAqB,KAAK,CAAE,CAAEF,SAAS,CAATA,SAAF,CAAaW,kBAAkB,CAAlBA,kBAAb,CAA5B,EACGZ,QADH,CAFF,EAMD,CAED;AACA,MAAO,SAASa,CAAAA,MAAT,EAAkB,CACvB,GAAMC,CAAAA,OAAO,CAAGrB,UAAU,CAACK,UAAD,CAA1B,CACA,GAAIgB,OAAO,GAAKC,SAAhB,CAA2B,CACzB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,wCAAV,CAAN,CACD,CACD,MAAOF,CAAAA,OAAP,CACD","sourcesContent":["import React, { useContext, useState, useEffect, createContext } from \"react\";\nimport adminRequest from \"../requests/admin\";\n\nconst APIContext = createContext();\n\nexport function APIContextProvider({ children }) {\n  const [adminData, setAdminData] = useState([]);\n  const [updateAdmin, setUpdateAdmin] = useState(true);\n  const { getAllAdmin } = adminRequest();\n\n  const getRecentAdminList = async () => {\n    const response = await getAllAdmin();\n    if (response.code === \"00\") {\n      console.log(response.data);\n      setAdminData(response.data);\n      setUpdateAdmin(false);\n    }\n  };\n\n  const changeUpdateStatus = () => {\n    setUpdateAdmin(true);\n  };\n  useEffect(() => {\n    getRecentAdminList();\n  }, [updateAdmin]);\n\n  return (\n    // Add required values to the value prop within an object\n    <APIContext.Provider value={{ adminData, changeUpdateStatus }}>\n      {children}\n    </APIContext.Provider>\n  );\n}\n\n// Create a hook to use the APIContext, this is a Kent C. Dodds pattern\nexport function useAPI() {\n  const context = useContext(APIContext);\n  if (context === undefined) {\n    throw new Error(\"Context must be used within a Provider\");\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}