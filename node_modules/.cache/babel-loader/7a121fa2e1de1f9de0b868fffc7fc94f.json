{"ast":null,"code":"import _regeneratorRuntime from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/customers/settl-customers/Index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CustomerDetails from \"./CustomerDetails\";\nimport CustomerTable from \"./CustomersTable\";\nimport Header from \"./Header\";\nimport Statistics from \"./Statistics\";\nimport Loader from \"../../../components/Loader\";\nimport Request from \"../../../requests/customer\";\nexport default function SettlCustomers() {\n  var _Request = Request(),\n      customerAnalytics = _Request.customerAnalytics;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showDetails = _useState2[0],\n      setShowDetails = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableData = _useState4[0],\n      setTableData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stats = _useState6[0],\n      setStats = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phoneNumber = _useState8[0],\n      setPhoneNumber = _useState8[1];\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, _response$data, volumeOfNewUser, percentVolOfNewUser, dormantUser, percentDormantUsers, volumeOfActiveUser, percentActiveUser, volumeOfInactiveUser, percentInactiveUser, listOfConsumers;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return customerAnalytics(1);\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n\n              if (response.code == \"00\") {\n                _response$data = response.data, volumeOfNewUser = _response$data.volumeOfNewUser, percentVolOfNewUser = _response$data.percentVolOfNewUser, dormantUser = _response$data.dormantUser, percentDormantUsers = _response$data.percentDormantUsers, volumeOfActiveUser = _response$data.volumeOfActiveUser, percentActiveUser = _response$data.percentActiveUser, volumeOfInactiveUser = _response$data.volumeOfInactiveUser, percentInactiveUser = _response$data.percentInactiveUser, listOfConsumers = _response$data.listOfConsumers;\n                setStats({\n                  volumeOfNewUser: volumeOfNewUser,\n                  percentVolOfNewUser: percentVolOfNewUser,\n                  dormantUser: dormantUser,\n                  percentDormantUsers: percentDormantUsers,\n                  volumeOfActiveUser: volumeOfActiveUser,\n                  percentActiveUser: percentActiveUser,\n                  volumeOfInactiveUser: volumeOfInactiveUser,\n                  percentInactiveUser: percentInactiveUser\n                });\n                setTableData(listOfConsumers);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var refresh = function refresh() {\n    setStats(null);\n    setTableData(null);\n    fetchData();\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, !tableData && !stats ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, !showDetails ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Customer Data\",\n    refresh: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    stats: stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomerTable, {\n    setShowDetails: setShowDetails,\n    tableData: tableData,\n    setPhoneNumber: setPhoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(CustomerDetails, {\n    setShowDetails: setShowDetails,\n    phoneNumber: phoneNumber,\n    setTableData: setTableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/UPDATED SETTL ADMIN BACKOFFICE /OLUYEMI SETTL TESTING FOR ADMIN/src/pages/customers/settl-customers/Index.js"],"names":["React","useState","useEffect","CustomerDetails","CustomerTable","Header","Statistics","Loader","Request","SettlCustomers","customerAnalytics","showDetails","setShowDetails","tableData","setTableData","stats","setStats","phoneNumber","setPhoneNumber","fetchData","response","console","log","code","data","volumeOfNewUser","percentVolOfNewUser","dormantUser","percentDormantUsers","volumeOfActiveUser","percentActiveUser","volumeOfInactiveUser","percentInactiveUser","listOfConsumers","refresh"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CustomerDetails from \"./CustomerDetails\";\nimport CustomerTable from \"./CustomersTable\";\nimport Header from \"./Header\";\nimport Statistics from \"./Statistics\";\nimport Loader from \"../../../components/Loader\";\nimport Request from \"../../../requests/customer\";\n\nexport default function SettlCustomers() {\n  const { customerAnalytics } = Request();\n  const [showDetails, setShowDetails] = useState(false);\n  const [tableData, setTableData] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [phoneNumber, setPhoneNumber] = useState(null);\n  const fetchData = async () => {\n    const response = await customerAnalytics(1);\n    console.log(response);\n    if (response.code == \"00\") {\n      const {\n        volumeOfNewUser,\n        percentVolOfNewUser,\n        dormantUser,\n        percentDormantUsers,\n        volumeOfActiveUser,\n        percentActiveUser,\n        volumeOfInactiveUser,\n        percentInactiveUser,\n        listOfConsumers,\n      } = response.data;\n      setStats({\n        volumeOfNewUser,\n        percentVolOfNewUser,\n        dormantUser,\n        percentDormantUsers,\n        volumeOfActiveUser,\n        percentActiveUser,\n        volumeOfInactiveUser,\n        percentInactiveUser,\n      });\n      setTableData(listOfConsumers);\n    }\n  };\n  const refresh = () => {\n    setStats(null);\n    setTableData(null);\n    fetchData();\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <>\n      <div className=\"customers\">\n        {!tableData && !stats ? (\n          <Loader />\n        ) : (\n          <>\n            {!showDetails ? (\n              <>\n                <Header title=\"Customer Data\" refresh={refresh} />\n                <Statistics stats={stats} />\n                <CustomerTable\n                  setShowDetails={setShowDetails}\n                  tableData={tableData}\n                  setPhoneNumber={setPhoneNumber}\n                />\n              </>\n            ) : (\n              <CustomerDetails\n                setShowDetails={setShowDetails}\n                phoneNumber={phoneNumber}\n                setTableData={setTableData}\n              />\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}